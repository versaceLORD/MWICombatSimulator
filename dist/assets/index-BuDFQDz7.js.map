{"version":3,"file":"index-BuDFQDz7.js","sources":["../../src/combatsimulator/equipment.js","../../src/combatsimulator/buff.js","../../src/combatsimulator/trigger.js","../../src/combatsimulator/ability.js","../../src/combatsimulator/combatUnit.js","../../src/combatsimulator/consumable.js","../../src/combatsimulator/player.js","../../src/main.js"],"sourcesContent":["import itemDetailMap from \"./data/itemDetailMap.json\";\nimport enhancementLevelTotalMultiplierTable from \"./data/enhancementLevelTotalMultiplierTable.json\";\n\nclass Equipment {\n    constructor(hrid, enhancementLevel) {\n        this.hrid = hrid;\n        let gameItem = itemDetailMap[this.hrid];\n        if (!gameItem) {\n            throw new Error(\"No equipment found for hrid: \" + this.hrid);\n        }\n        this.gameItem = gameItem;\n        this.enhancementLevel = enhancementLevel;\n    }\n\n    static createFromDTO(dto) {\n        let equipment = new Equipment(dto.hrid, dto.enhancementLevel);\n\n        return equipment;\n    }\n\n    getCombatStat(combatStat) {\n        let multiplier = enhancementLevelTotalMultiplierTable[this.enhancementLevel];\n\n        let stat =\n            this.gameItem.equipmentDetail.combatStats[combatStat] +\n            multiplier * this.gameItem.equipmentDetail.combatEnhancementBonuses[combatStat];\n\n        return stat;\n    }\n\n    getCombatStyle() {\n        return this.gameItem.equipmentDetail.combatStats.combatStyleHrids[0];\n    }\n\n    getDamageType() {\n        return this.gameItem.equipmentDetail.combatStats.damageType;\n    }\n}\n\nexport default Equipment;\n","class Buff {\n    startTime;\n\n    constructor(buff, level = 1) {\n        this.sourceHrid = buff.sourceHrid;\n        this.typeHrid = buff.typeHrid;\n        this.ratioBoost = buff.ratioBoost + (level - 1) * buff.ratioBoostLevelBonus;\n        this.flatBoost = buff.flatBoost + (level - 1) * buff.flatBoostLevelBonus;\n        this.duration = buff.duration;\n    }\n}\n\nexport default Buff;\n","import combatTriggerDependencyDetailMap from \"./data/combatTriggerDependencyDetailMap.json\";\n\nclass Trigger {\n    constructor(dependencyHrid, conditionHrid, comparatorHrid, value = 0) {\n        this.dependencyHrid = dependencyHrid;\n        this.conditionHrid = conditionHrid;\n        this.comparatorHrid = comparatorHrid;\n        this.value = value;\n    }\n\n    static createFromDTO(dto) {\n        let trigger = new Trigger(dto.dependencyHrid, dto.conditionHrid, dto.comparatorHrid, dto.value);\n\n        return trigger;\n    }\n\n    isActive(source, target, friendlies, enemies, currentTime) {\n        if (combatTriggerDependencyDetailMap[this.dependencyHrid].isSingleTarget) {\n            return this.isActiveSingleTarget(source, target, currentTime);\n        } else {\n            return this.isActiveMultiTarget(friendlies, enemies, currentTime);\n        }\n    }\n\n    isActiveSingleTarget(source, target, currentTime) {\n        let dependencyValue;\n        switch (this.dependencyHrid) {\n            case \"/combat_trigger_dependencies/self\":\n                dependencyValue = this.getDependencyValue(source, currentTime);\n                break;\n            case \"/combat_trigger_dependencies/targeted_enemy\":\n                if (!target) {\n                    return false;\n                }\n                dependencyValue = this.getDependencyValue(target, currentTime);\n                break;\n            default:\n                throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n        }\n\n        return this.compareValue(dependencyValue);\n    }\n\n    isActiveMultiTarget(friendlies, enemies, currentTime) {\n        let dependency;\n        switch (this.dependencyHrid) {\n            case \"/combat_trigger_dependencies/all_allies\":\n                dependency = friendlies;\n                break;\n            case \"/combat_trigger_dependencies/all_enemies\":\n                if (!enemies) {\n                    return false;\n                }\n                dependency = enemies;\n                break;\n            default:\n                throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n        }\n\n        let dependencyValue;\n        switch (this.conditionHrid) {\n            case \"/combat_trigger_conditions/number_of_active_units\":\n                dependencyValue = dependency.filter((unit) => unit.combatDetails.currentHitpoints > 0).length;\n                break;\n            default:\n                dependencyValue = dependency\n                    .map((unit) => this.getDependencyValue(unit, currentTime))\n                    .reduce((prev, cur) => prev + cur, 0);\n                break;\n        }\n\n        return this.compareValue(dependencyValue);\n    }\n\n    getDependencyValue(source, currentTime) {\n        switch (this.conditionHrid) {\n            case \"/combat_trigger_conditions/attack_coffee\":\n            case \"/combat_trigger_conditions/berserk\":\n            case \"/combat_trigger_conditions/defense_coffee\":\n            case \"/combat_trigger_conditions/elemental_affinity_fire_amplify\":\n            case \"/combat_trigger_conditions/elemental_affinity_nature_amplify\":\n            case \"/combat_trigger_conditions/elemental_affinity_water_amplify\":\n            case \"/combat_trigger_conditions/frenzy\":\n            case \"/combat_trigger_conditions/intelligence_coffee_max_mp\":\n            case \"/combat_trigger_conditions/intelligence_coffee_mp_regen\":\n            case \"/combat_trigger_conditions/lucky_coffee\":\n            case \"/combat_trigger_conditions/magic_coffee\":\n            case \"/combat_trigger_conditions/power_coffee\":\n            case \"/combat_trigger_conditions/precision\":\n            case \"/combat_trigger_conditions/ranged_coffee\":\n            case \"/combat_trigger_conditions/spike_shell\":\n            case \"/combat_trigger_conditions/stamina_coffee_hp_regen\":\n            case \"/combat_trigger_conditions/stamina_coffee_max_hp\":\n            case \"/combat_trigger_conditions/swiftness_coffee\":\n            case \"/combat_trigger_conditions/toughness_armor\":\n            case \"/combat_trigger_conditions/toughness_fire_resistance\":\n            case \"/combat_trigger_conditions/toughness_nature_resistance\":\n            case \"/combat_trigger_conditions/toughness_water_resistance\":\n            case \"/combat_trigger_conditions/vampirism\":\n            case \"/combat_trigger_conditions/wisdom_coffee\":\n                let buffHrid = \"/buff_sources\";\n                buffHrid += this.conditionHrid.slice(this.conditionHrid.lastIndexOf(\"/\"));\n                return source.combatBuffs[buffHrid];\n            case \"/combat_trigger_conditions/current_hp\":\n                return source.combatDetails.currentHitpoints;\n            case \"/combat_trigger_conditions/current_mp\":\n                return source.combatDetails.currentManapoints;\n            case \"/combat_trigger_conditions/missing_hp\":\n                return source.combatDetails.maxHitpoints - source.combatDetails.currentHitpoints;\n            case \"/combat_trigger_conditions/missing_mp\":\n                return source.combatDetails.maxManapoints - source.combatDetails.currentManapoints;\n            case \"/combat_trigger_conditions/stun_status\":\n                // Replicate the game's behaviour of \"stun status active\" triggers activating\n                // immediately after the stun has worn off\n                return source.isStunned || source.stunExpireTime == currentTime;\n            default:\n                throw new Error(\"Unknown conditionHrid in trigger: \" + this.conditionHrid);\n        }\n    }\n\n    compareValue(dependencyValue) {\n        switch (this.comparatorHrid) {\n            case \"/combat_trigger_comparators/greater_than_equal\":\n                return dependencyValue >= this.value;\n            case \"/combat_trigger_comparators/less_than_equal\":\n                return dependencyValue <= this.value;\n            case \"/combat_trigger_comparators/is_active\":\n                return !!dependencyValue;\n            case \"/combat_trigger_comparators/is_inactive\":\n                return !dependencyValue;\n            default:\n                throw new Error(\"Unknown comparatorHrid in trigger: \" + this.comparatorHrid);\n        }\n    }\n}\n\nexport default Trigger;\n","import Buff from \"./buff\";\nimport abilityDetailMap from \"./data/abilityDetailMap.json\";\nimport Trigger from \"./trigger\";\n\nclass Ability {\n    constructor(hrid, level, triggers = null) {\n        this.hrid = hrid;\n        this.level = level;\n\n        let gameAbility = abilityDetailMap[hrid];\n        if (!gameAbility) {\n            throw new Error(\"No ability found for hrid: \" + this.hrid);\n        }\n\n        this.manaCost = gameAbility.manaCost;\n        this.cooldownDuration = gameAbility.cooldownDuration;\n\n        this.abilityEffects = [];\n\n        for (const effect of gameAbility.abilityEffects) {\n            let abilityEffect = {\n                targetType: effect.targetType,\n                effectType: effect.effectType,\n                combatStyleHrid: effect.combatStyleHrid,\n                damageType: effect.damageType,\n                damageFlat: effect.baseDamageFlat + (this.level - 1) * effect.baseDamageFlatLevelBonus,\n                damageRatio: effect.baseDamageRatio + (this.level - 1) * effect.baseDamageRatioLevelBonus,\n                bleedRatio: effect.bleedRatio,\n                bleedDuration: effect.bleedDuration,\n                stunChance: effect.stunChance,\n                stunDuration: effect.stunDuration,\n                buffs: null,\n            };\n            if (effect.buffs) {\n                abilityEffect.buffs = [];\n                for (const buff of effect.buffs) {\n                    abilityEffect.buffs.push(new Buff(buff, this.level));\n                }\n            }\n            this.abilityEffects.push(abilityEffect);\n        }\n\n        if (triggers) {\n            this.triggers = triggers;\n        } else {\n            this.triggers = [];\n            for (const defaultTrigger of gameAbility.defaultCombatTriggers) {\n                let trigger = new Trigger(\n                    defaultTrigger.dependencyHrid,\n                    defaultTrigger.conditionHrid,\n                    defaultTrigger.comparatorHrid,\n                    defaultTrigger.value\n                );\n                this.triggers.push(trigger);\n            }\n        }\n\n        this.lastUsed = Number.MIN_SAFE_INTEGER;\n    }\n\n    static createFromDTO(dto) {\n        let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n        let ability = new Ability(dto.hrid, dto.level, triggers);\n\n        return ability;\n    }\n\n    shouldTrigger(currentTime, source, target, friendlies, enemies) {\n        if (source.isStunned) {\n            return false;\n        }\n\n        if (this.lastUsed + this.cooldownDuration > currentTime) {\n            return false;\n        }\n\n        if (this.triggers.length == 0) {\n            return true;\n        }\n\n        let shouldTrigger = true;\n        for (const trigger of this.triggers) {\n            if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n                shouldTrigger = false;\n            }\n        }\n\n        return shouldTrigger;\n    }\n}\n\nexport default Ability;\n","class CombatUnit {\n    isPlayer;\n    isStunned = false;\n    stunExpireTime = null;\n\n    // Base levels which don't change after initialization\n    staminaLevel = 1;\n    intelligenceLevel = 1;\n    attackLevel = 1;\n    powerLevel = 1;\n    defenseLevel = 1;\n    rangedLevel = 1;\n    magicLevel = 1;\n\n    abilities = [null, null, null, null];\n    food = [null, null, null];\n    drinks = [null, null, null];\n\n    // Calculated combat stats including temporary buffs\n    combatDetails = {\n        staminaLevel: 1,\n        intelligenceLevel: 1,\n        attackLevel: 1,\n        powerLevel: 1,\n        defenseLevel: 1,\n        rangedLevel: 1,\n        magicLevel: 1,\n        maxHitpoints: 110,\n        currentHitpoints: 110,\n        maxManapoints: 110,\n        currentManapoints: 110,\n        stabAccuracyRating: 11,\n        slashAccuracyRating: 11,\n        smashAccuracyRating: 11,\n        rangedAccuracyRating: 11,\n        stabMaxDamage: 11,\n        slashMaxDamage: 11,\n        smashMaxDamage: 11,\n        rangedMaxDamage: 11,\n        magicMaxDamage: 11,\n        stabEvasionRating: 11,\n        slashEvasionRating: 11,\n        smashEvasionRating: 11,\n        rangedEvasionRating: 11,\n        totalArmor: 0.2,\n        totalWaterResistance: 0.4,\n        totalNatureResistance: 0.4,\n        totalFireResistance: 0.4,\n        combatStats: {\n            combatStyleHrid: \"/combat_styles/smash\",\n            damageType: \"/damage_types/physical\",\n            attackInterval: 3000000000,\n            stabAccuracy: 0,\n            slashAccuracy: 0,\n            smashAccuracy: 0,\n            rangedAccuracy: 0,\n            stabDamage: 0,\n            slashDamage: 0,\n            smashDamage: 0,\n            rangedDamage: 0,\n            magicDamage: 0,\n            physicalAmplify: 0,\n            waterAmplify: 0,\n            natureAmplify: 0,\n            fireAmplify: 0,\n            healingAmplify: 0,\n            stabEvasion: 0,\n            slashEvasion: 0,\n            smashEvasion: 0,\n            rangedEvasion: 0,\n            armor: 0,\n            waterResistance: 0,\n            natureResistance: 0,\n            fireResistance: 0,\n            maxHitpoints: 0,\n            maxManapoints: 0,\n            lifeSteal: 0,\n            HPRegen: 0.01,\n            MPRegen: 0.01,\n            physicalReflectPower: 0,\n            dropRate: 0,\n            dropQuantity: 0,\n            experienceRate: 0,\n            foodSlots: 1,\n            drinkSlots: 1,\n        },\n    };\n    combatBuffs = {};\n\n    constructor() {}\n\n    updateCombatDetails() {\n        this.combatDetails.combatStats.HPRegen = 0.01;\n        this.combatDetails.combatStats.MPRegen = 0.01;\n\n        [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((stat) => {\n            this.combatDetails[stat + \"Level\"] = this[stat + \"Level\"];\n            let boosts = this.getBuffBoosts(\"/buff_types/\" + stat + \"_level\");\n            boosts.forEach((buff) => {\n                this.combatDetails[stat + \"Level\"] += Math.floor(this[stat + \"Level\"] * buff.ratioBoost);\n                this.combatDetails[stat + \"Level\"] += buff.flatBoost;\n            });\n        });\n\n        this.combatDetails.maxHitpoints =\n            10 * (10 + this.combatDetails.staminaLevel) + this.combatDetails.combatStats.maxHitpoints;\n        this.combatDetails.maxManapoints =\n            10 * (10 + this.combatDetails.intelligenceLevel) + this.combatDetails.combatStats.maxManapoints;\n\n        let accuracyRatioBoost = this.getBuffBoost(\"/buff_types/accuracy\").ratioBoost;\n        let damageRatioBoost = this.getBuffBoost(\"/buff_types/damage\").ratioBoost;\n\n        [\"stab\", \"slash\", \"smash\"].forEach((style) => {\n            this.combatDetails[style + \"AccuracyRating\"] =\n                (10 + this.combatDetails.attackLevel) *\n                (1 + this.combatDetails.combatStats[style + \"Accuracy\"]) *\n                (1 + accuracyRatioBoost);\n            this.combatDetails[style + \"MaxDamage\"] =\n                (10 + this.combatDetails.powerLevel) *\n                (1 + this.combatDetails.combatStats[style + \"Damage\"]) *\n                (1 + damageRatioBoost);\n            this.combatDetails[style + \"EvasionRating\"] =\n                (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats[style + \"Evasion\"]);\n        });\n\n        this.combatDetails.rangedAccuracyRating =\n            (10 + this.combatDetails.rangedLevel) *\n            (1 + this.combatDetails.combatStats.rangedAccuracy) *\n            (1 + accuracyRatioBoost);\n        this.combatDetails.rangedMaxDamage =\n            (10 + this.combatDetails.rangedLevel) *\n            (1 + this.combatDetails.combatStats.rangedDamage) *\n            (1 + damageRatioBoost);\n        this.combatDetails.rangedEvasionRating =\n            (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats.rangedEvasion);\n\n        this.combatDetails.magicMaxDamage =\n            (10 + this.combatDetails.magicLevel) *\n            (1 + this.combatDetails.combatStats.magicDamage) *\n            (1 + damageRatioBoost);\n\n        this.combatDetails.combatStats.physicalAmplify += this.getBuffBoost(\"/buff_types/physical_amplify\").flatBoost;\n        this.combatDetails.combatStats.waterAmplify += this.getBuffBoost(\"/buff_types/water_amplify\").flatBoost;\n        this.combatDetails.combatStats.natureAmplify += this.getBuffBoost(\"/buff_types/nature_amplify\").flatBoost;\n        this.combatDetails.combatStats.fireAmplify += this.getBuffBoost(\"/buff_types/fire_amplify\").flatBoost;\n\n        let attackIntervalBoosts = this.getBuffBoosts(\"/buff_types/attack_speed\");\n        let attackIntervalRatioBoost = attackIntervalBoosts\n            .map((boost) => boost.ratioBoost)\n            .reduce((prev, cur) => prev + cur, 0);\n        this.combatDetails.combatStats.attackInterval =\n            this.combatDetails.combatStats.attackInterval * (1 / (1 + attackIntervalRatioBoost));\n\n        let baseArmor = 0.2 * this.combatDetails.defenseLevel + this.combatDetails.combatStats.armor;\n        this.combatDetails.totalArmor = baseArmor;\n        let armorBoosts = this.getBuffBoosts(\"/buff_types/armor\");\n        for (const boost of armorBoosts) {\n            this.combatDetails.totalArmor += boost.flatBoost;\n            this.combatDetails.totalArmor += baseArmor * boost.ratioBoost;\n        }\n\n        let baseWaterResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.waterResistance;\n        this.combatDetails.totalWaterResistance = baseWaterResistance;\n        let waterResistanceBoosts = this.getBuffBoosts(\"/buff_types/water_resistance\");\n        for (const boost of waterResistanceBoosts) {\n            this.combatDetails.totalWaterResistance += boost.flatBoost;\n            this.combatDetails.totalWaterResistance += baseWaterResistance * boost.ratioBoost;\n        }\n\n        let baseNatureResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.natureResistance;\n        this.combatDetails.totalNatureResistance = baseNatureResistance;\n        let natureResistanceBoosts = this.getBuffBoosts(\"/buff_types/nature_resistance\");\n        for (const boost of natureResistanceBoosts) {\n            this.combatDetails.totalNatureResistance += boost.flatBoost;\n            this.combatDetails.totalNatureResistance += baseNatureResistance * boost.ratioBoost;\n        }\n\n        let baseFireResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.fireResistance;\n        this.combatDetails.totalFireResistance = baseFireResistance;\n        let fireResistanceBoosts = this.getBuffBoosts(\"/buff_types/fire_resistance\");\n        for (const boost of fireResistanceBoosts) {\n            this.combatDetails.totalFireResistance += boost.flatBoost;\n            this.combatDetails.totalFireResistance += baseFireResistance * boost.ratioBoost;\n        }\n\n        this.combatDetails.combatStats.lifeSteal += this.getBuffBoost(\"/buff_types/life_steal\").flatBoost;\n        this.combatDetails.combatStats.HPRegen += this.getBuffBoost(\"/buff_types/hp_regen\").flatBoost;\n        this.combatDetails.combatStats.MPRegen += this.getBuffBoost(\"/buff_types/mp_regen\").flatBoost;\n        this.combatDetails.combatStats.physicalReflectPower += this.getBuffBoost(\n            \"/buff_types/physical_reflect_power\"\n        ).flatBoost;\n        this.combatDetails.combatStats.dropRate += this.getBuffBoost(\"/buff_types/combat_drop_rate\").ratioBoost;\n        this.combatDetails.combatStats.experienceRate += this.getBuffBoost(\"/buff_types/wisdom\").flatBoost;\n    }\n\n    addBuff(buff, currentTime) {\n        buff.startTime = currentTime;\n        this.combatBuffs[buff.sourceHrid] = buff;\n\n        this.updateCombatDetails();\n    }\n\n    removeExpiredBuffs(currentTime) {\n        let expiredBuffs = Object.values(this.combatBuffs).filter(\n            (buff) => buff.startTime + buff.duration <= currentTime\n        );\n        expiredBuffs.forEach((buff) => {\n            delete this.combatBuffs[buff.sourceHrid];\n        });\n\n        this.updateCombatDetails();\n    }\n\n    clearBuffs() {\n        this.combatBuffs = {};\n        this.updateCombatDetails();\n    }\n\n    getBuffBoosts(type) {\n        let boosts = [];\n        Object.values(this.combatBuffs)\n            .filter((buff) => buff.typeHrid == type)\n            .forEach((buff) => {\n                boosts.push({ ratioBoost: buff.ratioBoost, flatBoost: buff.flatBoost });\n            });\n\n        return boosts;\n    }\n\n    getBuffBoost(type) {\n        let boosts = this.getBuffBoosts(type);\n\n        if (boosts.length > 1) {\n            throw new Error(\"Using getBuffBoost with multiple buffs active: \" + type);\n        }\n\n        let boost = {\n            ratioBoost: boosts[0]?.ratioBoost ?? 0,\n            flatBoost: boosts[0]?.flatBoost ?? 0,\n        };\n\n        return boost;\n    }\n\n    reset(currentTime = 0) {\n        this.isStunned = false;\n        this.stunExpireTime = null;\n\n        this.clearBuffs();\n        this.updateCombatDetails();\n        this.resetCooldowns(currentTime);\n\n        this.combatDetails.currentHitpoints = this.combatDetails.maxHitpoints;\n        this.combatDetails.currentManapoints = this.combatDetails.maxManapoints;\n    }\n\n    resetCooldowns(currentTime = 0) {\n        this.food.filter((food) => food != null).forEach((food) => (food.lastUsed = Number.MIN_SAFE_INTEGER));\n        this.drinks.filter((drink) => drink != null).forEach((drink) => (drink.lastUsed = Number.MIN_SAFE_INTEGER));\n\n        this.abilities\n            .filter((ability) => ability != null)\n            .forEach((ability) => {\n                if (this.isPlayer) {\n                    ability.lastUsed = Number.MIN_SAFE_INTEGER;\n                } else {\n                    ability.lastUsed = currentTime - Math.floor(Math.random() * ability.cooldownDuration);\n                }\n            });\n    }\n\n    addHitpoints(hitpoints) {\n        let hitpointsAdded = 0;\n\n        if (this.combatDetails.currentHitpoints >= this.combatDetails.maxHitpoints) {\n            return hitpointsAdded;\n        }\n\n        let newHitpoints = Math.min(this.combatDetails.currentHitpoints + hitpoints, this.combatDetails.maxHitpoints);\n        hitpointsAdded = newHitpoints - this.combatDetails.currentHitpoints;\n        this.combatDetails.currentHitpoints = newHitpoints;\n\n        return hitpointsAdded;\n    }\n\n    addManapoints(manapoints) {\n        let manapointsAdded = 0;\n\n        if (this.combatDetails.currentManapoints >= this.combatDetails.maxManapoints) {\n            return manapointsAdded;\n        }\n\n        let newManapoints = Math.min(\n            this.combatDetails.currentManapoints + manapoints,\n            this.combatDetails.maxManapoints\n        );\n        manapointsAdded = newManapoints - this.combatDetails.currentManapoints;\n        this.combatDetails.currentManapoints = newManapoints;\n\n        return manapointsAdded;\n    }\n}\n\nexport default CombatUnit;\n","import Buff from \"./buff\";\nimport itemDetailMap from \"./data/itemDetailMap.json\";\nimport Trigger from \"./trigger\";\n\nclass Consumable {\n    constructor(hrid, triggers = null) {\n        this.hrid = hrid;\n\n        let gameConsumable = itemDetailMap[this.hrid];\n        if (!gameConsumable) {\n            throw new Error(\"No consumable found for hrid: \" + this.hrid);\n        }\n\n        this.cooldownDuration = gameConsumable.consumableDetail.cooldownDuration;\n        this.hitpointRestore = gameConsumable.consumableDetail.hitpointRestore;\n        this.manapointRestore = gameConsumable.consumableDetail.manapointRestore;\n        this.recoveryDuration = gameConsumable.consumableDetail.recoveryDuration;\n\n        this.buffs = [];\n        if (gameConsumable.consumableDetail.buffs) {\n            for (const consumableBuff of gameConsumable.consumableDetail.buffs) {\n                let buff = new Buff(consumableBuff);\n                this.buffs.push(buff);\n            }\n        }\n\n        if (triggers) {\n            this.triggers = triggers;\n        } else {\n            this.triggers = [];\n            for (const defaultTrigger of gameConsumable.consumableDetail.defaultCombatTriggers) {\n                let trigger = new Trigger(\n                    defaultTrigger.dependencyHrid,\n                    defaultTrigger.conditionHrid,\n                    defaultTrigger.comparatorHrid,\n                    defaultTrigger.value\n                );\n                this.triggers.push(trigger);\n            }\n        }\n\n        this.lastUsed = Number.MIN_SAFE_INTEGER;\n    }\n\n    static createFromDTO(dto) {\n        let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n        let consumable = new Consumable(dto.hrid, triggers);\n\n        return consumable;\n    }\n\n    shouldTrigger(currentTime, source, target, friendlies, enemies) {\n        if (source.isStunned) {\n            return false;\n        }\n\n        if (this.lastUsed + this.cooldownDuration > currentTime) {\n            return false;\n        }\n\n        if (this.triggers.length == 0) {\n            return true;\n        }\n\n        let shouldTrigger = true;\n        for (const trigger of this.triggers) {\n            if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n                shouldTrigger = false;\n            }\n        }\n\n        return shouldTrigger;\n    }\n}\n\nexport default Consumable;\n","import Ability from \"./ability\";\nimport CombatUnit from \"./combatUnit\";\nimport Consumable from \"./consumable\";\nimport Equipment from \"./equipment\";\n\nclass Player extends CombatUnit {\n    equipment = {\n        \"/equipment_types/head\": null,\n        \"/equipment_types/body\": null,\n        \"/equipment_types/legs\": null,\n        \"/equipment_types/feet\": null,\n        \"/equipment_types/hands\": null,\n        \"/equipment_types/main_hand\": null,\n        \"/equipment_types/two_hand\": null,\n        \"/equipment_types/off_hand\": null,\n        \"/equipment_types/pouch\": null,\n    };\n\n    constructor() {\n        super();\n\n        this.isPlayer = true;\n        this.hrid = \"player\";\n    }\n\n    static createFromDTO(dto) {\n        let player = new Player();\n\n        player.staminaLevel = dto.staminaLevel;\n        player.intelligenceLevel = dto.intelligenceLevel;\n        player.attackLevel = dto.attackLevel;\n        player.powerLevel = dto.powerLevel;\n        player.defenseLevel = dto.defenseLevel;\n        player.rangedLevel = dto.rangedLevel;\n        player.magicLevel = dto.magicLevel;\n\n        for (const [key, value] of Object.entries(dto.equipment)) {\n            player.equipment[key] = value ? Equipment.createFromDTO(value) : null;\n        }\n\n        player.food = dto.food.map((food) => (food ? Consumable.createFromDTO(food) : null));\n        player.drinks = dto.drinks.map((drink) => (drink ? Consumable.createFromDTO(drink) : null));\n        player.abilities = dto.abilities.map((ability) => (ability ? Ability.createFromDTO(ability) : null));\n\n        return player;\n    }\n\n    updateCombatDetails() {\n        if (this.equipment[\"/equipment_types/main_hand\"]) {\n            this.combatDetails.combatStats.combatStyleHrid =\n                this.equipment[\"/equipment_types/main_hand\"].getCombatStyle();\n            this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/main_hand\"].getDamageType();\n            this.combatDetails.combatStats.attackInterval =\n                this.equipment[\"/equipment_types/main_hand\"].getCombatStat(\"attackInterval\");\n        } else if (this.equipment[\"/equipment_types/two_hand\"]) {\n            this.combatDetails.combatStats.combatStyleHrid =\n                this.equipment[\"/equipment_types/two_hand\"].getCombatStyle();\n            this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/two_hand\"].getDamageType();\n            this.combatDetails.combatStats.attackInterval =\n                this.equipment[\"/equipment_types/two_hand\"].getCombatStat(\"attackInterval\");\n        } else {\n            this.combatDetails.combatStats.combatStyleHrid = \"/combat_styles/smash\";\n            this.combatDetails.combatStats.damageType = \"/damage_types/physical\";\n            this.combatDetails.combatStats.attackInterval = 3000000000;\n        }\n\n        [\n            \"stabAccuracy\",\n            \"slashAccuracy\",\n            \"smashAccuracy\",\n            \"rangedAccuracy\",\n            \"stabDamage\",\n            \"slashDamage\",\n            \"smashDamage\",\n            \"rangedDamage\",\n            \"magicDamage\",\n            \"physicalAmplify\",\n            \"waterAmplify\",\n            \"natureAmplify\",\n            \"fireAmplify\",\n            \"healingAmplify\",\n            \"stabEvasion\",\n            \"slashEvasion\",\n            \"smashEvasion\",\n            \"rangedEvasion\",\n            \"armor\",\n            \"waterResistance\",\n            \"natureResistance\",\n            \"fireResistance\",\n            \"maxHitpoints\",\n            \"maxManapoints\",\n            \"lifeSteal\",\n            \"physicalReflectPower\",\n            \"dropRate\",\n            \"dropQuantity\",\n            \"experienceRate\",\n        ].forEach((stat) => {\n            this.combatDetails.combatStats[stat] = Object.values(this.equipment)\n                .filter((equipment) => equipment != null)\n                .map((equipment) => equipment.getCombatStat(stat))\n                .reduce((prev, cur) => prev + cur, 0);\n        });\n\n        if (this.equipment[\"/equipment_types/pouch\"]) {\n            this.combatDetails.combatStats.foodSlots =\n                1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"foodSlots\");\n            this.combatDetails.combatStats.drinkSlots =\n                1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"drinkSlots\");\n        } else {\n            this.combatDetails.combatStats.foodSlots = 1;\n            this.combatDetails.combatStats.drinkSlots = 1;\n        }\n\n        super.updateCombatDetails();\n    }\n}\n\nexport default Player;\n","import Equipment from \"./combatsimulator/equipment.js\";\nimport Player from \"./combatsimulator/player.js\";\nimport abilityDetailMap from \"./combatsimulator/data/abilityDetailMap.json\";\nimport itemDetailMap from \"./combatsimulator/data/itemDetailMap.json\";\nimport Ability from \"./combatsimulator/ability.js\";\nimport Consumable from \"./combatsimulator/consumable.js\";\nimport combatTriggerDependencyDetailMap from \"./combatsimulator/data/combatTriggerDependencyDetailMap.json\";\nimport combatTriggerConditionDetailMap from \"./combatsimulator/data/combatTriggerConditionDetailMap.json\";\nimport combatTriggerComparatorDetailMap from \"./combatsimulator/data/combatTriggerComparatorDetailMap.json\";\nimport abilitySlotsLevelRequirementList from \"./combatsimulator/data/abilitySlotsLevelRequirementList.json\";\nimport actionDetailMap from \"./combatsimulator/data/actionDetailMap.json\";\nimport combatMonsterDetailMap from \"./combatsimulator/data/combatMonsterDetailMap.json\";\nimport damageTypeDetailMap from \"./combatsimulator/data/damageTypeDetailMap.json\";\nimport combatStyleDetailMap from \"./combatsimulator/data/combatStyleDetailMap.json\"\n\nconst ONE_SECOND = 1e9;\nconst ONE_HOUR = 60 * 60 * ONE_SECOND;\n\nlet buttonStartSimulation = document.getElementById(\"buttonStartSimulation\");\nlet progressbar = document.getElementById(\"simulationProgressBar\");\n\nlet worker = new Worker(new URL(\"worker.js\", import.meta.url));\n\nlet player = new Player();\nlet food = [null, null, null];\nlet drinks = [null, null, null];\nlet abilities = [null, null, null, null];\nlet triggerMap = {};\nlet modalTriggers = [];\n\n// #region Worker\n\nworker.onmessage = function (event) {\n    switch (event.data.type) {\n        case \"simulation_result\":\n            progressbar.style.width = \"100%\";\n            progressbar.innerHTML = \"100%\";\n            showSimulationResult(event.data.simResult);\n            buttonStartSimulation.disabled = false;\n            break;\n        case \"simulation_progress\":\n            let progress = Math.floor(100 * event.data.progress);\n            progressbar.style.width = progress + \"%\";\n            progressbar.innerHTML = progress + \"%\";\n            break;\n        case \"simulation_error\":\n            showErrorModal(event.data.error.toString());\n            break;\n    }\n};\n\n// #endregion\n\n// #region Equipment\n\nfunction initEquipmentSection() {\n    [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"main_hand\", \"two_hand\", \"off_hand\", \"pouch\"].forEach((type) => {\n        initEquipmentSelect(type);\n        initEnhancementLevelInput(type);\n    });\n}\n\nfunction initEquipmentSelect(equipmentType) {\n    let selectId = \"selectEquipment_\";\n    if (equipmentType == \"main_hand\" || equipmentType == \"two_hand\") {\n        selectId += \"weapon\";\n    } else {\n        selectId += equipmentType;\n    }\n    let selectElement = document.getElementById(selectId);\n\n    let gameEquipment = Object.values(itemDetailMap)\n        .filter((item) => item.categoryHrid == \"/item_categories/equipment\")\n        .filter((item) => item.equipmentDetail.type == \"/equipment_types/\" + equipmentType)\n        .sort((a, b) => a.sortIndex - b.sortIndex);\n\n    for (const equipment of Object.values(gameEquipment)) {\n        selectElement.add(new Option(equipment.name, equipment.hrid));\n    }\n\n    selectElement.addEventListener(\"change\", (event) => {\n        equipmentSelectHandler(event, equipmentType);\n    });\n}\n\nfunction initEnhancementLevelInput(equipmentType) {\n    let inputId = \"inputEquipmentEnhancementLevel_\";\n    if (equipmentType == \"main_hand\" || equipmentType == \"two_hand\") {\n        inputId += \"weapon\";\n    } else {\n        inputId += equipmentType;\n    }\n\n    let inputElement = document.getElementById(inputId);\n    inputElement.value = 0;\n    inputElement.addEventListener(\"change\", enhancementLevelInputHandler);\n}\n\nfunction equipmentSelectHandler(event, type) {\n    let equipmentType = \"/equipment_types/\" + type;\n\n    if (!event.target.value) {\n        updateEquipmentState();\n        updateUI();\n        return;\n    }\n\n    let gameItem = itemDetailMap[event.target.value];\n\n    // Weapon select has two handlers because of mainhand and twohand weapons. Ignore the handler with the wrong type\n    if (gameItem.equipmentDetail.type != equipmentType) {\n        return;\n    }\n\n    if (type == \"two_hand\") {\n        document.getElementById(\"selectEquipment_off_hand\").value = \"\";\n        document.getElementById(\"inputEquipmentEnhancementLevel_off_hand\").value = 0;\n    }\n    if (type == \"off_hand\" && player.equipment[\"/equipment_types/two_hand\"]) {\n        document.getElementById(\"selectEquipment_weapon\").value = \"\";\n        document.getElementById(\"inputEquipmentEnhancementLevel_weapon\").value = 0;\n    }\n\n    updateEquipmentState();\n    updateUI();\n}\n\nfunction enhancementLevelInputHandler() {\n    updateEquipmentState();\n    updateUI();\n}\n\nfunction updateEquipmentState() {\n    [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"main_hand\", \"two_hand\", \"off_hand\", \"pouch\"].forEach((type) => {\n        let equipmentType = \"/equipment_types/\" + type;\n        let selectType = type;\n        if (type == \"main_hand\" || type == \"two_hand\") {\n            selectType = \"weapon\";\n        }\n\n        let equipmentSelect = document.getElementById(\"selectEquipment_\" + selectType);\n        let equipmentHrid = equipmentSelect.value;\n\n        if (!equipmentHrid) {\n            player.equipment[equipmentType] = null;\n            return;\n        }\n\n        let gameItem = itemDetailMap[equipmentHrid];\n\n        // Clear old weapon if a weapon of a different type is equipped\n        if (gameItem.equipmentDetail.type != equipmentType) {\n            player.equipment[equipmentType] = null;\n            return;\n        }\n\n        let enhancementLevel = Number(document.getElementById(\"inputEquipmentEnhancementLevel_\" + selectType).value);\n        player.equipment[equipmentType] = new Equipment(gameItem.hrid, enhancementLevel);\n    });\n}\n\n// #endregion\n\n// #region Combat Stats\n\nfunction updateCombatStatsUI() {\n    player.updateCombatDetails();\n\n    let combatStyleElement = document.getElementById(\"combatStat_combatStyleHrid\");\n    let combatStyle = player.combatDetails.combatStats.combatStyleHrid;\n    combatStyleElement.innerHTML = combatStyleDetailMap[combatStyle].name;\n\n    let damageTypeElement = document.getElementById(\"combatStat_damageType\");\n    let damageType = damageTypeDetailMap[player.combatDetails.combatStats.damageType];\n    damageTypeElement.innerHTML = damageType.name;\n\n    let attackIntervalElement = document.getElementById(\"combatStat_attackInterval\");\n    attackIntervalElement.innerHTML = (player.combatDetails.combatStats.attackInterval / 1e9).toLocaleString() + \"s\";\n\n    [\n        \"maxHitpoints\",\n        \"maxManapoints\",\n        \"stabAccuracyRating\",\n        \"stabMaxDamage\",\n        \"slashAccuracyRating\",\n        \"slashMaxDamage\",\n        \"smashAccuracyRating\",\n        \"smashMaxDamage\",\n        \"rangedAccuracyRating\",\n        \"rangedMaxDamage\",\n        \"magicMaxDamage\",\n        \"stabEvasionRating\",\n        \"slashEvasionRating\",\n        \"smashEvasionRating\",\n        \"rangedEvasionRating\",\n        \"totalArmor\",\n        \"totalWaterResistance\",\n        \"totalNatureResistance\",\n        \"totalFireResistance\",\n    ].forEach((stat) => {\n        let element = document.getElementById(\"combatStat_\" + stat);\n        element.innerHTML = Math.floor(player.combatDetails[stat]);\n    });\n\n    [\n        \"physicalAmplify\",\n        \"waterAmplify\",\n        \"natureAmplify\",\n        \"fireAmplify\",\n        \"healingAmplify\",\n        \"lifeSteal\",\n        \"physicalReflectPower\",\n        \"HPRegen\",\n        \"MPRegen\",\n        \"experienceRate\",\n    ].forEach((stat) => {\n        let element = document.getElementById(\"combatStat_\" + stat);\n        let value = (100 * player.combatDetails.combatStats[stat]).toLocaleString([], {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n        });\n        element.innerHTML = value + \"%\";\n    });\n}\n\n// #endregion\n\n// #region Level\n\nfunction initLevelSection() {\n    [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n        let levelInput = document.getElementById(\"inputLevel_\" + skill);\n        levelInput.value = 1;\n        levelInput.addEventListener(\"change\", levelInputHandler);\n    });\n}\n\nfunction levelInputHandler() {\n    updateLevels();\n    updateUI();\n}\n\nfunction updateLevels() {\n    [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n        let levelInput = document.getElementById(\"inputLevel_\" + skill);\n        player[skill + \"Level\"] = Number(levelInput.value);\n    });\n}\n\n// #endregion\n\n// #region Food\n\nfunction initFoodSection() {\n    for (let i = 0; i < 3; i++) {\n        let element = document.getElementById(\"selectFood_\" + i);\n\n        let gameFoods = Object.values(itemDetailMap)\n            .filter((item) => item.categoryHrid == \"/item_categories/food\")\n            .sort((a, b) => a.sortIndex - b.sortIndex);\n\n        for (const food of Object.values(gameFoods)) {\n            element.add(new Option(food.name, food.hrid));\n        }\n\n        element.addEventListener(\"change\", foodSelectHandler);\n    }\n}\n\nfunction foodSelectHandler() {\n    updateFoodState();\n    updateUI();\n}\n\nfunction updateFoodState() {\n    for (let i = 0; i < 3; i++) {\n        let foodSelect = document.getElementById(\"selectFood_\" + i);\n        food[i] = foodSelect.value;\n        if (food[i] && !triggerMap[food[i]]) {\n            let gameItem = itemDetailMap[food[i]];\n            triggerMap[food[i]] = structuredClone(gameItem.consumableDetail.defaultCombatTriggers);\n        }\n    }\n}\n\nfunction updateFoodUI() {\n    for (let i = 0; i < 3; i++) {\n        let selectElement = document.getElementById(\"selectFood_\" + i);\n        let triggerButton = document.getElementById(\"buttonFoodTrigger_\" + i);\n\n        selectElement.disabled = i >= player.combatDetails.combatStats.foodSlots;\n        triggerButton.disabled = i >= player.combatDetails.combatStats.foodSlots || !food[i];\n    }\n}\n\n// #endregion\n\n// #region Drinks\n\nfunction initDrinksSection() {\n    for (let i = 0; i < 3; i++) {\n        let element = document.getElementById(\"selectDrink_\" + i);\n\n        let gameDrinks = Object.values(itemDetailMap)\n            .filter((item) => item.categoryHrid == \"/item_categories/drink\")\n            .filter((item) => item.consumableDetail.usableInActionTypeMap[\"/action_types/combat\"])\n            .sort((a, b) => a.sortIndex - b.sortIndex);\n\n        for (const drink of Object.values(gameDrinks)) {\n            element.add(new Option(drink.name, drink.hrid));\n        }\n\n        element.addEventListener(\"change\", drinkSelectHandler);\n    }\n}\n\nfunction drinkSelectHandler() {\n    updateDrinksState();\n    updateDrinksUI();\n}\n\nfunction updateDrinksState() {\n    for (let i = 0; i < 3; i++) {\n        let drinkSelect = document.getElementById(\"selectDrink_\" + i);\n        drinks[i] = drinkSelect.value;\n        if (drinks[i] && !triggerMap[drinks[i]]) {\n            let gameItem = itemDetailMap[drinks[i]];\n            triggerMap[drinks[i]] = structuredClone(gameItem.consumableDetail.defaultCombatTriggers);\n        }\n    }\n}\n\nfunction updateDrinksUI() {\n    for (let i = 0; i < 3; i++) {\n        let selectElement = document.getElementById(\"selectDrink_\" + i);\n        let triggerButton = document.getElementById(\"buttonDrinkTrigger_\" + i);\n\n        selectElement.disabled = i >= player.combatDetails.combatStats.drinkSlots;\n        triggerButton.disabled = i >= player.combatDetails.combatStats.drinkSlots || !drinks[i];\n    }\n}\n\n// #endregion\n\n// #region Abilities\n\nfunction initAbilitiesSection() {\n    for (let i = 0; i < 4; i++) {\n        let selectElement = document.getElementById(\"selectAbility_\" + i);\n        let inputElement = document.getElementById(\"inputAbilityLevel_\" + i);\n\n        inputElement.value = 1;\n\n        let gameAbilities = Object.values(abilityDetailMap).sort((a, b) => a.sortIndex - b.sortIndex);\n\n        for (const ability of Object.values(gameAbilities)) {\n            selectElement.add(new Option(ability.name, ability.hrid));\n        }\n\n        selectElement.addEventListener(\"change\", abilitySelectHandler);\n    }\n}\n\nfunction abilitySelectHandler() {\n    updateAbilityState();\n    updateAbilityUI();\n}\n\nfunction updateAbilityState() {\n    for (let i = 0; i < 4; i++) {\n        let abilitySelect = document.getElementById(\"selectAbility_\" + i);\n        abilities[i] = abilitySelect.value;\n        if (abilities[i] && !triggerMap[abilities[i]]) {\n            let gameAbility = abilityDetailMap[abilities[i]];\n            triggerMap[abilities[i]] = structuredClone(gameAbility.defaultCombatTriggers);\n        }\n    }\n}\n\nfunction updateAbilityUI() {\n    for (let i = 0; i < 4; i++) {\n        let selectElement = document.getElementById(\"selectAbility_\" + i);\n        let inputElement = document.getElementById(\"inputAbilityLevel_\" + i);\n        let triggerButton = document.getElementById(\"buttonAbilityTrigger_\" + i);\n\n        selectElement.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1];\n        inputElement.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1];\n        triggerButton.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1] || !abilities[i];\n    }\n}\n\n// #endregion\n\n// #region Trigger\n\nfunction initTriggerModal() {\n    let modal = document.getElementById(\"triggerModal\");\n    modal.addEventListener(\"show.bs.modal\", (event) => triggerModalShownHandler(event));\n\n    let triggerSaveButton = document.getElementById(\"buttonTriggerModalSave\");\n    triggerSaveButton.addEventListener(\"click\", (event) => triggerModalSaveHandler(event));\n\n    let triggerAddButton = document.getElementById(\"buttonAddTrigger\");\n    triggerAddButton.addEventListener(\"click\", (event) => triggerAddButtonHandler(event));\n\n    let triggerDefaultButton = document.getElementById(\"buttonDefaultTrigger\");\n    triggerDefaultButton.addEventListener(\"click\", (event) => triggerDefaultButtonHandler(event));\n\n    for (let i = 0; i < 4; i++) {\n        let triggerDependencySelect = document.getElementById(\"selectTriggerDependency_\" + i);\n        let triggerConditionSelect = document.getElementById(\"selectTriggerCondition_\" + i);\n        let triggerComparatorSelect = document.getElementById(\"selectTriggerComparator_\" + i);\n        let triggerValueInput = document.getElementById(\"inputTriggerValue_\" + i);\n        let triggerRemoveButton = document.getElementById(\"buttonRemoveTrigger_\" + i);\n\n        triggerDependencySelect.addEventListener(\"change\", (event) => triggerDependencySelectHandler(event, i));\n        triggerConditionSelect.addEventListener(\"change\", (event) => triggerConditionSelectHandler(event, i));\n        triggerComparatorSelect.addEventListener(\"change\", (event) => triggerComparatorSelectHander(event, i));\n        triggerValueInput.addEventListener(\"change\", (event) => triggerValueInputHandler(event, i));\n        triggerRemoveButton.addEventListener(\"click\", (event) => triggerRemoveButtonHandler(event, i));\n    }\n}\n\nfunction triggerModalShownHandler(event) {\n    let triggerButton = event.relatedTarget;\n\n    let triggerType = triggerButton.getAttribute(\"data-bs-triggertype\");\n    let triggerIndex = Number(triggerButton.getAttribute(\"data-bs-triggerindex\"));\n\n    let triggerTarget;\n    switch (triggerType) {\n        case \"food\":\n            triggerTarget = food[triggerIndex];\n            break;\n        case \"drink\":\n            triggerTarget = drinks[triggerIndex];\n            break;\n        case \"ability\":\n            triggerTarget = abilities[triggerIndex];\n            break;\n    }\n\n    let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\");\n    triggerTargetnput.value = triggerTarget;\n    modalTriggers = triggerMap[triggerTarget];\n    updateTriggerModal();\n}\n\nfunction triggerModalSaveHandler(event) {\n    let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\");\n    let triggerTarget = triggerTargetnput.value;\n\n    triggerMap[triggerTarget] = modalTriggers;\n}\n\nfunction triggerDependencySelectHandler(event, index) {\n    modalTriggers[index].dependencyHrid = event.target.value;\n    modalTriggers[index].conditionHrid = \"\";\n    modalTriggers[index].comparatorHrid = \"\";\n    modalTriggers[index].value = 0;\n\n    updateTriggerModal();\n}\n\nfunction triggerConditionSelectHandler(event, index) {\n    modalTriggers[index].conditionHrid = event.target.value;\n    modalTriggers[index].comparatorHrid = \"\";\n    modalTriggers[index].value = 0;\n\n    updateTriggerModal();\n}\n\nfunction triggerComparatorSelectHander(event, index) {\n    modalTriggers[index].comparatorHrid = event.target.value;\n\n    updateTriggerModal();\n}\n\nfunction triggerValueInputHandler(event, index) {\n    modalTriggers[index].value = Number(event.target.value);\n\n    updateTriggerModal();\n}\n\nfunction triggerRemoveButtonHandler(event, index) {\n    modalTriggers.splice(index, 1);\n\n    updateTriggerModal();\n}\n\nfunction triggerAddButtonHandler(event) {\n    if (modalTriggers.length == 4) {\n        return;\n    }\n\n    modalTriggers.push({\n        dependencyHrid: \"\",\n        conditionHrid: \"\",\n        comparatorHrid: \"\",\n        value: 0,\n    });\n\n    updateTriggerModal();\n}\n\nfunction triggerDefaultButtonHandler(event) {\n    let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\");\n    let triggerTarget = triggerTargetnput.value;\n\n    if (triggerTarget.startsWith(\"/items/\")) {\n        modalTriggers = structuredClone(itemDetailMap[triggerTarget].consumableDetail.defaultCombatTriggers);\n    } else {\n        modalTriggers = structuredClone(abilityDetailMap[triggerTarget].defaultCombatTriggers);\n    }\n\n    updateTriggerModal();\n}\n\nfunction updateTriggerModal() {\n    let triggerStartTextElement = document.getElementById(\"triggerStartText\");\n    if (modalTriggers.length == 0) {\n        triggerStartTextElement.innerHTML = \"Activate as soon as it's off cooldown\";\n    } else {\n        triggerStartTextElement.innerHTML = \"Activate when:\";\n    }\n\n    let triggerAddButton = document.getElementById(\"buttonAddTrigger\");\n    triggerAddButton.disabled = modalTriggers.length == 4;\n\n    let triggersValid = true;\n\n    for (let i = 0; i < 4; i++) {\n        let triggerElement = document.getElementById(\"modalTrigger_\" + i);\n\n        if (!modalTriggers[i]) {\n            hideElement(triggerElement);\n            continue;\n        }\n\n        showElement(triggerElement);\n\n        let triggerDependencySelect = document.getElementById(\"selectTriggerDependency_\" + i);\n        let triggerConditionSelect = document.getElementById(\"selectTriggerCondition_\" + i);\n        let triggerComparatorSelect = document.getElementById(\"selectTriggerComparator_\" + i);\n        let triggerValueInput = document.getElementById(\"inputTriggerValue_\" + i);\n\n        showElement(triggerDependencySelect);\n        fillTriggerDependencySelect(triggerDependencySelect);\n\n        if (modalTriggers[i].dependencyHrid == \"\") {\n            hideElement(triggerConditionSelect);\n            hideElement(triggerComparatorSelect);\n            hideElement(triggerValueInput);\n            triggersValid = false;\n            continue;\n        }\n\n        triggerDependencySelect.value = modalTriggers[i].dependencyHrid;\n        showElement(triggerConditionSelect);\n        fillTriggerConditionSelect(triggerConditionSelect, modalTriggers[i].dependencyHrid);\n\n        if (modalTriggers[i].conditionHrid == \"\") {\n            hideElement(triggerComparatorSelect);\n            hideElement(triggerValueInput);\n            triggersValid = false;\n            continue;\n        }\n\n        triggerConditionSelect.value = modalTriggers[i].conditionHrid;\n        showElement(triggerComparatorSelect);\n        fillTriggerComparatorSelect(triggerComparatorSelect, modalTriggers[i].conditionHrid);\n\n        if (modalTriggers[i].comparatorHrid == \"\") {\n            hideElement(triggerValueInput);\n            triggersValid = false;\n            continue;\n        }\n\n        triggerComparatorSelect.value = modalTriggers[i].comparatorHrid;\n\n        if (combatTriggerComparatorDetailMap[modalTriggers[i].comparatorHrid].allowValue) {\n            showElement(triggerValueInput);\n            triggerValueInput.value = modalTriggers[i].value;\n        } else {\n            hideElement(triggerValueInput);\n        }\n    }\n\n    let triggerSaveButton = document.getElementById(\"buttonTriggerModalSave\");\n    triggerSaveButton.disabled = !triggersValid;\n}\n\nfunction fillTriggerDependencySelect(element) {\n    element.length = 0;\n    element.add(new Option(\"\", \"\"));\n\n    for (const dependency of Object.values(combatTriggerDependencyDetailMap).sort(\n        (a, b) => a.sortIndex - b.sortIndex\n    )) {\n        element.add(new Option(dependency.name, dependency.hrid));\n    }\n}\n\nfunction fillTriggerConditionSelect(element, dependencyHrid) {\n    let dependency = combatTriggerDependencyDetailMap[dependencyHrid];\n\n    let conditions;\n    if (dependency.isSingleTarget) {\n        conditions = Object.values(combatTriggerConditionDetailMap).filter((condition) => condition.isSingleTarget);\n    } else {\n        conditions = Object.values(combatTriggerConditionDetailMap).filter((condition) => condition.isMultiTarget);\n    }\n\n    element.length = 0;\n    element.add(new Option(\"\", \"\"));\n\n    for (const condition of Object.values(conditions).sort((a, b) => a.sortIndex - b.sortIndex)) {\n        element.add(new Option(condition.name, condition.hrid));\n    }\n}\n\nfunction fillTriggerComparatorSelect(element, conditionHrid) {\n    let condition = combatTriggerConditionDetailMap[conditionHrid];\n\n    let comparators = condition.allowedComparatorHrids.map((hrid) => combatTriggerComparatorDetailMap[hrid]);\n\n    element.length = 0;\n    element.add(new Option(\"\", \"\"));\n\n    for (const comparator of Object.values(comparators).sort((a, b) => a.sortIndex - b.sortIndex)) {\n        element.add(new Option(comparator.name, comparator.hrid));\n    }\n}\n\nfunction hideElement(element) {\n    element.classList.remove(\"d-flex\");\n    element.classList.add(\"d-none\");\n}\n\nfunction showElement(element) {\n    element.classList.remove(\"d-none\");\n    element.classList.add(\"d-flex\");\n}\n\n// #endregion\n\n// #region Zones\n\nfunction initZones() {\n    let zoneSelect = document.getElementById(\"selectZone\");\n\n    let gameZones = Object.values(actionDetailMap)\n        .filter((action) => action.type == \"/action_types/combat\")\n        .sort((a, b) => a.sortIndex - b.sortIndex);\n\n    for (const zone of Object.values(gameZones)) {\n        zoneSelect.add(new Option(zone.name, zone.hrid));\n    }\n}\n\n// #endregion\n\n// #region Simulation Result\n\nfunction showSimulationResult(simResult) {\n    showKills(simResult);\n    showDeaths(simResult);\n    showExperienceGained(simResult);\n    showConsumablesUsed(simResult);\n    showHitpointsGained(simResult);\n    showManapointsGained(simResult);\n    showDamageDone(simResult);\n    showDamageTaken(simResult);\n}\n\nfunction showKills(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultKills\");\n    let newChildren = [];\n\n    let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n    let playerDeaths = simResult.deaths[\"player\"] ?? 0;\n    let encountersPerHour = (simResult.encounters / hoursSimulated).toFixed(1);\n\n    let encountersRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Encounters\", encountersPerHour]);\n    newChildren.push(encountersRow);\n\n    let monsters = Object.keys(simResult.deaths)\n        .filter((enemy) => enemy != \"player\")\n        .sort();\n\n    for (const monster of monsters) {\n        let killsPerHour = (simResult.deaths[monster] / hoursSimulated).toFixed(1);\n        let monsterRow = createRow(\n            [\"col-md-6\", \"col-md-6 text-end\"],\n            [combatMonsterDetailMap[monster].name, killsPerHour]\n        );\n        newChildren.push(monsterRow);\n    }\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showDeaths(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultPlayerDeaths\");\n\n    let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n    let playerDeaths = simResult.deaths[\"player\"] ?? 0;\n    let deathsPerHour = (playerDeaths / hoursSimulated).toFixed(2);\n\n    let deathRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Player\", deathsPerHour]);\n    resultDiv.replaceChildren(deathRow);\n}\n\nfunction showExperienceGained(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultExperienceGain\");\n    let newChildren = [];\n\n    let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n\n    let totalExperience = Object.values(simResult.experienceGained[\"player\"]).reduce((prev, cur) => prev + cur, 0);\n    let totalExperiencePerHour = (totalExperience / hoursSimulated).toFixed(0);\n    let totalRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Total\", totalExperiencePerHour]);\n    newChildren.push(totalRow);\n\n    [\"Stamina\", \"Intelligence\", \"Attack\", \"Power\", \"Defense\", \"Ranged\", \"Magic\"].forEach((skill) => {\n        let experience = simResult.experienceGained[\"player\"][skill.toLowerCase()] ?? 0;\n        if (experience == 0) {\n            return;\n        }\n        let experiencePerHour = (experience / hoursSimulated).toFixed(0);\n        let experienceRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [skill, experiencePerHour]);\n        newChildren.push(experienceRow);\n    });\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showConsumablesUsed(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultConsumablesUsed\");\n    let newChildren = [];\n\n    let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n\n    if (!simResult.consumablesUsed[\"player\"]) {\n        resultDiv.replaceChildren(...newChildren);\n        return;\n    }\n\n    let consumablesUsed = Object.entries(simResult.consumablesUsed[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n    for (const [consumable, amount] of consumablesUsed) {\n        let consumablesPerHour = (amount / hoursSimulated).toFixed(0);\n        let consumableRow = createRow(\n            [\"col-md-6\", \"col-md-6 text-end\"],\n            [itemDetailMap[consumable].name, consumablesPerHour]\n        );\n        newChildren.push(consumableRow);\n    }\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showHitpointsGained(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultHealthRestored\");\n    let newChildren = [];\n\n    let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n    if (!simResult.hitpointsGained[\"player\"]) {\n        resultDiv.replaceChildren(...newChildren);\n        return;\n    }\n\n    let hitpointsGained = Object.entries(simResult.hitpointsGained[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n    let totalHitpointsGained = hitpointsGained.reduce((prev, cur) => prev + cur[1], 0);\n    let totalHitpointsPerSecond = (totalHitpointsGained / secondsSimulated).toFixed(2);\n    let totalRow = createRow(\n        [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n        [\"Total\", totalHitpointsPerSecond, \"100%\"]\n    );\n    newChildren.push(totalRow);\n\n    for (const [source, amount] of hitpointsGained) {\n        if (amount == 0) {\n            continue;\n        }\n\n        let sourceText;\n        switch (source) {\n            case \"regen\":\n                sourceText = \"Regen\";\n                break;\n            case \"lifesteal\":\n                sourceText = \"Life Steal\";\n                break;\n            default:\n                if (itemDetailMap[source]) {\n                    sourceText = itemDetailMap[source].name;\n                } else if (abilityDetailMap[source]) {\n                    sourceText = abilityDetailMap[source].name;\n                }\n                break;\n        }\n        let hitpointsPerSecond = (amount / secondsSimulated).toFixed(2);\n        let percentage = ((100 * amount) / totalHitpointsGained).toFixed(0);\n\n        let row = createRow(\n            [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n            [sourceText, hitpointsPerSecond, percentage + \"%\"]\n        );\n        newChildren.push(row);\n    }\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showManapointsGained(simResult) {\n    let resultDiv = document.getElementById(\"simulationResultManaRestored\");\n    let newChildren = [];\n\n    let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n    if (!simResult.manapointsGained[\"player\"]) {\n        resultDiv.replaceChildren(...newChildren);\n        return;\n    }\n\n    let manapointsGained = Object.entries(simResult.manapointsGained[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n    let totalManapointsGained = manapointsGained.reduce((prev, cur) => prev + cur[1], 0);\n    let totalManapointsPerSecond = (totalManapointsGained / secondsSimulated).toFixed(2);\n    let totalRow = createRow(\n        [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n        [\"Total\", totalManapointsPerSecond, \"100%\"]\n    );\n    newChildren.push(totalRow);\n\n    for (const [source, amount] of manapointsGained) {\n        if (amount == 0) {\n            continue;\n        }\n\n        let sourceText;\n        switch (source) {\n            case \"regen\":\n                sourceText = \"Regen\";\n                break;\n            default:\n                sourceText = itemDetailMap[source].name;\n                break;\n        }\n        let manapointsPerSecond = (amount / secondsSimulated).toFixed(2);\n        let percentage = ((100 * amount) / totalManapointsGained).toFixed(0);\n\n        let row = createRow(\n            [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n            [sourceText, manapointsPerSecond, percentage + \"%\"]\n        );\n        newChildren.push(row);\n    }\n\n    let ranOutOfManaText = simResult.playerRanOutOfMana ? \"Yes\" : \"No\";\n    let ranOutOfManaRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Ran out of mana\", ranOutOfManaText]);\n    newChildren.push(ranOutOfManaRow);\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showDamageDone(simResult) {\n    let totalDamageDone = {};\n    let enemyIndex = 1;\n\n    let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n    for (let i = 1; i < 6; i++) {\n        let accordion = document.getElementById(\"simulationResultDamageDoneAccordionEnemy\" + i);\n        hideElement(accordion);\n    }\n\n    for (const [target, abilities] of Object.entries(simResult.attacks[\"player\"])) {\n        let targetDamageDone = {};\n\n        for (const [ability, abilityCasts] of Object.entries(abilities)) {\n            let casts = Object.values(abilityCasts).reduce((prev, cur) => prev + cur, 0);\n            let misses = abilityCasts[\"miss\"] ?? 0;\n            let damage = Object.entries(abilityCasts)\n                .filter((entry) => entry[0] != \"miss\")\n                .reduce((prev, cur) => prev + Number(cur[0]) * cur[1], 0);\n\n            targetDamageDone[ability] = {\n                casts,\n                misses,\n                damage,\n            };\n            if (totalDamageDone[ability]) {\n                totalDamageDone[ability].casts += casts;\n                totalDamageDone[ability].misses += misses;\n                totalDamageDone[ability].damage += damage;\n            } else {\n                totalDamageDone[ability] = {\n                    casts,\n                    misses,\n                    damage,\n                };\n            }\n        }\n\n        let resultDiv = document.getElementById(\"simulationResultDamageDoneEnemy\" + enemyIndex);\n        createDamageTable(resultDiv, targetDamageDone, secondsSimulated);\n\n        let resultAccordion = document.getElementById(\"simulationResultDamageDoneAccordionEnemy\" + enemyIndex);\n        showElement(resultAccordion);\n\n        let resultAccordionButton = document.getElementById(\n            \"buttonSimulationResultDamageDoneAccordionEnemy\" + enemyIndex\n        );\n        let targetName = combatMonsterDetailMap[target].name;\n        resultAccordionButton.innerHTML = \"<b>Damage Done (\" + targetName + \")</b>\";\n\n        enemyIndex++;\n    }\n\n    let totalResultDiv = document.getElementById(\"simulationResultTotalDamageDone\");\n    createDamageTable(totalResultDiv, totalDamageDone, secondsSimulated);\n}\n\nfunction showDamageTaken(simResult) {\n    let totalDamageTaken = {};\n    let enemyIndex = 1;\n\n    let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n    for (let i = 1; i < 6; i++) {\n        let accordion = document.getElementById(\"simulationResultDamageTakenAccordionEnemy\" + i);\n        hideElement(accordion);\n    }\n\n    for (const [source, targets] of Object.entries(simResult.attacks)) {\n        if (source == \"player\") {\n            continue;\n        }\n\n        let sourceDamageTaken = {};\n\n        for (const [ability, abilityCasts] of Object.entries(targets[\"player\"])) {\n            let casts = Object.values(abilityCasts).reduce((prev, cur) => prev + cur, 0);\n            let misses = abilityCasts[\"miss\"] ?? 0;\n            let damage = Object.entries(abilityCasts)\n                .filter((entry) => entry[0] != \"miss\")\n                .reduce((prev, cur) => prev + Number(cur[0]) * cur[1], 0);\n\n            sourceDamageTaken[ability] = {\n                casts,\n                misses,\n                damage,\n            };\n            if (totalDamageTaken[ability]) {\n                totalDamageTaken[ability].casts += casts;\n                totalDamageTaken[ability].misses += misses;\n                totalDamageTaken[ability].damage += damage;\n            } else {\n                totalDamageTaken[ability] = {\n                    casts,\n                    misses,\n                    damage,\n                };\n            }\n        }\n\n        let resultDiv = document.getElementById(\"simulationResultDamageTakenEnemy\" + enemyIndex);\n        createDamageTable(resultDiv, sourceDamageTaken, secondsSimulated);\n\n        let resultAccordion = document.getElementById(\"simulationResultDamageTakenAccordionEnemy\" + enemyIndex);\n        showElement(resultAccordion);\n\n        let resultAccordionButton = document.getElementById(\n            \"buttonSimulationResultDamageTakenAccordionEnemy\" + enemyIndex\n        );\n        let sourceName = combatMonsterDetailMap[source].name;\n        resultAccordionButton.innerHTML = \"<b>Damage Taken (\" + sourceName + \")</b>\";\n\n        enemyIndex++;\n    }\n\n    let totalResultDiv = document.getElementById(\"simulationResultTotalDamageTaken\");\n    createDamageTable(totalResultDiv, totalDamageTaken, secondsSimulated);\n}\n\nfunction createDamageTable(resultDiv, damageDone, secondsSimulated) {\n    let newChildren = [];\n\n    let sortedDamageDone = Object.entries(damageDone).sort((a, b) => b[1].damage - a[1].damage);\n\n    let totalCasts = sortedDamageDone.reduce((prev, cur) => prev + cur[1].casts, 0);\n    let totalMisses = sortedDamageDone.reduce((prev, cur) => prev + cur[1].misses, 0);\n    let totalDamage = sortedDamageDone.reduce((prev, cur) => prev + cur[1].damage, 0);\n    let totalHitChance = ((100 * (totalCasts - totalMisses)) / totalCasts).toFixed(1);\n    let totalDamagePerSecond = (totalDamage / secondsSimulated).toFixed(2);\n\n    let totalRow = createRow(\n        [\"col-md-5\", \"col-md-3 text-end\", \"col-md-2 text-end\", \"col-md-2 text-end\"],\n        [\"Total\", totalHitChance + \"%\", totalDamagePerSecond, \"100%\"]\n    );\n    newChildren.push(totalRow);\n\n    for (const [ability, damageInfo] of sortedDamageDone) {\n        let abilityText;\n        switch (ability) {\n            case \"autoAttack\":\n                abilityText = \"Auto Attack\";\n                break;\n            case \"bleed\":\n                abilityText = \"Bleed\";\n                break;\n            case \"physicalReflect\":\n                abilityText = \"Physical Reflect\";\n                break;\n            default:\n                abilityText = abilityDetailMap[ability].name;\n                break;\n        }\n\n        let hitChance = ((100 * (damageInfo.casts - damageInfo.misses)) / damageInfo.casts).toFixed(1);\n        let damagePerSecond = (damageInfo.damage / secondsSimulated).toFixed(2);\n        let percentage = ((100 * damageInfo.damage) / totalDamage).toFixed(0);\n\n        let row = createRow(\n            [\"col-md-5\", \"col-md-3 text-end\", \"col-md-2 text-end\", \"col-md-2 text-end\"],\n            [abilityText, hitChance + \"%\", damagePerSecond, percentage + \"%\"]\n        );\n        newChildren.push(row);\n    }\n\n    resultDiv.replaceChildren(...newChildren);\n}\n\nfunction createRow(columnClassNames, columnValues) {\n    let row = createElement(\"div\", \"row\");\n\n    for (let i = 0; i < columnClassNames.length; i++) {\n        let column = createElement(\"div\", columnClassNames[i], columnValues[i]);\n        row.appendChild(column);\n    }\n\n    return row;\n}\n\nfunction createElement(tagName, className, innerHTML = \"\") {\n    let element = document.createElement(tagName);\n    element.className = className;\n    element.innerHTML = innerHTML;\n\n    return element;\n}\n\n// #endregion\n\n// #region Simulation Controls\n\nfunction initSimulationControls() {\n    let simulationTimeInput = document.getElementById(\"inputSimulationTime\");\n    simulationTimeInput.value = 100;\n\n    buttonStartSimulation.addEventListener(\"click\", (event) => {\n        let invalidElements = document.querySelectorAll(\":invalid\");\n        if (invalidElements.length > 0) {\n            invalidElements.forEach((element) => element.reportValidity());\n            return;\n        }\n        buttonStartSimulation.disabled = true;\n        startSimulation();\n    });\n}\n\nfunction startSimulation() {\n    updateState();\n    updateUI();\n\n    for (let i = 0; i < 3; i++) {\n        if (food[i] && i < player.combatDetails.combatStats.foodSlots) {\n            let consumable = new Consumable(food[i], triggerMap[food[i]]);\n            player.food[i] = consumable;\n        } else {\n            player.food[i] = null;\n        }\n\n        if (drinks[i] && i < player.combatDetails.combatStats.drinkSlots) {\n            let consumable = new Consumable(drinks[i], triggerMap[drinks[i]]);\n            player.drinks[i] = consumable;\n        } else {\n            player.drinks[i] = null;\n        }\n    }\n\n    for (let i = 0; i < 4; i++) {\n        if (abilities[i] && player.intelligenceLevel >= abilitySlotsLevelRequirementList[i + 1]) {\n            let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i);\n            let ability = new Ability(abilities[i], Number(abilityLevelInput.value), triggerMap[abilities[i]]);\n            player.abilities[i] = ability;\n        } else {\n            player.abilities[i] = null;\n        }\n    }\n\n    let zoneSelect = document.getElementById(\"selectZone\");\n    let simulationTimeInput = document.getElementById(\"inputSimulationTime\");\n\n    let simulationTimeLimit = Number(simulationTimeInput.value) * ONE_HOUR;\n\n    let workerMessage = {\n        type: \"start_simulation\",\n        player: player,\n        zoneHrid: zoneSelect.value,\n        simulationTimeLimit: simulationTimeLimit,\n    };\n\n    worker.postMessage(workerMessage);\n}\n\n// #endregion\n\n// #region Equipment Sets\n\nfunction initEquipmentSetsModal() {\n    let equipmentSetsModal = document.getElementById(\"equipmentSetsModal\");\n    equipmentSetsModal.addEventListener(\"show.bs.modal\", equipmentSetsModalShownHandler);\n\n    let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\");\n    equipmentSetNameInput.addEventListener(\"input\", (event) => equipmentSetNameChangedHandler(event));\n\n    let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\");\n    createEquipmentSetButton.addEventListener(\"click\", createNewEquipmentSetHandler);\n}\n\nfunction equipmentSetsModalShownHandler() {\n    resetNewEquipmentSetControls();\n    updateEquipmentSetList();\n}\n\nfunction resetNewEquipmentSetControls() {\n    let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\");\n    equipmentSetNameInput.value = \"\";\n\n    let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\");\n    createEquipmentSetButton.disabled = true;\n}\n\nfunction updateEquipmentSetList() {\n    let newChildren = [];\n    let equipmentSets = loadEquipmentSets();\n\n    for (const equipmentSetName of Object.keys(equipmentSets)) {\n        let row = createElement(\"div\", \"row mb-2\");\n\n        let nameCol = createElement(\"div\", \"col align-self-center\", equipmentSetName);\n        row.appendChild(nameCol);\n\n        let loadButtonCol = createElement(\"div\", \"col-md-auto\");\n        let loadButton = createElement(\"button\", \"btn btn-primary\", \"Load\");\n        loadButton.setAttribute(\"type\", \"button\");\n        loadButton.addEventListener(\"click\", (_) => loadEquipmentSetHandler(equipmentSetName));\n        loadButtonCol.appendChild(loadButton);\n        row.appendChild(loadButtonCol);\n\n        let saveButtonCol = createElement(\"div\", \"col-md-auto\");\n        let saveButton = createElement(\"button\", \"btn btn-primary\", \"Save\");\n        saveButton.setAttribute(\"type\", \"button\");\n        saveButton.addEventListener(\"click\", (_) => updateEquipmentSetHandler(equipmentSetName));\n        saveButtonCol.appendChild(saveButton);\n        row.appendChild(saveButtonCol);\n\n        let deleteButtonCol = createElement(\"div\", \"col-md-auto\");\n        let deleteButton = createElement(\"button\", \"btn btn-danger\", \"Delete\");\n        deleteButton.setAttribute(\"type\", \"button\");\n        deleteButton.addEventListener(\"click\", (_) => deleteEquipmentSetHandler(equipmentSetName));\n        deleteButtonCol.appendChild(deleteButton);\n        row.appendChild(deleteButtonCol);\n\n        newChildren.push(row);\n    }\n\n    let equipmentSetList = document.getElementById(\"equipmentSetList\");\n    equipmentSetList.replaceChildren(...newChildren);\n}\n\nfunction equipmentSetNameChangedHandler(event) {\n    let invalid = false;\n\n    if (event.target.value.length == 0) {\n        invalid = true;\n    }\n\n    let equipmentSets = loadEquipmentSets();\n    if (equipmentSets[event.target.value]) {\n        invalid = true;\n    }\n\n    let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\");\n    createEquipmentSetButton.disabled = invalid;\n}\n\nfunction createNewEquipmentSetHandler() {\n    let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\");\n    let equipmentSetName = equipmentSetNameInput.value;\n\n    let equipmentSet = getEquipmentSetFromUI();\n    let equipmentSets = loadEquipmentSets();\n    equipmentSets[equipmentSetName] = equipmentSet;\n    saveEquipmentSets(equipmentSets);\n\n    resetNewEquipmentSetControls();\n    updateEquipmentSetList();\n}\n\nfunction loadEquipmentSetHandler(name) {\n    let equipmentSets = loadEquipmentSets();\n    loadEquipmentSetIntoUI(equipmentSets[name]);\n}\n\nfunction updateEquipmentSetHandler(name) {\n    let equipmentSet = getEquipmentSetFromUI();\n    let equipmentSets = loadEquipmentSets();\n    equipmentSets[name] = equipmentSet;\n    saveEquipmentSets(equipmentSets);\n}\n\nfunction deleteEquipmentSetHandler(name) {\n    let equipmentSets = loadEquipmentSets();\n    delete equipmentSets[name];\n    saveEquipmentSets(equipmentSets);\n\n    updateEquipmentSetList();\n}\n\nfunction loadEquipmentSets() {\n    return JSON.parse(localStorage.getItem(\"equipmentSets\")) ?? {};\n}\n\nfunction saveEquipmentSets(equipmentSets) {\n    localStorage.setItem(\"equipmentSets\", JSON.stringify(equipmentSets));\n}\n\nfunction getEquipmentSetFromUI() {\n    let equipmentSet = {\n        levels: {},\n        equipment: {},\n        food: {},\n        drinks: {},\n        abilities: {},\n        triggerMap: {},\n    };\n\n    [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n        let levelInput = document.getElementById(\"inputLevel_\" + skill);\n        equipmentSet.levels[skill] = Number(levelInput.value);\n    });\n\n    [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"weapon\", \"off_hand\", \"pouch\"].forEach((type) => {\n        let equipmentSelect = document.getElementById(\"selectEquipment_\" + type);\n        let enhancementLevelInput = document.getElementById(\"inputEquipmentEnhancementLevel_\" + type);\n\n        equipmentSet.equipment[type] = {\n            equipment: equipmentSelect.value,\n            enhancementLevel: Number(enhancementLevelInput.value),\n        };\n    });\n\n    for (let i = 0; i < 3; i++) {\n        let foodSelect = document.getElementById(\"selectFood_\" + i);\n        equipmentSet.food[i] = foodSelect.value;\n    }\n\n    for (let i = 0; i < 3; i++) {\n        let drinkSelect = document.getElementById(\"selectDrink_\" + i);\n        equipmentSet.drinks[i] = drinkSelect.value;\n    }\n\n    for (let i = 0; i < 4; i++) {\n        let abilitySelect = document.getElementById(\"selectAbility_\" + i);\n        let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i);\n        equipmentSet.abilities[i] = {\n            ability: abilitySelect.value,\n            level: Number(abilityLevelInput.value),\n        };\n    }\n\n    equipmentSet.triggerMap = triggerMap;\n\n    return equipmentSet;\n}\n\nfunction loadEquipmentSetIntoUI(equipmentSet) {\n    [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n        let levelInput = document.getElementById(\"inputLevel_\" + skill);\n        levelInput.value = equipmentSet.levels[skill] ?? 1;\n    });\n\n    [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"weapon\", \"off_hand\", \"pouch\"].forEach((type) => {\n        let equipmentSelect = document.getElementById(\"selectEquipment_\" + type);\n        let enhancementLevelInput = document.getElementById(\"inputEquipmentEnhancementLevel_\" + type);\n\n        equipmentSelect.value = equipmentSet.equipment[type].equipment;\n        enhancementLevelInput.value = equipmentSet.equipment[type].enhancementLevel;\n    });\n\n    for (let i = 0; i < 3; i++) {\n        let foodSelect = document.getElementById(\"selectFood_\" + i);\n        foodSelect.value = equipmentSet.food[i];\n    }\n\n    for (let i = 0; i < 3; i++) {\n        let drinkSelect = document.getElementById(\"selectDrink_\" + i);\n        drinkSelect.value = equipmentSet.drinks[i];\n    }\n\n    for (let i = 0; i < 4; i++) {\n        let abilitySelect = document.getElementById(\"selectAbility_\" + i);\n        let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i);\n\n        abilitySelect.value = equipmentSet.abilities[i].ability;\n        abilityLevelInput.value = equipmentSet.abilities[i].level;\n    }\n\n    triggerMap = equipmentSet.triggerMap;\n\n    updateState();\n    updateUI();\n}\n\n// #endregion\n\n// #region Error Handling\n\nfunction initErrorHandling() {\n    window.addEventListener(\"error\", (event) => {\n        showErrorModal(event.message);\n    });\n\n    let copyErrorButton = document.getElementById(\"buttonCopyError\");\n    copyErrorButton.addEventListener(\"click\", (event) => {\n        let errorInput = document.getElementById(\"inputError\");\n        navigator.clipboard.writeText(errorInput.value);\n    });\n}\n\nfunction showErrorModal(error) {\n    let zoneSelect = document.getElementById(\"selectZone\");\n    let simulationTimeInput = document.getElementById(\"inputSimulationTime\");\n\n    let state = {\n        error: error,\n        player: player,\n        food: food,\n        drinks: drinks,\n        abilities: abilities,\n        triggerMap: triggerMap,\n        modalTriggers: modalTriggers,\n        zone: zoneSelect.value,\n        simulationTime: simulationTimeInput.value,\n    };\n\n    for (let i = 0; i < 4; i++) {\n        let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i);\n        state[\"abilityLevel\" + i] = abilityLevelInput.value;\n    }\n\n    let errorInput = document.getElementById(\"inputError\");\n    errorInput.value = JSON.stringify(state);\n\n    let errorModal = new bootstrap.Modal(document.getElementById(\"errorModal\"));\n    errorModal.show();\n}\n\n// #endregion\n\nfunction updateState() {\n    updateEquipmentState();\n    updateLevels();\n    updateFoodState();\n    updateDrinksState();\n    updateAbilityState();\n}\n\nfunction updateUI() {\n    updateCombatStatsUI();\n    updateFoodUI();\n    updateDrinksUI();\n    updateAbilityUI();\n}\n\ninitEquipmentSection();\ninitLevelSection();\ninitFoodSection();\ninitDrinksSection();\ninitAbilitiesSection();\ninitZones();\ninitTriggerModal();\ninitSimulationControls();\ninitEquipmentSetsModal();\ninitErrorHandling();\n\nupdateState();\nupdateUI();\n"],"names":["Equipment","hrid","enhancementLevel","gameItem","itemDetailMap","dto","combatStat","multiplier","enhancementLevelTotalMultiplierTable","Buff","buff","level","__publicField","Trigger","dependencyHrid","conditionHrid","comparatorHrid","value","source","target","friendlies","enemies","currentTime","combatTriggerDependencyDetailMap","dependencyValue","dependency","unit","prev","cur","buffHrid","Ability","triggers","gameAbility","abilityDetailMap","effect","abilityEffect","defaultTrigger","trigger","shouldTrigger","CombatUnit","stat","accuracyRatioBoost","damageRatioBoost","style","attackIntervalRatioBoost","boost","baseArmor","armorBoosts","baseWaterResistance","waterResistanceBoosts","baseNatureResistance","natureResistanceBoosts","baseFireResistance","fireResistanceBoosts","type","boosts","_a","_b","food","drink","ability","hitpoints","hitpointsAdded","newHitpoints","manapoints","manapointsAdded","newManapoints","Consumable","gameConsumable","consumableBuff","Player","player","key","equipment","ONE_SECOND","ONE_HOUR","buttonStartSimulation","progressbar","worker","drinks","abilities","triggerMap","modalTriggers","event","showSimulationResult","progress","showErrorModal","initEquipmentSection","initEquipmentSelect","initEnhancementLevelInput","equipmentType","selectId","selectElement","gameEquipment","item","a","b","equipmentSelectHandler","inputId","inputElement","enhancementLevelInputHandler","updateEquipmentState","updateUI","selectType","equipmentHrid","updateCombatStatsUI","combatStyleElement","combatStyle","combatStyleDetailMap","damageTypeElement","damageType","damageTypeDetailMap","attackIntervalElement","element","initLevelSection","skill","levelInput","levelInputHandler","updateLevels","initFoodSection","i","gameFoods","foodSelectHandler","updateFoodState","foodSelect","updateFoodUI","triggerButton","initDrinksSection","gameDrinks","drinkSelectHandler","updateDrinksState","updateDrinksUI","drinkSelect","initAbilitiesSection","gameAbilities","abilitySelectHandler","updateAbilityState","updateAbilityUI","abilitySelect","abilitySlotsLevelRequirementList","initTriggerModal","triggerModalShownHandler","triggerModalSaveHandler","triggerAddButtonHandler","triggerDefaultButtonHandler","triggerDependencySelect","triggerConditionSelect","triggerComparatorSelect","triggerValueInput","triggerRemoveButton","triggerDependencySelectHandler","triggerConditionSelectHandler","triggerComparatorSelectHander","triggerValueInputHandler","triggerRemoveButtonHandler","triggerType","triggerIndex","triggerTarget","triggerTargetnput","updateTriggerModal","index","triggerStartTextElement","triggerAddButton","triggersValid","triggerElement","hideElement","showElement","fillTriggerDependencySelect","fillTriggerConditionSelect","fillTriggerComparatorSelect","combatTriggerComparatorDetailMap","triggerSaveButton","conditions","combatTriggerConditionDetailMap","condition","comparators","comparator","initZones","zoneSelect","gameZones","actionDetailMap","action","zone","simResult","showKills","showDeaths","showExperienceGained","showConsumablesUsed","showHitpointsGained","showManapointsGained","showDamageDone","showDamageTaken","resultDiv","newChildren","hoursSimulated","encountersPerHour","encountersRow","createRow","monsters","enemy","monster","killsPerHour","monsterRow","combatMonsterDetailMap","deathsPerHour","deathRow","totalExperiencePerHour","totalRow","experience","experiencePerHour","experienceRow","consumablesUsed","consumable","amount","consumablesPerHour","consumableRow","secondsSimulated","hitpointsGained","totalHitpointsGained","totalHitpointsPerSecond","sourceText","hitpointsPerSecond","percentage","row","manapointsGained","totalManapointsGained","totalManapointsPerSecond","manapointsPerSecond","ranOutOfManaText","ranOutOfManaRow","totalDamageDone","enemyIndex","accordion","targetDamageDone","abilityCasts","casts","misses","damage","entry","createDamageTable","resultAccordion","resultAccordionButton","targetName","totalResultDiv","totalDamageTaken","targets","sourceDamageTaken","sourceName","damageDone","sortedDamageDone","totalCasts","totalMisses","totalDamage","totalHitChance","totalDamagePerSecond","damageInfo","abilityText","hitChance","damagePerSecond","columnClassNames","columnValues","createElement","column","tagName","className","innerHTML","initSimulationControls","simulationTimeInput","invalidElements","startSimulation","updateState","abilityLevelInput","simulationTimeLimit","workerMessage","initEquipmentSetsModal","equipmentSetsModalShownHandler","equipmentSetNameChangedHandler","createNewEquipmentSetHandler","resetNewEquipmentSetControls","updateEquipmentSetList","equipmentSetNameInput","createEquipmentSetButton","equipmentSets","loadEquipmentSets","equipmentSetName","nameCol","loadButtonCol","loadButton","_","loadEquipmentSetHandler","saveButtonCol","saveButton","updateEquipmentSetHandler","deleteButtonCol","deleteButton","deleteEquipmentSetHandler","invalid","equipmentSet","getEquipmentSetFromUI","saveEquipmentSets","name","loadEquipmentSetIntoUI","equipmentSelect","enhancementLevelInput","initErrorHandling","errorInput","error","state"],"mappings":"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"}