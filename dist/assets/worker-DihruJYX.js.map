{"version":3,"file":"worker-DihruJYX.js","sources":["../src/combatsimulator/combatUtilities.js","../src/combatsimulator/events/combatEvent.js","../src/combatsimulator/events/autoAttackEvent.js","../src/combatsimulator/events/bleedTickEvent.js","../src/combatsimulator/events/checkBuffExpirationEvent.js","../src/combatsimulator/events/combatStartEvent.js","../src/combatsimulator/events/consumableTickEvent.js","../src/combatsimulator/events/cooldownReadyEvent.js","../src/combatsimulator/events/enemyRespawnEvent.js","../node_modules/heap-js/dist/heap-js.es5.js","../src/combatsimulator/events/eventQueue.js","../src/combatsimulator/events/playerRespawnEvent.js","../src/combatsimulator/events/regenTickEvent.js","../src/combatsimulator/events/stunExpirationEvent.js","../src/combatsimulator/simResult.js","../src/combatsimulator/combatSimulator.js","../src/combatsimulator/buff.js","../src/combatsimulator/trigger.js","../src/combatsimulator/ability.js","../src/combatsimulator/combatUnit.js","../src/combatsimulator/consumable.js","../src/combatsimulator/equipment.js","../src/combatsimulator/player.js","../src/combatsimulator/monster.js","../src/combatsimulator/zone.js","../src/worker.js"],"sourcesContent":["class CombatUtilities {\n    static getTarget(enemies) {\n        if (!enemies) {\n            return null;\n        }\n        let target = enemies.find((enemy) => enemy.combatDetails.currentHitpoints > 0);\n\n        return target ?? null;\n    }\n\n    static randomInt(min, max) {\n        if (max < min) {\n            let temp = min;\n            min = max;\n            max = temp;\n        }\n\n        let minCeil = Math.ceil(min);\n        let maxFloor = Math.floor(max);\n\n        if (Math.floor(min) == maxFloor) {\n            return Math.floor((min + max) / 2 + Math.random());\n        }\n\n        let minTail = -1 * (min - minCeil);\n        let maxTail = max - maxFloor;\n\n        let balancedWeight = 2 * minTail + (maxFloor - minCeil);\n        let balancedAverage = (maxFloor + minCeil) / 2;\n        let average = (max + min) / 2;\n        let extraTailWeight = (balancedWeight * (average - balancedAverage)) / (maxFloor + 1 - average);\n        let extraTailChance = Math.abs(extraTailWeight / (extraTailWeight + balancedWeight));\n\n        if (Math.random() < extraTailChance) {\n            if (maxTail > minTail) {\n                return Math.floor(maxFloor + 1);\n            } else {\n                return Math.floor(minCeil - 1);\n            }\n        }\n\n        if (maxTail > minTail) {\n            return Math.floor(min + Math.random() * (maxFloor + minTail - min + 1));\n        } else {\n            return Math.floor(minCeil - maxTail + Math.random() * (max - (minCeil - maxTail) + 1));\n        }\n    }\n\n    static processAttack(source, target, abilityEffect = null) {\n        let combatStyle = abilityEffect\n            ? abilityEffect.combatStyleHrid\n            : source.combatDetails.combatStats.combatStyleHrid;\n        let damageType = abilityEffect ? abilityEffect.damageType : source.combatDetails.combatStats.damageType;\n\n        let sourceAccuracyRating = 1;\n        let sourceAutoAttackMaxDamage = 1;\n        let targetEvasionRating = 1;\n\n        switch (combatStyle) {\n            case \"/combat_styles/stab\":\n                sourceAccuracyRating = source.combatDetails.stabAccuracyRating;\n                sourceAutoAttackMaxDamage = source.combatDetails.stabMaxDamage;\n                targetEvasionRating = target.combatDetails.stabEvasionRating;\n                break;\n            case \"/combat_styles/slash\":\n                sourceAccuracyRating = source.combatDetails.slashAccuracyRating;\n                sourceAutoAttackMaxDamage = source.combatDetails.slashMaxDamage;\n                targetEvasionRating = target.combatDetails.slashEvasionRating;\n                break;\n            case \"/combat_styles/smash\":\n                sourceAccuracyRating = source.combatDetails.smashAccuracyRating;\n                sourceAutoAttackMaxDamage = source.combatDetails.smashMaxDamage;\n                targetEvasionRating = target.combatDetails.smashEvasionRating;\n                break;\n            case \"/combat_styles/ranged\":\n                sourceAccuracyRating = source.combatDetails.rangedAccuracyRating;\n                sourceAutoAttackMaxDamage = source.combatDetails.rangedMaxDamage;\n                targetEvasionRating = target.combatDetails.rangedEvasionRating;\n                break;\n            case \"/combat_styles/magic\":\n                sourceAutoAttackMaxDamage = source.combatDetails.magicMaxDamage;\n                break;\n            default:\n                throw new Error(\"Unknown combat style: \" + combatStyle);\n        }\n\n        let sourceDamageMultiplier = 1;\n        let sourceResistance = 0;\n        let targetResistance = 0;\n        let targetReflectPower = 0;\n\n        switch (damageType) {\n            case \"/damage_types/physical\":\n                sourceDamageMultiplier = 1 + source.combatDetails.combatStats.physicalAmplify;\n                sourceResistance = source.combatDetails.totalArmor;\n                targetResistance = target.combatDetails.totalArmor;\n                targetReflectPower = target.combatDetails.combatStats.physicalReflectPower;\n                break;\n            case \"/damage_types/water\":\n                sourceDamageMultiplier = 1 + source.combatDetails.combatStats.waterAmplify;\n                sourceResistance = source.combatDetails.totalWaterResistance;\n                targetResistance = target.combatDetails.totalWaterResistance;\n                break;\n            case \"/damage_types/nature\":\n                sourceDamageMultiplier = 1 + source.combatDetails.combatStats.natureAmplify;\n                sourceResistance = source.combatDetails.totalNatureResistance;\n                targetResistance = target.combatDetails.totalNatureResistance;\n                break;\n            case \"/damage_types/fire\":\n                sourceDamageMultiplier = 1 + source.combatDetails.combatStats.fireAmplify;\n                sourceResistance = source.combatDetails.totalFireResistance;\n                targetResistance = target.combatDetails.totalFireResistance;\n                break;\n            default:\n                throw new Error(\"Unknown damage type: \" + damageType);\n        }\n\n        let hitChance = 1;\n        let critChance = 0;\n\n        if (combatStyle != \"/combat_styles/magic\") {\n            hitChance =\n                Math.pow(sourceAccuracyRating, 1.4) /\n                (Math.pow(sourceAccuracyRating, 1.4) + Math.pow(targetEvasionRating, 1.4));\n        }\n\n        if (combatStyle == \"/combat_styles/ranged\") {\n            critChance = 0.3 * hitChance;\n        }\n\n        let baseDamageFlat = abilityEffect ? abilityEffect.damageFlat : 0;\n        let baseDamageRatio = abilityEffect ? abilityEffect.damageRatio : 1;\n\n        let sourceMinDamage = sourceDamageMultiplier * (1 + baseDamageFlat);\n        let sourceMaxDamage = sourceDamageMultiplier * (baseDamageRatio * sourceAutoAttackMaxDamage + baseDamageFlat);\n\n        if (Math.random() < critChance) {\n            sourceMinDamage = sourceMaxDamage;\n        }\n\n        let damageRoll = CombatUtilities.randomInt(sourceMinDamage, sourceMaxDamage);\n        let maxPremitigatedDamage = Math.min(damageRoll, target.combatDetails.currentHitpoints);\n\n        let damageDone = 0;\n        let mitigatedReflectDamage = 0;\n        let reflectDamageDone = 0;\n\n        let didHit = false;\n        if (Math.random() < hitChance) {\n            didHit = true;\n\n            let targetDamageTakenRatio = 100 / (100 + targetResistance);\n            if (targetResistance < 0) {\n                targetDamageTakenRatio = (100 - targetResistance) / 100;\n            }\n\n            let mitigatedDamage = Math.ceil(targetDamageTakenRatio * damageRoll);\n            damageDone = Math.min(mitigatedDamage, target.combatDetails.currentHitpoints);\n            target.combatDetails.currentHitpoints -= damageDone;\n        }\n\n        if (targetReflectPower > 0 && targetResistance > 0) {\n            let sourceDamageTakenRatio = 100 / (100 + sourceResistance);\n            if (sourceResistance < 0) {\n                sourceDamageTakenRatio = (100 - sourceResistance) / 100;\n            }\n\n            let reflectDamage = Math.ceil(targetReflectPower * targetResistance);\n            mitigatedReflectDamage = Math.ceil(sourceDamageTakenRatio * reflectDamage);\n            reflectDamageDone = Math.min(mitigatedReflectDamage, source.combatDetails.currentHitpoints);\n            source.combatDetails.currentHitpoints -= reflectDamageDone;\n        }\n\n        let lifeStealHeal = 0;\n        if (!abilityEffect && didHit && source.combatDetails.combatStats.lifeSteal > 0) {\n            lifeStealHeal = source.addHitpoints(Math.floor(source.combatDetails.combatStats.lifeSteal * damageDone));\n        }\n\n        let experienceGained = {\n            source: {\n                attack: 0,\n                power: 0,\n                ranged: 0,\n                magic: 0,\n            },\n            target: {\n                defense: 0,\n                stamina: 0,\n            },\n        };\n\n        switch (combatStyle) {\n            case \"/combat_styles/stab\":\n                experienceGained.source.attack = this.calculateAttackExperience(damageDone, combatStyle);\n                break;\n            case \"/combat_styles/slash\":\n                experienceGained.source.attack = this.calculateAttackExperience(damageDone, combatStyle);\n                experienceGained.source.power = this.calculatePowerExperience(damageDone, combatStyle);\n                break;\n            case \"/combat_styles/smash\":\n                experienceGained.source.power = this.calculatePowerExperience(damageDone, combatStyle);\n                break;\n            case \"/combat_styles/ranged\":\n                experienceGained.source.ranged = this.calculateRangedExperience(damageDone);\n                break;\n            case \"/combat_styles/magic\":\n                experienceGained.source.magic = this.calculateMagicExperience(damageDone);\n                break;\n        }\n\n        let damagePrevented = maxPremitigatedDamage - damageDone;\n\n        experienceGained.target.defense = this.calculateDefenseExperience(damagePrevented);\n        experienceGained.target.stamina = this.calculateStaminaExperience(damagePrevented, damageDone);\n\n        if (mitigatedReflectDamage > 0) {\n            experienceGained.target.defense += this.calculateDefenseExperience(mitigatedReflectDamage);\n        }\n\n        return { damageDone, didHit, reflectDamageDone, lifeStealHeal, experienceGained };\n    }\n\n    static processHeal(source, abilityEffect) {\n        if (abilityEffect.combatStyleHrid != \"/combat_styles/magic\") {\n            throw new Error(\"Heal ability effect not supported for combat style: \" + abilityEffect.combatStyleHrid);\n        }\n\n        let healingAmplify = 1 + source.combatDetails.combatStats.healingAmplify;\n        let magicMaxDamage = source.combatDetails.magicMaxDamage;\n\n        let baseHealFlat = abilityEffect.damageFlat;\n        let baseHealRatio = abilityEffect.damageRatio;\n\n        let minHeal = healingAmplify * (1 + baseHealFlat);\n        let maxHeal = healingAmplify * (baseHealRatio * magicMaxDamage + baseHealFlat);\n\n        let heal = this.randomInt(minHeal, maxHeal);\n        let amountHealed = source.addHitpoints(heal);\n\n        return amountHealed;\n    }\n\n    static calculateTickValue(totalValue, totalTicks, currentTick) {\n        let currentSum = Math.floor((currentTick * totalValue) / totalTicks);\n        let previousSum = Math.floor(((currentTick - 1) * totalValue) / totalTicks);\n\n        return currentSum - previousSum;\n    }\n\n    static calculateStaminaExperience(damagePrevented, damageTaken) {\n        return 0.03 * damagePrevented + 0.3 * damageTaken;\n    }\n\n    static calculateIntelligenceExperience(manaUsed) {\n        return 0.3 * manaUsed;\n    }\n\n    static calculateAttackExperience(damage, combatStyle) {\n        switch (combatStyle) {\n            case \"/combat_styles/stab\":\n                return 0.6 + 0.15 * damage;\n            case \"/combat_styles/slash\":\n                return 0.3 + 0.075 * damage;\n            default:\n                return 0;\n        }\n    }\n\n    static calculatePowerExperience(damage, combatStyle) {\n        switch (combatStyle) {\n            case \"/combat_styles/smash\":\n                return 0.6 + 0.15 * damage;\n            case \"/combat_styles/slash\":\n                return 0.3 + 0.075 * damage;\n            default:\n                return 0;\n        }\n    }\n\n    static calculateDefenseExperience(damagePrevented) {\n        return 0.4 + 0.1 * damagePrevented;\n    }\n\n    static calculateRangedExperience(damage) {\n        return 0.4 + 0.1 * damage;\n    }\n\n    static calculateMagicExperience(damage) {\n        return 0.4 + 0.1 * damage;\n    }\n}\n\nexport default CombatUtilities;\n","class CombatEvent {\n    constructor(type, time) {\n        this.type = type;\n        this.time = time;\n    }\n}\n\nexport default CombatEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass AutoAttackEvent extends CombatEvent {\n    static type = \"autoAttack\";\n\n    constructor(time, source) {\n        super(AutoAttackEvent.type, time);\n\n        this.source = source;\n    }\n}\n\nexport default AutoAttackEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass BleedTickEvent extends CombatEvent {\n    static type = \"bleedTick\";\n\n    constructor(time, sourceRef, target, damage, totalTicks, currentTick) {\n        super(BleedTickEvent.type, time);\n\n        // Calling it 'source' would wrongly clear bleeds when the source dies\n        this.sourceRef = sourceRef;\n        this.target = target;\n        this.damage = damage;\n        this.totalTicks = totalTicks;\n        this.currentTick = currentTick;\n    }\n}\n\nexport default BleedTickEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass CheckBuffExpirationEvent extends CombatEvent {\n    static type = \"checkBuffExpiration\";\n\n    constructor(time, source) {\n        super(CheckBuffExpirationEvent.type, time);\n\n        this.source = source;\n    }\n}\n\nexport default CheckBuffExpirationEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass CombatStartEvent extends CombatEvent {\n    static type = \"combatStart\";\n\n    constructor(time) {\n        super(CombatStartEvent.type, time);\n    }\n}\n\nexport default CombatStartEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass ConsumableTickEvent extends CombatEvent {\n    static type = \"consumableTick\";\n\n    constructor(time, source, consumable, totalTicks, currentTick) {\n        super(ConsumableTickEvent.type, time);\n\n        this.source = source;\n        this.consumable = consumable;\n        this.totalTicks = totalTicks;\n        this.currentTick = currentTick;\n    }\n}\n\nexport default ConsumableTickEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass CooldownReadyEvent extends CombatEvent {\n    static type = \"cooldownReady\";\n\n    constructor(time) {\n        super(CooldownReadyEvent.type, time);\n    }\n}\n\nexport default CooldownReadyEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass EnemyRespawnEvent extends CombatEvent {\n    static type = \"enemyRespawn\";\n\n    constructor(time) {\n        super(EnemyRespawnEvent.type, time);\n    }\n}\n\nexport default EnemyRespawnEvent;\n","var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator$1 = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read$1 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray$1 = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/**\n * Heap\n * @type {Class}\n */\nvar HeapAsync = /** @class */ (function () {\n    /**\n     * Heap instance constructor.\n     * @param  {Function} compare Optional comparison function, defaults to Heap.minComparator<number>\n     */\n    function HeapAsync(compare) {\n        if (compare === void 0) { compare = HeapAsync.minComparator; }\n        var _this = this;\n        this.compare = compare;\n        this.heapArray = [];\n        this._limit = 0;\n        /**\n         * Alias of add\n         */\n        this.offer = this.add;\n        /**\n         * Alias of peek\n         */\n        this.element = this.peek;\n        /**\n         * Alias of pop\n         */\n        this.poll = this.pop;\n        /**\n         * Returns the inverse to the comparison function.\n         * @return {Number}\n         */\n        this._invertedCompare = function (a, b) {\n            return _this.compare(a, b).then(function (res) { return -1 * res; });\n        };\n    }\n    /*\n              Static methods\n     */\n    /**\n     * Gets children indices for given index.\n     * @param  {Number} idx     Parent index\n     * @return {Array(Number)}  Array of children indices\n     */\n    HeapAsync.getChildrenIndexOf = function (idx) {\n        return [idx * 2 + 1, idx * 2 + 2];\n    };\n    /**\n     * Gets parent index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Parent index, -1 if idx is 0\n     */\n    HeapAsync.getParentIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : 2;\n        return Math.floor((idx - whichChildren) / 2);\n    };\n    /**\n     * Gets sibling index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Sibling index, -1 if idx is 0\n     */\n    HeapAsync.getSiblingIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : -1;\n        return idx + whichChildren;\n    };\n    /**\n     * Min heap comparison function, default.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    HeapAsync.minComparator = function (a, b) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                if (a > b) {\n                    return [2 /*return*/, 1];\n                }\n                else if (a < b) {\n                    return [2 /*return*/, -1];\n                }\n                else {\n                    return [2 /*return*/, 0];\n                }\n            });\n        });\n    };\n    /**\n     * Max heap comparison function.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    HeapAsync.maxComparator = function (a, b) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                if (b > a) {\n                    return [2 /*return*/, 1];\n                }\n                else if (b < a) {\n                    return [2 /*return*/, -1];\n                }\n                else {\n                    return [2 /*return*/, 0];\n                }\n            });\n        });\n    };\n    /**\n     * Min number heap comparison function, default.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    HeapAsync.minComparatorNumber = function (a, b) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                return [2 /*return*/, a - b];\n            });\n        });\n    };\n    /**\n     * Max number heap comparison function.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    HeapAsync.maxComparatorNumber = function (a, b) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                return [2 /*return*/, b - a];\n            });\n        });\n    };\n    /**\n     * Default equality function.\n     * @param  {any} a    First element\n     * @param  {any} b    Second element\n     * @return {Boolean}  True if equal, false otherwise\n     */\n    HeapAsync.defaultIsEqual = function (a, b) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                return [2 /*return*/, a === b];\n            });\n        });\n    };\n    /**\n     * Prints a heap.\n     * @param  {HeapAsync} heap Heap to be printed\n     * @returns {String}\n     */\n    HeapAsync.print = function (heap) {\n        function deep(i) {\n            var pi = HeapAsync.getParentIndexOf(i);\n            return Math.floor(Math.log2(pi + 1));\n        }\n        function repeat(str, times) {\n            var out = '';\n            for (; times > 0; --times) {\n                out += str;\n            }\n            return out;\n        }\n        var node = 0;\n        var lines = [];\n        var maxLines = deep(heap.length - 1) + 2;\n        var maxLength = 0;\n        while (node < heap.length) {\n            var i = deep(node) + 1;\n            if (node === 0) {\n                i = 0;\n            }\n            // Text representation\n            var nodeText = String(heap.get(node));\n            if (nodeText.length > maxLength) {\n                maxLength = nodeText.length;\n            }\n            // Add to line\n            lines[i] = lines[i] || [];\n            lines[i].push(nodeText);\n            node += 1;\n        }\n        return lines\n            .map(function (line, i) {\n            var times = Math.pow(2, maxLines - i) - 1;\n            return (repeat(' ', Math.floor(times / 2) * maxLength) +\n                line\n                    .map(function (el) {\n                    // centered\n                    var half = (maxLength - el.length) / 2;\n                    return repeat(' ', Math.ceil(half)) + el + repeat(' ', Math.floor(half));\n                })\n                    .join(repeat(' ', times * maxLength)));\n        })\n            .join('\\n');\n    };\n    /*\n              Python style\n     */\n    /**\n     * Converts an array into an array-heap, in place\n     * @param  {Array}    arr      Array to be modified\n     * @param  {Function} compare  Optional compare function\n     * @return {HeapAsync}              For convenience, it returns a Heap instance\n     */\n    HeapAsync.heapify = function (arr, compare) {\n        return __awaiter(this, void 0, void 0, function () {\n            var heap;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heap = new HeapAsync(compare);\n                        heap.heapArray = arr;\n                        return [4 /*yield*/, heap.init()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, heap];\n                }\n            });\n        });\n    };\n    /**\n     * Extract the peek of an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    HeapAsync.heappop = function (heapArr, compare) {\n        var heap = new HeapAsync(compare);\n        heap.heapArray = heapArr;\n        return heap.pop();\n    };\n    /**\n     * Pushes a item into an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     */\n    HeapAsync.heappush = function (heapArr, item, compare) {\n        return __awaiter(this, void 0, void 0, function () {\n            var heap;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heap = new HeapAsync(compare);\n                        heap.heapArray = heapArr;\n                        return [4 /*yield*/, heap.push(item)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Push followed by pop, faster\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    HeapAsync.heappushpop = function (heapArr, item, compare) {\n        var heap = new HeapAsync(compare);\n        heap.heapArray = heapArr;\n        return heap.pushpop(item);\n    };\n    /**\n     * Replace peek with item\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item as replacement\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    HeapAsync.heapreplace = function (heapArr, item, compare) {\n        var heap = new HeapAsync(compare);\n        heap.heapArray = heapArr;\n        return heap.replace(item);\n    };\n    /**\n     * Return the `n` most valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    HeapAsync.heaptop = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new HeapAsync(compare);\n        heap.heapArray = heapArr;\n        return heap.top(n);\n    };\n    /**\n     * Return the `n` least valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    HeapAsync.heapbottom = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new HeapAsync(compare);\n        heap.heapArray = heapArr;\n        return heap.bottom(n);\n    };\n    /**\n     * Return the `n` most valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    HeapAsync.nlargest = function (n, iterable, compare) {\n        return __awaiter(this, void 0, void 0, function () {\n            var heap;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heap = new HeapAsync(compare);\n                        heap.heapArray = __spreadArray$1([], __read$1(iterable), false);\n                        return [4 /*yield*/, heap.init()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, heap.top(n)];\n                }\n            });\n        });\n    };\n    /**\n     * Return the `n` least valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    HeapAsync.nsmallest = function (n, iterable, compare) {\n        return __awaiter(this, void 0, void 0, function () {\n            var heap;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heap = new HeapAsync(compare);\n                        heap.heapArray = __spreadArray$1([], __read$1(iterable), false);\n                        return [4 /*yield*/, heap.init()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, heap.bottom(n)];\n                }\n            });\n        });\n    };\n    /*\n              Instance methods\n     */\n    /**\n     * Adds an element to the heap. Aliases: `offer`.\n     * Same as: push(element)\n     * @param {any} element Element to be added\n     * @return {Boolean} true\n     */\n    HeapAsync.prototype.add = function (element) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._sortNodeUp(this.heapArray.push(element) - 1)];\n                    case 1:\n                        _a.sent();\n                        this._applyLimit();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * Adds an array of elements to the heap.\n     * Similar as: push(element, element, ...).\n     * @param {Array} elements Elements to be added\n     * @return {Boolean} true\n     */\n    HeapAsync.prototype.addAll = function (elements) {\n        return __awaiter(this, void 0, void 0, function () {\n            var i, l;\n            var _a;\n            return __generator$1(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        i = this.length;\n                        (_a = this.heapArray).push.apply(_a, __spreadArray$1([], __read$1(elements), false));\n                        l = this.length;\n                        _b.label = 1;\n                    case 1:\n                        if (!(i < l)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._sortNodeUp(i)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this._applyLimit();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    HeapAsync.prototype.bottom = function () {\n        return __awaiter(this, arguments, void 0, function (n) {\n            if (n === void 0) { n = 1; }\n            return __generator$1(this, function (_a) {\n                if (this.heapArray.length === 0 || n <= 0) {\n                    // Nothing to do\n                    return [2 /*return*/, []];\n                }\n                else if (this.heapArray.length === 1) {\n                    // Just the peek\n                    return [2 /*return*/, [this.heapArray[0]]];\n                }\n                else if (n >= this.heapArray.length) {\n                    // The whole heap\n                    return [2 /*return*/, __spreadArray$1([], __read$1(this.heapArray), false)];\n                }\n                else {\n                    // Some elements\n                    return [2 /*return*/, this._bottomN_push(~~n)];\n                }\n            });\n        });\n    };\n    /**\n     * Check if the heap is sorted, useful for testing purposes.\n     * @return {Undefined | Element}  Returns an element if something wrong is found, otherwise it's undefined\n     */\n    HeapAsync.prototype.check = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var j, el, children, children_1, children_1_1, ch, e_1_1;\n            var e_1, _a;\n            return __generator$1(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        j = 0;\n                        _b.label = 1;\n                    case 1:\n                        if (!(j < this.heapArray.length)) return [3 /*break*/, 10];\n                        el = this.heapArray[j];\n                        children = this.getChildrenOf(j);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 7, 8, 9]);\n                        children_1 = (e_1 = void 0, __values(children)), children_1_1 = children_1.next();\n                        _b.label = 3;\n                    case 3:\n                        if (!!children_1_1.done) return [3 /*break*/, 6];\n                        ch = children_1_1.value;\n                        return [4 /*yield*/, this.compare(el, ch)];\n                    case 4:\n                        if ((_b.sent()) > 0) {\n                            return [2 /*return*/, el];\n                        }\n                        _b.label = 5;\n                    case 5:\n                        children_1_1 = children_1.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 9:\n                        ++j;\n                        return [3 /*break*/, 1];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Remove all of the elements from this heap.\n     */\n    HeapAsync.prototype.clear = function () {\n        this.heapArray = [];\n    };\n    /**\n     * Clone this heap\n     * @return {HeapAsync}\n     */\n    HeapAsync.prototype.clone = function () {\n        var cloned = new HeapAsync(this.comparator());\n        cloned.heapArray = this.toArray();\n        cloned._limit = this._limit;\n        return cloned;\n    };\n    /**\n     * Returns the comparison function.\n     * @return {Function}\n     */\n    HeapAsync.prototype.comparator = function () {\n        return this.compare;\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * @param  {any}      o   Element to be found\n     * @param  {Function} fn  Optional comparison function, receives (element, needle)\n     * @return {Boolean}\n     */\n    HeapAsync.prototype.contains = function (o_1) {\n        return __awaiter(this, arguments, void 0, function (o, fn) {\n            var _a, _b, el, e_2_1;\n            var e_2, _c;\n            if (fn === void 0) { fn = HeapAsync.defaultIsEqual; }\n            return __generator$1(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _d.trys.push([0, 5, 6, 7]);\n                        _a = __values(this.heapArray), _b = _a.next();\n                        _d.label = 1;\n                    case 1:\n                        if (!!_b.done) return [3 /*break*/, 4];\n                        el = _b.value;\n                        return [4 /*yield*/, fn(el, o)];\n                    case 2:\n                        if (_d.sent()) {\n                            return [2 /*return*/, true];\n                        }\n                        _d.label = 3;\n                    case 3:\n                        _b = _a.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_2_1 = _d.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    /**\n     * Initialise a heap, sorting nodes\n     * @param  {Array} array Optional initial state array\n     */\n    HeapAsync.prototype.init = function (array) {\n        return __awaiter(this, void 0, void 0, function () {\n            var i;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (array) {\n                            this.heapArray = __spreadArray$1([], __read$1(array), false);\n                        }\n                        i = Math.floor(this.heapArray.length);\n                        _a.label = 1;\n                    case 1:\n                        if (!(i >= 0)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._sortNodeDown(i)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        --i;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this._applyLimit();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Test if the heap has no elements.\n     * @return {Boolean} True if no elements on the heap\n     */\n    HeapAsync.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    /**\n     * Get the leafs of the tree (no children nodes)\n     */\n    HeapAsync.prototype.leafs = function () {\n        if (this.heapArray.length === 0) {\n            return [];\n        }\n        var pi = HeapAsync.getParentIndexOf(this.heapArray.length - 1);\n        return this.heapArray.slice(pi + 1);\n    };\n    Object.defineProperty(HeapAsync.prototype, \"length\", {\n        /**\n         * Length of the heap.\n         * @return {Number}\n         */\n        get: function () {\n            return this.heapArray.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HeapAsync.prototype, \"limit\", {\n        /**\n         * Get length limit of the heap.\n         * @return {Number}\n         */\n        get: function () {\n            return this._limit;\n        },\n        /**\n         * Set length limit of the heap.\n         * @return {Number}\n         */\n        set: function (_l) {\n            this._limit = ~~_l;\n            this._applyLimit();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Top node. Aliases: `element`.\n     * Same as: `top(1)[0]`\n     * @return {any} Top node\n     */\n    HeapAsync.prototype.peek = function () {\n        return this.heapArray[0];\n    };\n    /**\n     * Extract the top node (root). Aliases: `poll`.\n     * @return {any} Extracted top node, undefined if empty\n     */\n    HeapAsync.prototype.pop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var last;\n            return __generator$1(this, function (_a) {\n                last = this.heapArray.pop();\n                if (this.length > 0 && last !== undefined) {\n                    return [2 /*return*/, this.replace(last)];\n                }\n                return [2 /*return*/, last];\n            });\n        });\n    };\n    /**\n     * Pushes element(s) to the heap.\n     * @param  {...any} elements Elements to insert\n     * @return {Boolean} True if elements are present\n     */\n    HeapAsync.prototype.push = function () {\n        var elements = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            elements[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator$1(this, function (_a) {\n                if (elements.length < 1) {\n                    return [2 /*return*/, false];\n                }\n                else if (elements.length === 1) {\n                    return [2 /*return*/, this.add(elements[0])];\n                }\n                else {\n                    return [2 /*return*/, this.addAll(elements)];\n                }\n            });\n        });\n    };\n    /**\n     * Same as push & pop in sequence, but faster\n     * @param  {any} element Element to insert\n     * @return {any}  Extracted top node\n     */\n    HeapAsync.prototype.pushpop = function (element) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator$1(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.compare(this.heapArray[0], element)];\n                    case 1:\n                        if (!((_b.sent()) < 0)) return [3 /*break*/, 3];\n                        _a = __read$1([this.heapArray[0], element], 2), element = _a[0], this.heapArray[0] = _a[1];\n                        return [4 /*yield*/, this._sortNodeDown(0)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3: return [2 /*return*/, element];\n                }\n            });\n        });\n    };\n    /**\n     * Remove an element from the heap.\n     * @param  {any}   o      Element to be found\n     * @param  {Function} fn  Optional function to compare\n     * @return {Boolean}      True if the heap was modified\n     */\n    HeapAsync.prototype.remove = function (o_1) {\n        return __awaiter(this, arguments, void 0, function (o, fn) {\n            var queue, idx, children;\n            var _this = this;\n            if (fn === void 0) { fn = HeapAsync.defaultIsEqual; }\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.heapArray.length)\n                            return [2 /*return*/, false];\n                        if (!(o === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.pop()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        queue = [0];\n                        _a.label = 3;\n                    case 3:\n                        if (!queue.length) return [3 /*break*/, 13];\n                        idx = queue.shift();\n                        return [4 /*yield*/, fn(this.heapArray[idx], o)];\n                    case 4:\n                        if (!_a.sent()) return [3 /*break*/, 11];\n                        if (!(idx === 0)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.pop()];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 6:\n                        if (!(idx === this.heapArray.length - 1)) return [3 /*break*/, 7];\n                        this.heapArray.pop();\n                        return [3 /*break*/, 10];\n                    case 7:\n                        this.heapArray.splice(idx, 1, this.heapArray.pop());\n                        return [4 /*yield*/, this._sortNodeUp(idx)];\n                    case 8:\n                        _a.sent();\n                        return [4 /*yield*/, this._sortNodeDown(idx)];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: return [2 /*return*/, true];\n                    case 11:\n                        children = HeapAsync.getChildrenIndexOf(idx).filter(function (c) { return c < _this.heapArray.length; });\n                        queue.push.apply(queue, __spreadArray$1([], __read$1(children), false));\n                        _a.label = 12;\n                    case 12: return [3 /*break*/, 3];\n                    case 13: return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    /**\n     * Pop the current peek value, and add the new item.\n     * @param  {any} element  Element to replace peek\n     * @return {any}         Old peek\n     */\n    HeapAsync.prototype.replace = function (element) {\n        return __awaiter(this, void 0, void 0, function () {\n            var peek;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        peek = this.heapArray[0];\n                        this.heapArray[0] = element;\n                        return [4 /*yield*/, this._sortNodeDown(0)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, peek];\n                }\n            });\n        });\n    };\n    /**\n     * Size of the heap\n     * @return {Number}\n     */\n    HeapAsync.prototype.size = function () {\n        return this.length;\n    };\n    /**\n     * Return the top (highest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}    Array of length <= N.\n     */\n    HeapAsync.prototype.top = function () {\n        return __awaiter(this, arguments, void 0, function (n) {\n            if (n === void 0) { n = 1; }\n            return __generator$1(this, function (_a) {\n                if (this.heapArray.length === 0 || n <= 0) {\n                    // Nothing to do\n                    return [2 /*return*/, []];\n                }\n                else if (this.heapArray.length === 1 || n === 1) {\n                    // Just the peek\n                    return [2 /*return*/, [this.heapArray[0]]];\n                }\n                else if (n >= this.heapArray.length) {\n                    // The whole peek\n                    return [2 /*return*/, __spreadArray$1([], __read$1(this.heapArray), false)];\n                }\n                else {\n                    // Some elements\n                    return [2 /*return*/, this._topN_push(~~n)];\n                }\n            });\n        });\n    };\n    /**\n     * Clone the heap's internal array\n     * @return {Array}\n     */\n    HeapAsync.prototype.toArray = function () {\n        return __spreadArray$1([], __read$1(this.heapArray), false);\n    };\n    /**\n     * String output, call to Array.prototype.toString()\n     * @return {String}\n     */\n    HeapAsync.prototype.toString = function () {\n        return this.heapArray.toString();\n    };\n    /**\n     * Get the element at the given index.\n     * @param  {Number} i Index to get\n     * @return {any}       Element at that index\n     */\n    HeapAsync.prototype.get = function (i) {\n        return this.heapArray[i];\n    };\n    /**\n     * Get the elements of these node's children\n     * @param  {Number} idx Node index\n     * @return {Array(any)}  Children elements\n     */\n    HeapAsync.prototype.getChildrenOf = function (idx) {\n        var _this = this;\n        return HeapAsync.getChildrenIndexOf(idx)\n            .map(function (i) { return _this.heapArray[i]; })\n            .filter(function (e) { return e !== undefined; });\n    };\n    /**\n     * Get the element of this node's parent\n     * @param  {Number} idx Node index\n     * @return {any}     Parent element\n     */\n    HeapAsync.prototype.getParentOf = function (idx) {\n        var pi = HeapAsync.getParentIndexOf(idx);\n        return this.heapArray[pi];\n    };\n    /**\n     * Iterator interface\n     */\n    HeapAsync.prototype[Symbol.iterator] = function () {\n        return __generator$1(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!this.length) return [3 /*break*/, 2];\n                    return [4 /*yield*/, this.pop()];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    };\n    /**\n     * Returns an iterator. To comply with Java interface.\n     */\n    HeapAsync.prototype.iterator = function () {\n        return this;\n    };\n    /**\n     * Limit heap size if needed\n     */\n    HeapAsync.prototype._applyLimit = function () {\n        if (this._limit && this._limit < this.heapArray.length) {\n            var rm = this.heapArray.length - this._limit;\n            // It's much faster than splice\n            while (rm) {\n                this.heapArray.pop();\n                --rm;\n            }\n        }\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap, without corner cases, unsorted\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    HeapAsync.prototype._bottomN_push = function (n) {\n        return __awaiter(this, void 0, void 0, function () {\n            var bottomHeap, startAt, parentStartAt, indices, i, arr, i;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        bottomHeap = new HeapAsync(this.compare);\n                        bottomHeap.limit = n;\n                        bottomHeap.heapArray = this.heapArray.slice(-n);\n                        return [4 /*yield*/, bottomHeap.init()];\n                    case 1:\n                        _a.sent();\n                        startAt = this.heapArray.length - 1 - n;\n                        parentStartAt = HeapAsync.getParentIndexOf(startAt);\n                        indices = [];\n                        for (i = startAt; i > parentStartAt; --i) {\n                            indices.push(i);\n                        }\n                        arr = this.heapArray;\n                        _a.label = 2;\n                    case 2:\n                        if (!indices.length) return [3 /*break*/, 6];\n                        i = indices.shift();\n                        return [4 /*yield*/, this.compare(arr[i], bottomHeap.peek())];\n                    case 3:\n                        if (!((_a.sent()) > 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, bottomHeap.replace(arr[i])];\n                    case 4:\n                        _a.sent();\n                        if (i % 2) {\n                            indices.push(HeapAsync.getParentIndexOf(i));\n                        }\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 2];\n                    case 6: return [2 /*return*/, bottomHeap.toArray()];\n                }\n            });\n        });\n    };\n    /**\n     * Move a node to a new index, switching places\n     * @param  {Number} j First node index\n     * @param  {Number} k Another node index\n     */\n    HeapAsync.prototype._moveNode = function (j, k) {\n        var _a;\n        _a = __read$1([this.heapArray[k], this.heapArray[j]], 2), this.heapArray[j] = _a[0], this.heapArray[k] = _a[1];\n    };\n    /**\n     * Move a node down the tree (to the leaves) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    HeapAsync.prototype._sortNodeDown = function (i) {\n        return __awaiter(this, void 0, void 0, function () {\n            var length, left, right, best, _a, _b;\n            return __generator$1(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        length = this.heapArray.length;\n                        _c.label = 1;\n                    case 1:\n                        left = 2 * i + 1;\n                        right = left + 1;\n                        best = i;\n                        _a = left < length;\n                        if (!_a) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.compare(this.heapArray[left], this.heapArray[best])];\n                    case 2:\n                        _a = (_c.sent()) < 0;\n                        _c.label = 3;\n                    case 3:\n                        if (_a) {\n                            best = left;\n                        }\n                        _b = right < length;\n                        if (!_b) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.compare(this.heapArray[right], this.heapArray[best])];\n                    case 4:\n                        _b = (_c.sent()) < 0;\n                        _c.label = 5;\n                    case 5:\n                        if (_b) {\n                            best = right;\n                        }\n                        if (best === i)\n                            return [3 /*break*/, 7];\n                        this._moveNode(i, best);\n                        i = best;\n                        _c.label = 6;\n                    case 6:\n                        return [3 /*break*/, 1];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Move a node up the tree (to the root) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    HeapAsync.prototype._sortNodeUp = function (i) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pi;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(i > 0)) return [3 /*break*/, 2];\n                        pi = HeapAsync.getParentIndexOf(i);\n                        return [4 /*yield*/, this.compare(this.heapArray[i], this.heapArray[pi])];\n                    case 1:\n                        if ((_a.sent()) < 0) {\n                            this._moveNode(i, pi);\n                            i = pi;\n                        }\n                        else\n                            return [3 /*break*/, 2];\n                        return [3 /*break*/, 0];\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    HeapAsync.prototype._topN_push = function (n) {\n        return __awaiter(this, void 0, void 0, function () {\n            var topHeap, indices, arr, i;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        topHeap = new HeapAsync(this._invertedCompare);\n                        topHeap.limit = n;\n                        indices = [0];\n                        arr = this.heapArray;\n                        _a.label = 1;\n                    case 1:\n                        if (!indices.length) return [3 /*break*/, 7];\n                        i = indices.shift();\n                        if (!(i < arr.length)) return [3 /*break*/, 6];\n                        if (!(topHeap.length < n)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, topHeap.push(arr[i])];\n                    case 2:\n                        _a.sent();\n                        indices.push.apply(indices, __spreadArray$1([], __read$1(HeapAsync.getChildrenIndexOf(i)), false));\n                        return [3 /*break*/, 6];\n                    case 3: return [4 /*yield*/, this.compare(arr[i], topHeap.peek())];\n                    case 4:\n                        if (!((_a.sent()) < 0)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, topHeap.replace(arr[i])];\n                    case 5:\n                        _a.sent();\n                        indices.push.apply(indices, __spreadArray$1([], __read$1(HeapAsync.getChildrenIndexOf(i)), false));\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 1];\n                    case 7: return [2 /*return*/, topHeap.toArray()];\n                }\n            });\n        });\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: init + push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    HeapAsync.prototype._topN_fill = function (n) {\n        return __awaiter(this, void 0, void 0, function () {\n            var heapArray, topHeap, branch, indices, i, i;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heapArray = this.heapArray;\n                        topHeap = new HeapAsync(this._invertedCompare);\n                        topHeap.limit = n;\n                        topHeap.heapArray = heapArray.slice(0, n);\n                        return [4 /*yield*/, topHeap.init()];\n                    case 1:\n                        _a.sent();\n                        branch = HeapAsync.getParentIndexOf(n - 1) + 1;\n                        indices = [];\n                        for (i = branch; i < n; ++i) {\n                            indices.push.apply(indices, __spreadArray$1([], __read$1(HeapAsync.getChildrenIndexOf(i).filter(function (l) { return l < heapArray.length; })), false));\n                        }\n                        if ((n - 1) % 2) {\n                            indices.push(n);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!indices.length) return [3 /*break*/, 6];\n                        i = indices.shift();\n                        if (!(i < heapArray.length)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.compare(heapArray[i], topHeap.peek())];\n                    case 3:\n                        if (!((_a.sent()) < 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, topHeap.replace(heapArray[i])];\n                    case 4:\n                        _a.sent();\n                        indices.push.apply(indices, __spreadArray$1([], __read$1(HeapAsync.getChildrenIndexOf(i)), false));\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 2];\n                    case 6: return [2 /*return*/, topHeap.toArray()];\n                }\n            });\n        });\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    HeapAsync.prototype._topN_heap = function (n) {\n        return __awaiter(this, void 0, void 0, function () {\n            var topHeap, result, i, _a, _b;\n            return __generator$1(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        topHeap = this.clone();\n                        result = [];\n                        i = 0;\n                        _c.label = 1;\n                    case 1:\n                        if (!(i < n)) return [3 /*break*/, 4];\n                        _b = (_a = result).push;\n                        return [4 /*yield*/, topHeap.pop()];\n                    case 2:\n                        _b.apply(_a, [(_c.sent())]);\n                        _c.label = 3;\n                    case 3:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Return index of the top element\n     * @param list\n     */\n    HeapAsync.prototype._topIdxOf = function (list) {\n        return __awaiter(this, void 0, void 0, function () {\n            var idx, top, i, comp;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!list.length) {\n                            return [2 /*return*/, -1];\n                        }\n                        idx = 0;\n                        top = list[idx];\n                        i = 1;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < list.length)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.compare(list[i], top)];\n                    case 2:\n                        comp = _a.sent();\n                        if (comp < 0) {\n                            idx = i;\n                            top = list[i];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, idx];\n                }\n            });\n        });\n    };\n    /**\n     * Return the top element\n     * @param list\n     */\n    HeapAsync.prototype._topOf = function () {\n        var list = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            list[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var heap;\n            return __generator$1(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        heap = new HeapAsync(this.compare);\n                        return [4 /*yield*/, heap.init(list)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, heap.peek()];\n                }\n            });\n        });\n    };\n    return HeapAsync;\n}());\n\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar toInt = function (n) { return ~~n; };\n/**\n * Heap\n * @type {Class}\n */\nvar Heap = /** @class */ (function () {\n    /**\n     * Heap instance constructor.\n     * @param  {Function} compare Optional comparison function, defaults to Heap.minComparator<number>\n     */\n    function Heap(compare) {\n        if (compare === void 0) { compare = Heap.minComparator; }\n        var _this = this;\n        this.compare = compare;\n        this.heapArray = [];\n        this._limit = 0;\n        /**\n         * Alias of {@link add}\n         * @see add\n         */\n        this.offer = this.add;\n        /**\n         * Alias of {@link peek}\n         * @see peek\n         */\n        this.element = this.peek;\n        /**\n         * Alias of {@link pop}\n         * @see pop\n         */\n        this.poll = this.pop;\n        /**\n         * Alias of {@link clear}\n         * @see clear\n         */\n        this.removeAll = this.clear;\n        /**\n         * Returns the inverse to the comparison function.\n         * @return {Function}\n         */\n        this._invertedCompare = function (a, b) {\n            return -1 * _this.compare(a, b);\n        };\n    }\n    /*\n              Static methods\n     */\n    /**\n     * Gets children indices for given index.\n     * @param  {Number} idx     Parent index\n     * @return {Array(Number)}  Array of children indices\n     */\n    Heap.getChildrenIndexOf = function (idx) {\n        return [idx * 2 + 1, idx * 2 + 2];\n    };\n    /**\n     * Gets parent index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Parent index, -1 if idx is 0\n     */\n    Heap.getParentIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : 2;\n        return Math.floor((idx - whichChildren) / 2);\n    };\n    /**\n     * Gets sibling index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Sibling index, -1 if idx is 0\n     */\n    Heap.getSiblingIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : -1;\n        return idx + whichChildren;\n    };\n    /**\n     * Min heap comparison function, default.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.minComparator = function (a, b) {\n        if (a > b) {\n            return 1;\n        }\n        else if (a < b) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Max heap comparison function.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.maxComparator = function (a, b) {\n        if (b > a) {\n            return 1;\n        }\n        else if (b < a) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Min number heap comparison function, default.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.minComparatorNumber = function (a, b) {\n        return a - b;\n    };\n    /**\n     * Max number heap comparison function.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.maxComparatorNumber = function (a, b) {\n        return b - a;\n    };\n    /**\n     * Default equality function.\n     * @param  {any} a    First element\n     * @param  {any} b    Second element\n     * @return {Boolean}  True if equal, false otherwise\n     */\n    Heap.defaultIsEqual = function (a, b) {\n        return a === b;\n    };\n    /**\n     * Prints a heap.\n     * @param  {Heap} heap Heap to be printed\n     * @returns {String}\n     */\n    Heap.print = function (heap) {\n        function deep(i) {\n            var pi = Heap.getParentIndexOf(i);\n            return Math.floor(Math.log2(pi + 1));\n        }\n        function repeat(str, times) {\n            var out = '';\n            for (; times > 0; --times) {\n                out += str;\n            }\n            return out;\n        }\n        var node = 0;\n        var lines = [];\n        var maxLines = deep(heap.length - 1) + 2;\n        var maxLength = 0;\n        while (node < heap.length) {\n            var i = deep(node) + 1;\n            if (node === 0) {\n                i = 0;\n            }\n            // Text representation\n            var nodeText = String(heap.get(node));\n            if (nodeText.length > maxLength) {\n                maxLength = nodeText.length;\n            }\n            // Add to line\n            lines[i] = lines[i] || [];\n            lines[i].push(nodeText);\n            node += 1;\n        }\n        return lines\n            .map(function (line, i) {\n            var times = Math.pow(2, maxLines - i) - 1;\n            return (repeat(' ', Math.floor(times / 2) * maxLength) +\n                line\n                    .map(function (el) {\n                    // centered\n                    var half = (maxLength - el.length) / 2;\n                    return repeat(' ', Math.ceil(half)) + el + repeat(' ', Math.floor(half));\n                })\n                    .join(repeat(' ', times * maxLength)));\n        })\n            .join('\\n');\n    };\n    /*\n              Python style\n     */\n    /**\n     * Converts an array into an array-heap, in place\n     * @param  {Array}    arr      Array to be modified\n     * @param  {Function} compare  Optional compare function\n     * @return {Heap}              For convenience, it returns a Heap instance\n     */\n    Heap.heapify = function (arr, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = arr;\n        heap.init();\n        return heap;\n    };\n    /**\n     * Extract the peek of an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heappop = function (heapArr, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.pop();\n    };\n    /**\n     * Pushes a item into an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     */\n    Heap.heappush = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        heap.push(item);\n    };\n    /**\n     * Push followed by pop, faster\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heappushpop = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.pushpop(item);\n    };\n    /**\n     * Replace peek with item\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item as replacement\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heapreplace = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.replace(item);\n    };\n    /**\n     * Return the `n` most valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.heaptop = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.top(n);\n    };\n    /**\n     * Return the `n` least valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.heapbottom = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.bottom(n);\n    };\n    /**\n     * Return the `n` most valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.nlargest = function (n, iterable, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = __spreadArray([], __read(iterable), false);\n        heap.init();\n        return heap.top(n);\n    };\n    /**\n     * Return the `n` least valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.nsmallest = function (n, iterable, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = __spreadArray([], __read(iterable), false);\n        heap.init();\n        return heap.bottom(n);\n    };\n    /*\n              Instance methods\n     */\n    /**\n     * Adds an element to the heap. Aliases: {@link offer}.\n     * Same as: {@link push}(element).\n     * @param {any} element Element to be added\n     * @return {Boolean} true\n     */\n    Heap.prototype.add = function (element) {\n        this._sortNodeUp(this.heapArray.push(element) - 1);\n        this._applyLimit();\n        return true;\n    };\n    /**\n     * Adds an array of elements to the heap.\n     * Similar as: {@link push}(element, element, ...).\n     * @param {Array} elements Elements to be added\n     * @return {Boolean} true\n     */\n    Heap.prototype.addAll = function (elements) {\n        var _a;\n        var i = this.length;\n        (_a = this.heapArray).push.apply(_a, __spreadArray([], __read(elements), false));\n        for (var l = this.length; i < l; ++i) {\n            this._sortNodeUp(i);\n        }\n        this._applyLimit();\n        return true;\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype.bottom = function (n) {\n        if (n === void 0) { n = 1; }\n        if (this.heapArray.length === 0 || n <= 0) {\n            // Nothing to do\n            return [];\n        }\n        else if (this.heapArray.length === 1) {\n            // Just the peek\n            return [this.heapArray[0]];\n        }\n        else if (n >= this.heapArray.length) {\n            // The whole heap\n            return __spreadArray([], __read(this.heapArray), false);\n        }\n        else {\n            // Some elements\n            return this._bottomN_push(~~n);\n        }\n    };\n    /**\n     * Check if the heap is sorted, useful for testing purposes.\n     * @return {Undefined | Element}  Returns an element if something wrong is found, otherwise it's undefined\n     */\n    Heap.prototype.check = function () {\n        var _this = this;\n        return this.heapArray.find(function (el, j) { return !!_this.getChildrenOf(j).find(function (ch) { return _this.compare(el, ch) > 0; }); });\n    };\n    /**\n     * Remove all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.heapArray = [];\n    };\n    /**\n     * Clone this heap\n     * @return {Heap}\n     */\n    Heap.prototype.clone = function () {\n        var cloned = new Heap(this.comparator());\n        cloned.heapArray = this.toArray();\n        cloned._limit = this._limit;\n        return cloned;\n    };\n    /**\n     * Returns the comparison function.\n     * @return {Function}\n     */\n    Heap.prototype.comparator = function () {\n        return this.compare;\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * @param  {any}      o   Element to be found\n     * @param  {Function} callbackFn  Optional comparison function, receives (element, needle)\n     * @return {Boolean}\n     */\n    Heap.prototype.contains = function (o, callbackFn) {\n        if (callbackFn === void 0) { callbackFn = Heap.defaultIsEqual; }\n        return this.indexOf(o, callbackFn) !== -1;\n    };\n    /**\n     * Initialize a heap, sorting nodes\n     * @param  {Array} array Optional initial state array\n     */\n    Heap.prototype.init = function (array) {\n        if (array) {\n            this.heapArray = __spreadArray([], __read(array), false);\n        }\n        for (var i = Math.floor(this.heapArray.length); i >= 0; --i) {\n            this._sortNodeDown(i);\n        }\n        this._applyLimit();\n    };\n    /**\n     * Test if the heap has no elements.\n     * @return {Boolean} True if no elements on the heap\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    /**\n     * Get the index of the first occurrence of the element in the heap (using the comparator).\n     * @param  {any}      element    Element to be found\n     * @param  {Function} callbackFn Optional comparison function, receives (element, needle)\n     * @return {Number}              Index or -1 if not found\n     */\n    Heap.prototype.indexOf = function (element, callbackFn) {\n        if (callbackFn === void 0) { callbackFn = Heap.defaultIsEqual; }\n        if (this.heapArray.length === 0) {\n            return -1;\n        }\n        var indexes = [];\n        var currentIndex = 0;\n        while (currentIndex < this.heapArray.length) {\n            var currentElement = this.heapArray[currentIndex];\n            if (callbackFn(currentElement, element)) {\n                return currentIndex;\n            }\n            else if (this.compare(currentElement, element) <= 0) {\n                indexes.push.apply(indexes, __spreadArray([], __read(Heap.getChildrenIndexOf(currentIndex)), false));\n            }\n            currentIndex = indexes.shift() || this.heapArray.length;\n        }\n        return -1;\n    };\n    /**\n     * Get the indexes of the every occurrence of the element in the heap (using the comparator).\n     * @param  {any}      element    Element to be found\n     * @param  {Function} callbackFn Optional comparison function, receives (element, needle)\n     * @return {Array}               Array of indexes or empty array if not found\n     */\n    Heap.prototype.indexOfEvery = function (element, callbackFn) {\n        if (callbackFn === void 0) { callbackFn = Heap.defaultIsEqual; }\n        if (this.heapArray.length === 0) {\n            return [];\n        }\n        var indexes = [];\n        var foundIndexes = [];\n        var currentIndex = 0;\n        while (currentIndex < this.heapArray.length) {\n            var currentElement = this.heapArray[currentIndex];\n            if (callbackFn(currentElement, element)) {\n                foundIndexes.push(currentIndex);\n                indexes.push.apply(indexes, __spreadArray([], __read(Heap.getChildrenIndexOf(currentIndex)), false));\n            }\n            else if (this.compare(currentElement, element) <= 0) {\n                indexes.push.apply(indexes, __spreadArray([], __read(Heap.getChildrenIndexOf(currentIndex)), false));\n            }\n            currentIndex = indexes.shift() || this.heapArray.length;\n        }\n        return foundIndexes;\n    };\n    /**\n     * Get the leafs of the tree (no children nodes).\n     * See also: {@link getChildrenOf} and {@link bottom}.\n     * @return {Array}\n     * @see getChildrenOf\n     * @see bottom\n     */\n    Heap.prototype.leafs = function () {\n        if (this.heapArray.length === 0) {\n            return [];\n        }\n        var pi = Heap.getParentIndexOf(this.heapArray.length - 1);\n        return this.heapArray.slice(pi + 1);\n    };\n    Object.defineProperty(Heap.prototype, \"length\", {\n        /**\n         * Length of the heap. Aliases: {@link size}.\n         * @return {Number}\n         * @see size\n         */\n        get: function () {\n            return this.heapArray.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Heap.prototype, \"limit\", {\n        /**\n         * Get length limit of the heap.\n         * Use {@link setLimit} or {@link limit} to set the limit.\n         * @return {Number}\n         * @see setLimit\n         */\n        get: function () {\n            return this._limit;\n        },\n        /**\n         * Set length limit of the heap. Same as using {@link setLimit}.\n         * @description If the heap is longer than the limit, the needed amount of leafs are removed.\n         * @param {Number} _l Limit, defaults to 0 (no limit). Negative, Infinity, or NaN values set the limit to 0.\n         * @see setLimit\n         */\n        set: function (_l) {\n            if (_l < 0 || isNaN(_l)) {\n                // NaN, negative, and Infinity are treated as 0\n                this._limit = 0;\n            }\n            else {\n                // truncating a floating-point number to an integer\n                this._limit = ~~_l;\n            }\n            this._applyLimit();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Set length limit of the heap.\n     * Same as assigning to {@link limit} but returns NaN if the value was invalid.\n     * @param {Number} _l Limit. Negative, Infinity, or NaN values set the limit to 0.\n     * @return {Number} The limit or NaN if the value was negative, or NaN.\n     * @see limit\n     */\n    Heap.prototype.setLimit = function (_l) {\n        this.limit = _l;\n        if (_l < 0 || isNaN(_l)) {\n            return NaN;\n        }\n        else {\n            return this._limit;\n        }\n    };\n    /**\n     * Top node. Aliases: {@link element}.\n     * Same as: {@link top}(1)[0].\n     * @return {any} Top node\n     * @see top\n     */\n    Heap.prototype.peek = function () {\n        return this.heapArray[0];\n    };\n    /**\n     * Extract the top node (root). Aliases: {@link poll}.\n     * @return {any} Extracted top node, undefined if empty\n     */\n    Heap.prototype.pop = function () {\n        var last = this.heapArray.pop();\n        if (this.length > 0 && last !== undefined) {\n            return this.replace(last);\n        }\n        return last;\n    };\n    /**\n     * Pushes element(s) to the heap.\n     * See also: {@link add} and {@link addAll}.\n     * @param  {...any} elements Elements to insert\n     * @return {Boolean} True if elements are present\n     */\n    Heap.prototype.push = function () {\n        var elements = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            elements[_i] = arguments[_i];\n        }\n        if (elements.length < 1) {\n            return false;\n        }\n        else if (elements.length === 1) {\n            return this.add(elements[0]);\n        }\n        else {\n            return this.addAll(elements);\n        }\n    };\n    /**\n     * Same as push & pop in sequence, but faster\n     * @param  {any} element Element to insert\n     * @return {any}  Extracted top node\n     */\n    Heap.prototype.pushpop = function (element) {\n        var _a;\n        if (this.compare(this.heapArray[0], element) < 0) {\n            _a = __read([this.heapArray[0], element], 2), element = _a[0], this.heapArray[0] = _a[1];\n            this._sortNodeDown(0);\n        }\n        return element;\n    };\n    /**\n     * Remove the first occurrence of an element from the heap.\n     * @param  {any}   o      Element to be found\n     * @param  {Function} callbackFn  Optional equality function, receives (element, needle)\n     * @return {Boolean}      True if the heap was modified\n     */\n    Heap.prototype.remove = function (o, callbackFn) {\n        var _this = this;\n        if (callbackFn === void 0) { callbackFn = Heap.defaultIsEqual; }\n        if (!this.heapArray.length)\n            return false;\n        if (o === undefined) {\n            this.pop();\n            return true;\n        }\n        var queue = [0];\n        while (queue.length) {\n            var idx = queue.shift();\n            if (callbackFn(this.heapArray[idx], o)) {\n                if (idx === 0) {\n                    this.pop();\n                }\n                else if (idx === this.heapArray.length - 1) {\n                    this.heapArray.pop();\n                }\n                else {\n                    this.heapArray.splice(idx, 1, this.heapArray.pop());\n                    this._sortNodeUp(idx);\n                    this._sortNodeDown(idx);\n                }\n                return true;\n            }\n            else if (this.compare(this.heapArray[idx], o) <= 0) {\n                var children = Heap.getChildrenIndexOf(idx).filter(function (c) { return c < _this.heapArray.length; });\n                queue.push.apply(queue, __spreadArray([], __read(children), false));\n            }\n        }\n        return false;\n    };\n    /**\n     * Pop the current peek value, and add the new item.\n     * @param  {any} element  Element to replace peek\n     * @return {any}         Old peek\n     */\n    Heap.prototype.replace = function (element) {\n        var peek = this.heapArray[0];\n        this.heapArray[0] = element;\n        this._sortNodeDown(0);\n        return peek;\n    };\n    /**\n     * Size of the heap\n     * @return {Number}\n     */\n    Heap.prototype.size = function () {\n        return this.length;\n    };\n    /**\n     * Return the top (highest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}    Array of length <= N.\n     */\n    Heap.prototype.top = function (n) {\n        if (n === void 0) { n = 1; }\n        if (this.heapArray.length === 0 || n <= 0) {\n            // Nothing to do\n            return [];\n        }\n        else if (this.heapArray.length === 1 || n === 1) {\n            // Just the peek\n            return [this.heapArray[0]];\n        }\n        else if (n >= this.heapArray.length) {\n            // The whole peek\n            return __spreadArray([], __read(this.heapArray), false);\n        }\n        else {\n            // Some elements\n            return this._topN_push(~~n);\n        }\n    };\n    /**\n     * Clone the heap's internal array\n     * @return {Array}\n     */\n    Heap.prototype.toArray = function () {\n        return __spreadArray([], __read(this.heapArray), false);\n    };\n    /**\n     * String output, call to Array.prototype.toString()\n     * @return {String}\n     */\n    Heap.prototype.toString = function () {\n        return this.heapArray.toString();\n    };\n    /**\n     * Get the element at the given index.\n     * @param  {Number} i Index to get\n     * @return {any}       Element at that index\n     */\n    Heap.prototype.get = function (i) {\n        return this.heapArray[i];\n    };\n    /**\n     * Get the elements of these node's children\n     * @param  {Number} idx Node index\n     * @return {Array(any)}  Children elements\n     */\n    Heap.prototype.getChildrenOf = function (idx) {\n        var _this = this;\n        return Heap.getChildrenIndexOf(idx)\n            .map(function (i) { return _this.heapArray[i]; })\n            .filter(function (e) { return e !== undefined; });\n    };\n    /**\n     * Get the element of this node's parent\n     * @param  {Number} idx Node index\n     * @return {any}     Parent element\n     */\n    Heap.prototype.getParentOf = function (idx) {\n        var pi = Heap.getParentIndexOf(idx);\n        return this.heapArray[pi];\n    };\n    /**\n     * Iterator interface\n     */\n    Heap.prototype[Symbol.iterator] = function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!this.length) return [3 /*break*/, 2];\n                    return [4 /*yield*/, this.pop()];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    };\n    /**\n     * Returns an iterator. To comply with Java interface.\n     */\n    Heap.prototype.iterator = function () {\n        return this.toArray();\n    };\n    /**\n     * Limit heap size if needed\n     */\n    Heap.prototype._applyLimit = function () {\n        if (this._limit > 0 && this._limit < this.heapArray.length) {\n            var rm = this.heapArray.length - this._limit;\n            // It's much faster than splice\n            while (rm) {\n                this.heapArray.pop();\n                --rm;\n            }\n        }\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap, without corner cases, unsorted\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._bottomN_push = function (n) {\n        // Use an inverted heap\n        var bottomHeap = new Heap(this.compare);\n        bottomHeap.limit = n;\n        bottomHeap.heapArray = this.heapArray.slice(-n);\n        bottomHeap.init();\n        var startAt = this.heapArray.length - 1 - n;\n        var parentStartAt = Heap.getParentIndexOf(startAt);\n        var indices = [];\n        for (var i = startAt; i > parentStartAt; --i) {\n            indices.push(i);\n        }\n        var arr = this.heapArray;\n        while (indices.length) {\n            var i = indices.shift();\n            if (this.compare(arr[i], bottomHeap.peek()) > 0) {\n                bottomHeap.replace(arr[i]);\n                if (i % 2) {\n                    indices.push(Heap.getParentIndexOf(i));\n                }\n            }\n        }\n        return bottomHeap.toArray();\n    };\n    /**\n     * Move a node to a new index, switching places\n     * @param  {Number} j First node index\n     * @param  {Number} k Another node index\n     */\n    Heap.prototype._moveNode = function (j, k) {\n        var _a;\n        _a = __read([this.heapArray[k], this.heapArray[j]], 2), this.heapArray[j] = _a[0], this.heapArray[k] = _a[1];\n    };\n    /**\n     * Move a node down the tree (to the leaves) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    Heap.prototype._sortNodeDown = function (i) {\n        var length = this.heapArray.length;\n        while (true) {\n            var left = 2 * i + 1;\n            var right = left + 1;\n            var best = i;\n            if (left < length && this.compare(this.heapArray[left], this.heapArray[best]) < 0) {\n                best = left;\n            }\n            if (right < length && this.compare(this.heapArray[right], this.heapArray[best]) < 0) {\n                best = right;\n            }\n            if (best === i)\n                break;\n            this._moveNode(i, best);\n            i = best;\n        }\n    };\n    /**\n     * Move a node up the tree (to the root) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    Heap.prototype._sortNodeUp = function (i) {\n        while (i > 0) {\n            var pi = Heap.getParentIndexOf(i);\n            if (this.compare(this.heapArray[i], this.heapArray[pi]) < 0) {\n                this._moveNode(i, pi);\n                i = pi;\n            }\n            else\n                break;\n        }\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_push = function (n) {\n        // Use an inverted heap\n        var topHeap = new Heap(this._invertedCompare);\n        topHeap.limit = n;\n        var indices = [0];\n        var arr = this.heapArray;\n        while (indices.length) {\n            var i = indices.shift();\n            if (i < arr.length) {\n                if (topHeap.length < n) {\n                    topHeap.push(arr[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i)), false));\n                }\n                else if (this.compare(arr[i], topHeap.peek()) < 0) {\n                    topHeap.replace(arr[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i)), false));\n                }\n            }\n        }\n        return topHeap.toArray();\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: init + push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_fill = function (n) {\n        // Use an inverted heap\n        var heapArray = this.heapArray;\n        var topHeap = new Heap(this._invertedCompare);\n        topHeap.limit = n;\n        topHeap.heapArray = heapArray.slice(0, n);\n        topHeap.init();\n        var branch = Heap.getParentIndexOf(n - 1) + 1;\n        var indices = [];\n        for (var i = branch; i < n; ++i) {\n            indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i).filter(function (l) { return l < heapArray.length; })), false));\n        }\n        if ((n - 1) % 2) {\n            indices.push(n);\n        }\n        while (indices.length) {\n            var i = indices.shift();\n            if (i < heapArray.length) {\n                if (this.compare(heapArray[i], topHeap.peek()) < 0) {\n                    topHeap.replace(heapArray[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i)), false));\n                }\n            }\n        }\n        return topHeap.toArray();\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_heap = function (n) {\n        var topHeap = this.clone();\n        var result = [];\n        for (var i = 0; i < n; ++i) {\n            result.push(topHeap.pop());\n        }\n        return result;\n    };\n    /**\n     * Return index of the top element\n     * @param list\n     */\n    Heap.prototype._topIdxOf = function (list) {\n        if (!list.length) {\n            return -1;\n        }\n        var idx = 0;\n        var top = list[idx];\n        for (var i = 1; i < list.length; ++i) {\n            var comp = this.compare(list[i], top);\n            if (comp < 0) {\n                idx = i;\n                top = list[i];\n            }\n        }\n        return idx;\n    };\n    /**\n     * Return the top element\n     * @param list\n     */\n    Heap.prototype._topOf = function () {\n        var list = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            list[_i] = arguments[_i];\n        }\n        var heap = new Heap(this.compare);\n        heap.init(list);\n        return heap.peek();\n    };\n    return Heap;\n}());\n\nexport { Heap, HeapAsync, Heap as default, toInt };\n","import Heap from \"heap-js\";\n\nclass EventQueue {\n    constructor() {\n        this.minHeap = new Heap((a, b) => a.time - b.time);\n    }\n\n    addEvent(event) {\n        this.minHeap.push(event);\n    }\n\n    getNextEvent() {\n        return this.minHeap.pop();\n    }\n\n    containsEventOfType(type) {\n        let heapEvents = this.minHeap.toArray();\n\n        return heapEvents.some((event) => event.type == type);\n    }\n\n    clear() {\n        this.minHeap = new Heap((a, b) => a.time - b.time);\n    }\n\n    clearEventsForUnit(unit) {\n        this.clearMatching((event) => event.source == unit || event.target == unit);\n    }\n\n    clearEventsOfType(type) {\n        this.clearMatching((event) => event.type == type);\n    }\n\n    clearMatching(fn) {\n        let heapEvents = this.minHeap.toArray();\n\n        for (const event of heapEvents) {\n            if (fn(event)) {\n                this.minHeap.remove(event);\n            }\n        }\n    }\n}\n\nexport default EventQueue;\n","import CombatEvent from \"./combatEvent\";\n\nclass PlayerRespawnEvent extends CombatEvent {\n    static type = \"playerRespawn\";\n\n    constructor(time) {\n        super(PlayerRespawnEvent.type, time);\n    }\n}\n\nexport default PlayerRespawnEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass RegenTickEvent extends CombatEvent {\n    static type = \"regenTick\";\n\n    constructor(time) {\n        super(RegenTickEvent.type, time);\n    }\n}\n\nexport default RegenTickEvent;\n","import CombatEvent from \"./combatEvent\";\n\nclass StunExpirationEvent extends CombatEvent {\n    static type = \"stunExpiration\";\n\n    constructor(time, source) {\n        super(StunExpirationEvent.type, time);\n\n        this.source = source;\n    }\n}\n\nexport default StunExpirationEvent;","class SimResult {\n    constructor() {\n        this.deaths = {};\n        this.experienceGained = {};\n        this.encounters = 0;\n        this.attacks = {};\n        this.consumablesUsed = {};\n        this.hitpointsGained = {};\n        this.manapointsGained = {};\n        this.playerRanOutOfMana = false;\n    }\n\n    addDeath(unit) {\n        if (!this.deaths[unit.hrid]) {\n            this.deaths[unit.hrid] = 0;\n        }\n\n        this.deaths[unit.hrid] += 1;\n    }\n\n    addExperienceGain(unit, type, experience) {\n        if (!unit.isPlayer) {\n            return;\n        }\n\n        if (!this.experienceGained[unit.hrid]) {\n            this.experienceGained[unit.hrid] = {\n                stamina: 0,\n                intelligence: 0,\n                attack: 0,\n                power: 0,\n                defense: 0,\n                ranged: 0,\n                magic: 0,\n            };\n        }\n\n        this.experienceGained[unit.hrid][type] += experience * (1 + unit.combatDetails.combatStats.experienceRate);\n    }\n\n    addEncounterEnd() {\n        this.encounters++;\n    }\n\n    addAttack(source, target, ability, hit) {\n        if (!this.attacks[source.hrid]) {\n            this.attacks[source.hrid] = {};\n        }\n        if (!this.attacks[source.hrid][target.hrid]) {\n            this.attacks[source.hrid][target.hrid] = {};\n        }\n        if (!this.attacks[source.hrid][target.hrid][ability]) {\n            this.attacks[source.hrid][target.hrid][ability] = {};\n        }\n\n        if (!this.attacks[source.hrid][target.hrid][ability][hit]) {\n            this.attacks[source.hrid][target.hrid][ability][hit] = 0;\n        }\n\n        this.attacks[source.hrid][target.hrid][ability][hit] += 1;\n    }\n\n    addConsumableUse(unit, consumable) {\n        if (!this.consumablesUsed[unit.hrid]) {\n            this.consumablesUsed[unit.hrid] = {};\n        }\n        if (!this.consumablesUsed[unit.hrid][consumable.hrid]) {\n            this.consumablesUsed[unit.hrid][consumable.hrid] = 0;\n        }\n\n        this.consumablesUsed[unit.hrid][consumable.hrid] += 1;\n    }\n\n    addHitpointsGained(unit, source, amount) {\n        if (!this.hitpointsGained[unit.hrid]) {\n            this.hitpointsGained[unit.hrid] = {};\n        }\n        if (!this.hitpointsGained[unit.hrid][source]) {\n            this.hitpointsGained[unit.hrid][source] = 0;\n        }\n\n        this.hitpointsGained[unit.hrid][source] += amount;\n    }\n\n    addManapointsGained(unit, source, amount) {\n        if (!this.manapointsGained[unit.hrid]) {\n            this.manapointsGained[unit.hrid] = {};\n        }\n        if (!this.manapointsGained[unit.hrid][source]) {\n            this.manapointsGained[unit.hrid][source] = 0;\n        }\n\n        this.manapointsGained[unit.hrid][source] += amount;\n    }\n}\n\nexport default SimResult;\n","import CombatUtilities from \"./combatUtilities\";\nimport AutoAttackEvent from \"./events/autoAttackEvent\";\nimport BleedTickEvent from \"./events/bleedTickEvent\";\nimport CheckBuffExpirationEvent from \"./events/checkBuffExpirationEvent\";\nimport CombatStartEvent from \"./events/combatStartEvent\";\nimport ConsumableTickEvent from \"./events/consumableTickEvent\";\nimport CooldownReadyEvent from \"./events/cooldownReadyEvent\";\nimport EnemyRespawnEvent from \"./events/enemyRespawnEvent\";\nimport EventQueue from \"./events/eventQueue\";\nimport PlayerRespawnEvent from \"./events/playerRespawnEvent\";\nimport RegenTickEvent from \"./events/regenTickEvent\";\nimport StunExpirationEvent from \"./events/stunExpirationEvent\";\nimport SimResult from \"./simResult\";\n\nconst ONE_SECOND = 1e9;\nconst HOT_TICK_INTERVAL = 5 * ONE_SECOND;\nconst DOT_TICK_INTERVAL = 5 * ONE_SECOND;\nconst REGEN_TICK_INTERVAL = 10 * ONE_SECOND;\nconst ENEMY_RESPAWN_INTERVAL = 3 * ONE_SECOND;\nconst PLAYER_RESPAWN_INTERVAL = 150 * ONE_SECOND;\n\nclass CombatSimulator extends EventTarget {\n    constructor(player, zone) {\n        super();\n        this.players = [player];\n        this.zone = zone;\n\n        this.eventQueue = new EventQueue();\n        this.simResult = new SimResult();\n    }\n\n    async simulate(simulationTimeLimit) {\n        this.reset();\n\n        let ticks = 0;\n\n        let combatStartEvent = new CombatStartEvent(0);\n        this.eventQueue.addEvent(combatStartEvent);\n\n        while (this.simulationTime < simulationTimeLimit) {\n            let nextEvent = this.eventQueue.getNextEvent();\n            await this.processEvent(nextEvent);\n\n            ticks++;\n            if (ticks == 1000) {\n                ticks = 0;\n                let progressEvent = new CustomEvent(\"progress\", {\n                    detail: Math.min(this.simulationTime / simulationTimeLimit, 1),\n                });\n                this.dispatchEvent(progressEvent);\n            }\n        }\n\n        this.simResult.simulatedTime = this.simulationTime;\n\n        return this.simResult;\n    }\n\n    reset() {\n        this.simulationTime = 0;\n        this.eventQueue.clear();\n        this.simResult = new SimResult();\n    }\n\n    async processEvent(event) {\n        this.simulationTime = event.time;\n\n        // console.log(this.simulationTime / 1e9, event.type, event);\n\n        switch (event.type) {\n            case CombatStartEvent.type:\n                this.processCombatStartEvent(event);\n                break;\n            case PlayerRespawnEvent.type:\n                this.processPlayerRespawnEvent(event);\n                break;\n            case EnemyRespawnEvent.type:\n                this.processEnemyRespawnEvent(event);\n                break;\n            case AutoAttackEvent.type:\n                this.processAutoAttackEvent(event);\n                break;\n            case ConsumableTickEvent.type:\n                this.processConsumableTickEvent(event);\n                break;\n            case BleedTickEvent.type:\n                this.processBleedTickEvent(event);\n                break;\n            case CheckBuffExpirationEvent.type:\n                this.processCheckBuffExpirationEvent(event);\n                break;\n            case RegenTickEvent.type:\n                this.processRegenTickEvent(event);\n                break;\n            case StunExpirationEvent.type:\n                this.processStunExpirationEvent(event);\n                break;\n            case CooldownReadyEvent.type:\n                // Only used to check triggers\n                break;\n        }\n\n        this.checkTriggers();\n    }\n\n    processCombatStartEvent(event) {\n        this.players[0].reset(this.simulationTime);\n\n        this.players[0].abilities\n            .filter((ability) => ability != null)\n            .forEach((ability) => {\n                let cooldownReadyEvent = new CooldownReadyEvent(ability.lastUsed + ability.cooldownDuration);\n                this.eventQueue.addEvent(cooldownReadyEvent);\n            });\n\n        let regenTickEvent = new RegenTickEvent(this.simulationTime + REGEN_TICK_INTERVAL);\n        this.eventQueue.addEvent(regenTickEvent);\n\n        this.startNewEncounter();\n    }\n\n    processPlayerRespawnEvent(event) {\n        this.players[0].combatDetails.currentHitpoints = this.players[0].combatDetails.maxHitpoints;\n        this.players[0].combatDetails.currentManapoints = this.players[0].combatDetails.maxManapoints;\n        this.players[0].clearBuffs();\n\n        this.startAutoAttacks();\n    }\n\n    processEnemyRespawnEvent(event) {\n        this.startNewEncounter();\n    }\n\n    startNewEncounter() {\n        this.enemies = this.zone.getRandomEncounter();\n\n        this.enemies.forEach((enemy) => {\n            enemy.reset(this.simulationTime);\n            enemy.abilities\n                .filter((ability) => ability != null)\n                .forEach((ability) => {\n                    let cooldownReadyEvent = new CooldownReadyEvent(ability.lastUsed + ability.cooldownDuration);\n                    this.eventQueue.addEvent(cooldownReadyEvent);\n                });\n            // console.log(enemy.hrid, \"spawned\");\n        });\n\n        this.startAutoAttacks();\n    }\n\n    startAutoAttacks() {\n        let units = [this.players[0]];\n        if (this.enemies) {\n            units.push(...this.enemies);\n        }\n\n        for (const unit of units) {\n            if (unit.combatDetails.currentHitpoints <= 0) {\n                continue;\n            }\n\n            this.addNextAutoAttackEvent(unit);\n        }\n    }\n\n    processAutoAttackEvent(event) {\n        // console.log(\"source:\", event.source.hrid);\n\n        let target;\n        if (event.source.isPlayer) {\n            target = CombatUtilities.getTarget(this.enemies);\n        } else {\n            target = CombatUtilities.getTarget(this.players);\n        }\n\n        if (!target) {\n            return;\n        }\n\n        let attackResult = CombatUtilities.processAttack(event.source, target);\n\n        this.simResult.addAttack(\n            event.source,\n            target,\n            \"autoAttack\",\n            attackResult.didHit ? attackResult.damageDone : \"miss\"\n        );\n\n        if (attackResult.lifeStealHeal > 0) {\n            this.simResult.addHitpointsGained(event.source, \"lifesteal\", attackResult.lifeStealHeal);\n        }\n\n        if (attackResult.reflectDamageDone > 0) {\n            this.simResult.addAttack(target, event.source, \"physicalReflect\", attackResult.reflectDamageDone);\n        }\n\n        for (const [skill, xp] of Object.entries(attackResult.experienceGained.source)) {\n            this.simResult.addExperienceGain(event.source, skill, xp);\n        }\n        for (const [skill, xp] of Object.entries(attackResult.experienceGained.target)) {\n            this.simResult.addExperienceGain(target, skill, xp);\n        }\n\n        if (target.combatDetails.currentHitpoints == 0) {\n            this.eventQueue.clearEventsForUnit(target);\n            this.simResult.addDeath(target);\n            // console.log(target.hrid, \"died\");\n        }\n\n        // Could die from reflect damage\n        if (event.source.combatDetails.currentHitpoints == 0) {\n            this.eventQueue.clearEventsForUnit(event.source);\n            this.simResult.addDeath(event.source);\n        }\n\n        if (!this.checkEncounterEnd()) {\n            this.addNextAutoAttackEvent(event.source);\n        }\n    }\n\n    checkEncounterEnd() {\n        let encounterEnded = false;\n\n        if (this.enemies && !this.enemies.some((enemy) => enemy.combatDetails.currentHitpoints > 0)) {\n            this.eventQueue.clearEventsOfType(AutoAttackEvent.type);\n            let enemyRespawnEvent = new EnemyRespawnEvent(this.simulationTime + ENEMY_RESPAWN_INTERVAL);\n            this.eventQueue.addEvent(enemyRespawnEvent);\n            this.enemies = null;\n\n            this.simResult.addEncounterEnd();\n            // console.log(\"All enemies died\");\n\n            encounterEnded = true;\n        }\n\n        if (\n            !this.players.some((player) => player.combatDetails.currentHitpoints > 0) &&\n            !this.eventQueue.containsEventOfType(PlayerRespawnEvent.type)\n        ) {\n            this.eventQueue.clearEventsOfType(AutoAttackEvent.type);\n            // 120 seconds respawn and 30 seconds traveling to battle\n            let playerRespawnEvent = new PlayerRespawnEvent(this.simulationTime + PLAYER_RESPAWN_INTERVAL);\n            this.eventQueue.addEvent(playerRespawnEvent);\n            // console.log(\"Player died\");\n\n            encounterEnded = true;\n        }\n\n        return encounterEnded;\n    }\n\n    addNextAutoAttackEvent(source) {\n        let autoAttackEvent = new AutoAttackEvent(\n            this.simulationTime + source.combatDetails.combatStats.attackInterval,\n            source\n        );\n        this.eventQueue.addEvent(autoAttackEvent);\n    }\n\n    processConsumableTickEvent(event) {\n        if (event.consumable.hitpointRestore > 0) {\n            let tickValue = CombatUtilities.calculateTickValue(\n                event.consumable.hitpointRestore,\n                event.totalTicks,\n                event.currentTick\n            );\n            let hitpointsAdded = event.source.addHitpoints(tickValue);\n            this.simResult.addHitpointsGained(event.source, event.consumable.hrid, hitpointsAdded);\n            // console.log(\"Added hitpoints:\", hitpointsAdded);\n        }\n\n        if (event.consumable.manapointRestore > 0) {\n            let tickValue = CombatUtilities.calculateTickValue(\n                event.consumable.manapointRestore,\n                event.totalTicks,\n                event.currentTick\n            );\n            let manapointsAdded = event.source.addManapoints(tickValue);\n            this.simResult.addManapointsGained(event.source, event.consumable.hrid, manapointsAdded);\n            // console.log(\"Added manapoints:\", manapointsAdded);\n        }\n\n        if (event.currentTick < event.totalTicks) {\n            let consumableTickEvent = new ConsumableTickEvent(\n                this.simulationTime + HOT_TICK_INTERVAL,\n                event.source,\n                event.consumable,\n                event.totalTicks,\n                event.currentTick + 1\n            );\n            this.eventQueue.addEvent(consumableTickEvent);\n        }\n    }\n\n    processBleedTickEvent(event) {\n        let tickDamage = CombatUtilities.calculateTickValue(event.damage, event.totalTicks, event.currentTick);\n        let damage = Math.min(tickDamage, event.target.combatDetails.currentHitpoints);\n\n        event.target.combatDetails.currentHitpoints -= damage;\n        this.simResult.addAttack(event.sourceRef, event.target, \"bleed\", damage);\n\n        let targetStaminaExperience = CombatUtilities.calculateStaminaExperience(0, damage);\n        this.simResult.addExperienceGain(event.target, \"stamina\", targetStaminaExperience);\n        // console.log(event.target.hrid, \"bleed for\", damage);\n\n        if (event.currentTick < event.totalTicks) {\n            let bleedTickEvent = new BleedTickEvent(\n                this.simulationTime + DOT_TICK_INTERVAL,\n                event.sourceRef,\n                event.target,\n                event.damage,\n                event.totalTicks,\n                event.currentTick + 1\n            );\n            this.eventQueue.addEvent(bleedTickEvent);\n        }\n\n        if (event.target.combatDetails.currentHitpoints == 0) {\n            this.eventQueue.clearEventsForUnit(event.target);\n            this.simResult.addDeath(event.target);\n        }\n\n        this.checkEncounterEnd();\n    }\n\n    processRegenTickEvent(event) {\n        let units = [...this.players];\n        if (this.enemies) {\n            units.push(...this.enemies);\n        }\n\n        for (const unit of units) {\n            if (unit.combatDetails.currentHitpoints <= 0) {\n                continue;\n            }\n\n            let hitpointRegen = Math.floor(unit.combatDetails.maxHitpoints * unit.combatDetails.combatStats.HPRegen);\n            let hitpointsAdded = unit.addHitpoints(hitpointRegen);\n            this.simResult.addHitpointsGained(unit, \"regen\", hitpointsAdded);\n            // console.log(\"Added hitpoints:\", hitpointsAdded);\n\n            let manapointRegen = Math.floor(unit.combatDetails.maxManapoints * unit.combatDetails.combatStats.MPRegen);\n            let manapointsAdded = unit.addManapoints(manapointRegen);\n            this.simResult.addManapointsGained(unit, \"regen\", manapointsAdded);\n            // console.log(\"Added manapoints:\", manapointsAdded);\n        }\n\n        let regenTickEvent = new RegenTickEvent(this.simulationTime + REGEN_TICK_INTERVAL);\n        this.eventQueue.addEvent(regenTickEvent);\n    }\n\n    processCheckBuffExpirationEvent(event) {\n        event.source.removeExpiredBuffs(this.simulationTime);\n    }\n\n    processStunExpirationEvent(event) {\n        event.source.isStunned = false;\n        this.addNextAutoAttackEvent(event.source);\n    }\n\n    checkTriggers() {\n        let triggeredSomething;\n\n        do {\n            triggeredSomething = false;\n\n            this.players\n                .filter((player) => player.combatDetails.currentHitpoints > 0)\n                .forEach((player) => {\n                    if (this.checkTriggersForUnit(player, this.players, this.enemies)) {\n                        triggeredSomething = true;\n                    }\n                });\n\n            if (this.enemies) {\n                this.enemies\n                    .filter((enemy) => enemy.combatDetails.currentHitpoints > 0)\n                    .forEach((enemy) => {\n                        if (this.checkTriggersForUnit(enemy, this.enemies, this.players)) {\n                            triggeredSomething = true;\n                        }\n                    });\n            }\n        } while (triggeredSomething);\n    }\n\n    checkTriggersForUnit(unit, friendlies, enemies) {\n        if (unit.combatDetails.currentHitpoints <= 0) {\n            throw new Error(\"Checking triggers for a dead unit\");\n        }\n\n        let triggeredSomething = false;\n        let target = CombatUtilities.getTarget(enemies);\n\n        for (const food of unit.food) {\n            if (food && food.shouldTrigger(this.simulationTime, unit, target, friendlies, enemies)) {\n                let result = this.tryUseConsumable(unit, food);\n                if (result) {\n                    triggeredSomething = true;\n                }\n            }\n        }\n\n        for (const drink of unit.drinks) {\n            if (drink && drink.shouldTrigger(this.simulationTime, unit, target, friendlies, enemies)) {\n                let result = this.tryUseConsumable(unit, drink);\n                if (result) {\n                    triggeredSomething = true;\n                }\n            }\n        }\n\n        for (const ability of unit.abilities) {\n            if (ability && ability.shouldTrigger(this.simulationTime, unit, target, friendlies, enemies)) {\n                let result = this.tryUseAbility(unit, ability);\n                if (result) {\n                    triggeredSomething = true;\n                }\n            }\n        }\n\n        return triggeredSomething;\n    }\n\n    tryUseConsumable(source, consumable) {\n        // console.log(\"Consuming:\", consumable);\n\n        if (source.combatDetails.currentHitpoints <= 0) {\n            return false;\n        }\n\n        consumable.lastUsed = this.simulationTime;\n        let cooldownReadyEvent = new CooldownReadyEvent(this.simulationTime + consumable.cooldownDuration);\n        this.eventQueue.addEvent(cooldownReadyEvent);\n\n        this.simResult.addConsumableUse(source, consumable);\n\n        if (consumable.recoveryDuration == 0) {\n            if (consumable.hitpointRestore > 0) {\n                let hitpointsAdded = source.addHitpoints(consumable.hitpointRestore);\n                this.simResult.addHitpointsGained(source, consumable.hrid, hitpointsAdded);\n                // console.log(\"Added hitpoints:\", hitpointsAdded);\n            }\n\n            if (consumable.manapointRestore > 0) {\n                let manapointsAdded = source.addManapoints(consumable.manapointRestore);\n                this.simResult.addManapointsGained(source, consumable.hrid, manapointsAdded);\n                // console.log(\"Added manapoints:\", manapointsAdded);\n            }\n        } else {\n            let consumableTickEvent = new ConsumableTickEvent(\n                this.simulationTime + HOT_TICK_INTERVAL,\n                source,\n                consumable,\n                consumable.recoveryDuration / HOT_TICK_INTERVAL,\n                1\n            );\n            this.eventQueue.addEvent(consumableTickEvent);\n        }\n\n        for (const buff of consumable.buffs) {\n            source.addBuff(buff, this.simulationTime);\n            // console.log(\"Added buff:\", buff);\n            let checkBuffExpirationEvent = new CheckBuffExpirationEvent(this.simulationTime + buff.duration, source);\n            this.eventQueue.addEvent(checkBuffExpirationEvent);\n        }\n\n        return true;\n    }\n\n    tryUseAbility(source, ability) {\n        if (source.combatDetails.currentHitpoints <= 0) {\n            return false;\n        }\n\n        if (source.combatDetails.currentManapoints < ability.manaCost) {\n            if (source.isPlayer) {\n                this.simResult.playerRanOutOfMana = true;\n            }\n            return false;\n        }\n\n        // console.log(\"Casting:\", ability);\n\n        source.combatDetails.currentManapoints -= ability.manaCost;\n\n        let sourceIntelligenceExperience = CombatUtilities.calculateIntelligenceExperience(ability.manaCost);\n        this.simResult.addExperienceGain(source, \"intelligence\", sourceIntelligenceExperience);\n\n        ability.lastUsed = this.simulationTime;\n        let cooldownReadyEvent = new CooldownReadyEvent(this.simulationTime + ability.cooldownDuration);\n        this.eventQueue.addEvent(cooldownReadyEvent);\n\n        for (const abilityEffect of ability.abilityEffects) {\n            switch (abilityEffect.effectType) {\n                case \"/ability_effect_types/buff\":\n                    this.processAbilityBuffEffect(source, ability, abilityEffect);\n                    break;\n                case \"/ability_effect_types/damage\":\n                    this.processAbilityDamageEffect(source, ability, abilityEffect);\n                    break;\n                case \"/ability_effect_types/heal\":\n                    this.processAbilityHealEffect(source, ability, abilityEffect);\n                    break;\n                default:\n                    throw new Error(\"Unsupported effect type for ability: \" + ability.hrid);\n            }\n        }\n\n        // Could die from reflect damage\n        if (source.combatDetails.currentHitpoints == 0) {\n            this.eventQueue.clearEventsForUnit(source);\n            this.simResult.addDeath(source);\n        }\n\n        this.checkEncounterEnd();\n\n        return true;\n    }\n\n    processAbilityBuffEffect(source, ability, abilityEffect) {\n        if (abilityEffect.targetType != \"self\") {\n            throw new Error(\"Unsupported target type for buff ability effect: \" + ability.hrid);\n        }\n\n        for (const buff of abilityEffect.buffs) {\n            source.addBuff(buff, this.simulationTime);\n            // console.log(\"Added buff:\", abilityEffect.buff);\n            let checkBuffExpirationEvent = new CheckBuffExpirationEvent(this.simulationTime + buff.duration, source);\n            this.eventQueue.addEvent(checkBuffExpirationEvent);\n        }\n    }\n\n    processAbilityDamageEffect(source, ability, abilityEffect) {\n        let targets;\n        switch (abilityEffect.targetType) {\n            case \"enemy\":\n                targets = source.isPlayer\n                    ? [CombatUtilities.getTarget(this.enemies)]\n                    : [CombatUtilities.getTarget(this.players)];\n                break;\n            case \"all enemies\":\n                targets = source.isPlayer ? this.enemies : this.players;\n                break;\n            default:\n                throw new Error(\"Unsupported target type for damage ability effect: \" + ability.hrid);\n        }\n\n        for (const target of targets.filter((unit) => unit && unit.combatDetails.currentHitpoints > 0)) {\n            let attackResult = CombatUtilities.processAttack(source, target, abilityEffect);\n\n            if (attackResult.didHit && abilityEffect.buffs) {\n                for (const buff of abilityEffect.buffs) {\n                    target.addBuff(buff, this.simulationTime);\n                    let checkBuffExpirationEvent = new CheckBuffExpirationEvent(\n                        this.simulationTime + buff.duration,\n                        target\n                    );\n                    this.eventQueue.addEvent(checkBuffExpirationEvent);\n                }\n            }\n\n            if (abilityEffect.bleedRatio > 0 && attackResult.damageDone > 0) {\n                let bleedTickEvent = new BleedTickEvent(\n                    this.simulationTime + DOT_TICK_INTERVAL,\n                    source,\n                    target,\n                    attackResult.damageDone * abilityEffect.bleedRatio,\n                    abilityEffect.bleedDuration / DOT_TICK_INTERVAL,\n                    1\n                );\n                this.eventQueue.addEvent(bleedTickEvent);\n            }\n\n            if (attackResult.didHit && abilityEffect.stunChance > 0 && Math.random() < abilityEffect.stunChance) {\n                target.isStunned = true;\n                target.stunExpireTime = this.simulationTime + abilityEffect.stunDuration;\n                this.eventQueue.clearMatching((event) => event.type == AutoAttackEvent.type && event.source == target);\n                let stunExpirationEvent = new StunExpirationEvent(target.stunExpireTime, target);\n                this.eventQueue.addEvent(stunExpirationEvent);\n            }\n\n            this.simResult.addAttack(\n                source,\n                target,\n                ability.hrid,\n                attackResult.didHit ? attackResult.damageDone : \"miss\"\n            );\n\n            if (attackResult.reflectDamageDone > 0) {\n                this.simResult.addAttack(target, source, \"physicalReflect\", attackResult.reflectDamageDone);\n            }\n\n            for (const [skill, xp] of Object.entries(attackResult.experienceGained.source)) {\n                this.simResult.addExperienceGain(source, skill, xp);\n            }\n            for (const [skill, xp] of Object.entries(attackResult.experienceGained.target)) {\n                this.simResult.addExperienceGain(target, skill, xp);\n            }\n\n            if (target.combatDetails.currentHitpoints == 0) {\n                this.eventQueue.clearEventsForUnit(target);\n                this.simResult.addDeath(target);\n                // console.log(target.hrid, \"died\");\n            }\n        }\n    }\n\n    processAbilityHealEffect(source, ability, abilityEffect) {\n        if (abilityEffect.targetType != \"self\") {\n            throw new Error(\"Unsupported target type for heal ability effect: \" + ability.hrid);\n        }\n\n        let amountHealed = CombatUtilities.processHeal(source, abilityEffect);\n        let experienceGained = CombatUtilities.calculateMagicExperience(amountHealed);\n\n        this.simResult.addHitpointsGained(source, ability.hrid, amountHealed);\n        this.simResult.addExperienceGain(source, \"magic\", experienceGained);\n    }\n}\n\nexport default CombatSimulator;\n","class Buff {\n    startTime;\n\n    constructor(buff, level = 1) {\n        this.sourceHrid = buff.sourceHrid;\n        this.typeHrid = buff.typeHrid;\n        this.ratioBoost = buff.ratioBoost + (level - 1) * buff.ratioBoostLevelBonus;\n        this.flatBoost = buff.flatBoost + (level - 1) * buff.flatBoostLevelBonus;\n        this.duration = buff.duration;\n    }\n}\n\nexport default Buff;\n","import combatTriggerDependencyDetailMap from \"./data/combatTriggerDependencyDetailMap.json\";\n\nclass Trigger {\n    constructor(dependencyHrid, conditionHrid, comparatorHrid, value = 0) {\n        this.dependencyHrid = dependencyHrid;\n        this.conditionHrid = conditionHrid;\n        this.comparatorHrid = comparatorHrid;\n        this.value = value;\n    }\n\n    static createFromDTO(dto) {\n        let trigger = new Trigger(dto.dependencyHrid, dto.conditionHrid, dto.comparatorHrid, dto.value);\n\n        return trigger;\n    }\n\n    isActive(source, target, friendlies, enemies, currentTime) {\n        if (combatTriggerDependencyDetailMap[this.dependencyHrid].isSingleTarget) {\n            return this.isActiveSingleTarget(source, target, currentTime);\n        } else {\n            return this.isActiveMultiTarget(friendlies, enemies, currentTime);\n        }\n    }\n\n    isActiveSingleTarget(source, target, currentTime) {\n        let dependencyValue;\n        switch (this.dependencyHrid) {\n            case \"/combat_trigger_dependencies/self\":\n                dependencyValue = this.getDependencyValue(source, currentTime);\n                break;\n            case \"/combat_trigger_dependencies/targeted_enemy\":\n                if (!target) {\n                    return false;\n                }\n                dependencyValue = this.getDependencyValue(target, currentTime);\n                break;\n            default:\n                throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n        }\n\n        return this.compareValue(dependencyValue);\n    }\n\n    isActiveMultiTarget(friendlies, enemies, currentTime) {\n        let dependency;\n        switch (this.dependencyHrid) {\n            case \"/combat_trigger_dependencies/all_allies\":\n                dependency = friendlies;\n                break;\n            case \"/combat_trigger_dependencies/all_enemies\":\n                if (!enemies) {\n                    return false;\n                }\n                dependency = enemies;\n                break;\n            default:\n                throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n        }\n\n        let dependencyValue;\n        switch (this.conditionHrid) {\n            case \"/combat_trigger_conditions/number_of_active_units\":\n                dependencyValue = dependency.filter((unit) => unit.combatDetails.currentHitpoints > 0).length;\n                break;\n            default:\n                dependencyValue = dependency\n                    .map((unit) => this.getDependencyValue(unit, currentTime))\n                    .reduce((prev, cur) => prev + cur, 0);\n                break;\n        }\n\n        return this.compareValue(dependencyValue);\n    }\n\n    getDependencyValue(source, currentTime) {\n        switch (this.conditionHrid) {\n            case \"/combat_trigger_conditions/attack_coffee\":\n            case \"/combat_trigger_conditions/berserk\":\n            case \"/combat_trigger_conditions/defense_coffee\":\n            case \"/combat_trigger_conditions/elemental_affinity_fire_amplify\":\n            case \"/combat_trigger_conditions/elemental_affinity_nature_amplify\":\n            case \"/combat_trigger_conditions/elemental_affinity_water_amplify\":\n            case \"/combat_trigger_conditions/frenzy\":\n            case \"/combat_trigger_conditions/intelligence_coffee_max_mp\":\n            case \"/combat_trigger_conditions/intelligence_coffee_mp_regen\":\n            case \"/combat_trigger_conditions/lucky_coffee\":\n            case \"/combat_trigger_conditions/magic_coffee\":\n            case \"/combat_trigger_conditions/power_coffee\":\n            case \"/combat_trigger_conditions/precision\":\n            case \"/combat_trigger_conditions/ranged_coffee\":\n            case \"/combat_trigger_conditions/spike_shell\":\n            case \"/combat_trigger_conditions/stamina_coffee_hp_regen\":\n            case \"/combat_trigger_conditions/stamina_coffee_max_hp\":\n            case \"/combat_trigger_conditions/swiftness_coffee\":\n            case \"/combat_trigger_conditions/toughness_armor\":\n            case \"/combat_trigger_conditions/toughness_fire_resistance\":\n            case \"/combat_trigger_conditions/toughness_nature_resistance\":\n            case \"/combat_trigger_conditions/toughness_water_resistance\":\n            case \"/combat_trigger_conditions/vampirism\":\n            case \"/combat_trigger_conditions/wisdom_coffee\":\n                let buffHrid = \"/buff_sources\";\n                buffHrid += this.conditionHrid.slice(this.conditionHrid.lastIndexOf(\"/\"));\n                return source.combatBuffs[buffHrid];\n            case \"/combat_trigger_conditions/current_hp\":\n                return source.combatDetails.currentHitpoints;\n            case \"/combat_trigger_conditions/current_mp\":\n                return source.combatDetails.currentManapoints;\n            case \"/combat_trigger_conditions/missing_hp\":\n                return source.combatDetails.maxHitpoints - source.combatDetails.currentHitpoints;\n            case \"/combat_trigger_conditions/missing_mp\":\n                return source.combatDetails.maxManapoints - source.combatDetails.currentManapoints;\n            case \"/combat_trigger_conditions/stun_status\":\n                // Replicate the game's behaviour of \"stun status active\" triggers activating\n                // immediately after the stun has worn off\n                return source.isStunned || source.stunExpireTime == currentTime;\n            default:\n                throw new Error(\"Unknown conditionHrid in trigger: \" + this.conditionHrid);\n        }\n    }\n\n    compareValue(dependencyValue) {\n        switch (this.comparatorHrid) {\n            case \"/combat_trigger_comparators/greater_than_equal\":\n                return dependencyValue >= this.value;\n            case \"/combat_trigger_comparators/less_than_equal\":\n                return dependencyValue <= this.value;\n            case \"/combat_trigger_comparators/is_active\":\n                return !!dependencyValue;\n            case \"/combat_trigger_comparators/is_inactive\":\n                return !dependencyValue;\n            default:\n                throw new Error(\"Unknown comparatorHrid in trigger: \" + this.comparatorHrid);\n        }\n    }\n}\n\nexport default Trigger;\n","import Buff from \"./buff\";\nimport abilityDetailMap from \"./data/abilityDetailMap.json\";\nimport Trigger from \"./trigger\";\n\nclass Ability {\n    constructor(hrid, level, triggers = null) {\n        this.hrid = hrid;\n        this.level = level;\n\n        let gameAbility = abilityDetailMap[hrid];\n        if (!gameAbility) {\n            throw new Error(\"No ability found for hrid: \" + this.hrid);\n        }\n\n        this.manaCost = gameAbility.manaCost;\n        this.cooldownDuration = gameAbility.cooldownDuration;\n\n        this.abilityEffects = [];\n\n        for (const effect of gameAbility.abilityEffects) {\n            let abilityEffect = {\n                targetType: effect.targetType,\n                effectType: effect.effectType,\n                combatStyleHrid: effect.combatStyleHrid,\n                damageType: effect.damageType,\n                damageFlat: effect.baseDamageFlat + (this.level - 1) * effect.baseDamageFlatLevelBonus,\n                damageRatio: effect.baseDamageRatio + (this.level - 1) * effect.baseDamageRatioLevelBonus,\n                bleedRatio: effect.bleedRatio,\n                bleedDuration: effect.bleedDuration,\n                stunChance: effect.stunChance,\n                stunDuration: effect.stunDuration,\n                buffs: null,\n            };\n            if (effect.buffs) {\n                abilityEffect.buffs = [];\n                for (const buff of effect.buffs) {\n                    abilityEffect.buffs.push(new Buff(buff, this.level));\n                }\n            }\n            this.abilityEffects.push(abilityEffect);\n        }\n\n        if (triggers) {\n            this.triggers = triggers;\n        } else {\n            this.triggers = [];\n            for (const defaultTrigger of gameAbility.defaultCombatTriggers) {\n                let trigger = new Trigger(\n                    defaultTrigger.dependencyHrid,\n                    defaultTrigger.conditionHrid,\n                    defaultTrigger.comparatorHrid,\n                    defaultTrigger.value\n                );\n                this.triggers.push(trigger);\n            }\n        }\n\n        this.lastUsed = Number.MIN_SAFE_INTEGER;\n    }\n\n    static createFromDTO(dto) {\n        let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n        let ability = new Ability(dto.hrid, dto.level, triggers);\n\n        return ability;\n    }\n\n    shouldTrigger(currentTime, source, target, friendlies, enemies) {\n        if (source.isStunned) {\n            return false;\n        }\n\n        if (this.lastUsed + this.cooldownDuration > currentTime) {\n            return false;\n        }\n\n        if (this.triggers.length == 0) {\n            return true;\n        }\n\n        let shouldTrigger = true;\n        for (const trigger of this.triggers) {\n            if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n                shouldTrigger = false;\n            }\n        }\n\n        return shouldTrigger;\n    }\n}\n\nexport default Ability;\n","class CombatUnit {\n    isPlayer;\n    isStunned = false;\n    stunExpireTime = null;\n\n    // Base levels which don't change after initialization\n    staminaLevel = 1;\n    intelligenceLevel = 1;\n    attackLevel = 1;\n    powerLevel = 1;\n    defenseLevel = 1;\n    rangedLevel = 1;\n    magicLevel = 1;\n\n    abilities = [null, null, null, null];\n    food = [null, null, null];\n    drinks = [null, null, null];\n\n    // Calculated combat stats including temporary buffs\n    combatDetails = {\n        staminaLevel: 1,\n        intelligenceLevel: 1,\n        attackLevel: 1,\n        powerLevel: 1,\n        defenseLevel: 1,\n        rangedLevel: 1,\n        magicLevel: 1,\n        maxHitpoints: 110,\n        currentHitpoints: 110,\n        maxManapoints: 110,\n        currentManapoints: 110,\n        stabAccuracyRating: 11,\n        slashAccuracyRating: 11,\n        smashAccuracyRating: 11,\n        rangedAccuracyRating: 11,\n        stabMaxDamage: 11,\n        slashMaxDamage: 11,\n        smashMaxDamage: 11,\n        rangedMaxDamage: 11,\n        magicMaxDamage: 11,\n        stabEvasionRating: 11,\n        slashEvasionRating: 11,\n        smashEvasionRating: 11,\n        rangedEvasionRating: 11,\n        totalArmor: 0.2,\n        totalWaterResistance: 0.4,\n        totalNatureResistance: 0.4,\n        totalFireResistance: 0.4,\n        combatStats: {\n            combatStyleHrid: \"/combat_styles/smash\",\n            damageType: \"/damage_types/physical\",\n            attackInterval: 3000000000,\n            stabAccuracy: 0,\n            slashAccuracy: 0,\n            smashAccuracy: 0,\n            rangedAccuracy: 0,\n            stabDamage: 0,\n            slashDamage: 0,\n            smashDamage: 0,\n            rangedDamage: 0,\n            magicDamage: 0,\n            physicalAmplify: 0,\n            waterAmplify: 0,\n            natureAmplify: 0,\n            fireAmplify: 0,\n            healingAmplify: 0,\n            stabEvasion: 0,\n            slashEvasion: 0,\n            smashEvasion: 0,\n            rangedEvasion: 0,\n            armor: 0,\n            waterResistance: 0,\n            natureResistance: 0,\n            fireResistance: 0,\n            maxHitpoints: 0,\n            maxManapoints: 0,\n            lifeSteal: 0,\n            HPRegen: 0.01,\n            MPRegen: 0.01,\n            physicalReflectPower: 0,\n            dropRate: 0,\n            dropQuantity: 0,\n            experienceRate: 0,\n            foodSlots: 1,\n            drinkSlots: 1,\n        },\n    };\n    combatBuffs = {};\n\n    constructor() {}\n\n    updateCombatDetails() {\n        this.combatDetails.combatStats.HPRegen = 0.01;\n        this.combatDetails.combatStats.MPRegen = 0.01;\n\n        [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((stat) => {\n            this.combatDetails[stat + \"Level\"] = this[stat + \"Level\"];\n            let boosts = this.getBuffBoosts(\"/buff_types/\" + stat + \"_level\");\n            boosts.forEach((buff) => {\n                this.combatDetails[stat + \"Level\"] += Math.floor(this[stat + \"Level\"] * buff.ratioBoost);\n                this.combatDetails[stat + \"Level\"] += buff.flatBoost;\n            });\n        });\n\n        this.combatDetails.maxHitpoints =\n            10 * (10 + this.combatDetails.staminaLevel) + this.combatDetails.combatStats.maxHitpoints;\n        this.combatDetails.maxManapoints =\n            10 * (10 + this.combatDetails.intelligenceLevel) + this.combatDetails.combatStats.maxManapoints;\n\n        let accuracyRatioBoost = this.getBuffBoost(\"/buff_types/accuracy\").ratioBoost;\n        let damageRatioBoost = this.getBuffBoost(\"/buff_types/damage\").ratioBoost;\n\n        [\"stab\", \"slash\", \"smash\"].forEach((style) => {\n            this.combatDetails[style + \"AccuracyRating\"] =\n                (10 + this.combatDetails.attackLevel) *\n                (1 + this.combatDetails.combatStats[style + \"Accuracy\"]) *\n                (1 + accuracyRatioBoost);\n            this.combatDetails[style + \"MaxDamage\"] =\n                (10 + this.combatDetails.powerLevel) *\n                (1 + this.combatDetails.combatStats[style + \"Damage\"]) *\n                (1 + damageRatioBoost);\n            this.combatDetails[style + \"EvasionRating\"] =\n                (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats[style + \"Evasion\"]);\n        });\n\n        this.combatDetails.rangedAccuracyRating =\n            (10 + this.combatDetails.rangedLevel) *\n            (1 + this.combatDetails.combatStats.rangedAccuracy) *\n            (1 + accuracyRatioBoost);\n        this.combatDetails.rangedMaxDamage =\n            (10 + this.combatDetails.rangedLevel) *\n            (1 + this.combatDetails.combatStats.rangedDamage) *\n            (1 + damageRatioBoost);\n        this.combatDetails.rangedEvasionRating =\n            (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats.rangedEvasion);\n\n        this.combatDetails.magicMaxDamage =\n            (10 + this.combatDetails.magicLevel) *\n            (1 + this.combatDetails.combatStats.magicDamage) *\n            (1 + damageRatioBoost);\n\n        this.combatDetails.combatStats.physicalAmplify += this.getBuffBoost(\"/buff_types/physical_amplify\").flatBoost;\n        this.combatDetails.combatStats.waterAmplify += this.getBuffBoost(\"/buff_types/water_amplify\").flatBoost;\n        this.combatDetails.combatStats.natureAmplify += this.getBuffBoost(\"/buff_types/nature_amplify\").flatBoost;\n        this.combatDetails.combatStats.fireAmplify += this.getBuffBoost(\"/buff_types/fire_amplify\").flatBoost;\n\n        let attackIntervalBoosts = this.getBuffBoosts(\"/buff_types/attack_speed\");\n        let attackIntervalRatioBoost = attackIntervalBoosts\n            .map((boost) => boost.ratioBoost)\n            .reduce((prev, cur) => prev + cur, 0);\n        this.combatDetails.combatStats.attackInterval =\n            this.combatDetails.combatStats.attackInterval * (1 / (1 + attackIntervalRatioBoost));\n\n        let baseArmor = 0.2 * this.combatDetails.defenseLevel + this.combatDetails.combatStats.armor;\n        this.combatDetails.totalArmor = baseArmor;\n        let armorBoosts = this.getBuffBoosts(\"/buff_types/armor\");\n        for (const boost of armorBoosts) {\n            this.combatDetails.totalArmor += boost.flatBoost;\n            this.combatDetails.totalArmor += baseArmor * boost.ratioBoost;\n        }\n\n        let baseWaterResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.waterResistance;\n        this.combatDetails.totalWaterResistance = baseWaterResistance;\n        let waterResistanceBoosts = this.getBuffBoosts(\"/buff_types/water_resistance\");\n        for (const boost of waterResistanceBoosts) {\n            this.combatDetails.totalWaterResistance += boost.flatBoost;\n            this.combatDetails.totalWaterResistance += baseWaterResistance * boost.ratioBoost;\n        }\n\n        let baseNatureResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.natureResistance;\n        this.combatDetails.totalNatureResistance = baseNatureResistance;\n        let natureResistanceBoosts = this.getBuffBoosts(\"/buff_types/nature_resistance\");\n        for (const boost of natureResistanceBoosts) {\n            this.combatDetails.totalNatureResistance += boost.flatBoost;\n            this.combatDetails.totalNatureResistance += baseNatureResistance * boost.ratioBoost;\n        }\n\n        let baseFireResistance =\n            0.1 * this.combatDetails.defenseLevel +\n            0.3 * this.combatDetails.magicLevel +\n            this.combatDetails.combatStats.fireResistance;\n        this.combatDetails.totalFireResistance = baseFireResistance;\n        let fireResistanceBoosts = this.getBuffBoosts(\"/buff_types/fire_resistance\");\n        for (const boost of fireResistanceBoosts) {\n            this.combatDetails.totalFireResistance += boost.flatBoost;\n            this.combatDetails.totalFireResistance += baseFireResistance * boost.ratioBoost;\n        }\n\n        this.combatDetails.combatStats.lifeSteal += this.getBuffBoost(\"/buff_types/life_steal\").flatBoost;\n        this.combatDetails.combatStats.HPRegen += this.getBuffBoost(\"/buff_types/hp_regen\").flatBoost;\n        this.combatDetails.combatStats.MPRegen += this.getBuffBoost(\"/buff_types/mp_regen\").flatBoost;\n        this.combatDetails.combatStats.physicalReflectPower += this.getBuffBoost(\n            \"/buff_types/physical_reflect_power\"\n        ).flatBoost;\n        this.combatDetails.combatStats.dropRate += this.getBuffBoost(\"/buff_types/combat_drop_rate\").ratioBoost;\n        this.combatDetails.combatStats.experienceRate += this.getBuffBoost(\"/buff_types/wisdom\").flatBoost;\n    }\n\n    addBuff(buff, currentTime) {\n        buff.startTime = currentTime;\n        this.combatBuffs[buff.sourceHrid] = buff;\n\n        this.updateCombatDetails();\n    }\n\n    removeExpiredBuffs(currentTime) {\n        let expiredBuffs = Object.values(this.combatBuffs).filter(\n            (buff) => buff.startTime + buff.duration <= currentTime\n        );\n        expiredBuffs.forEach((buff) => {\n            delete this.combatBuffs[buff.sourceHrid];\n        });\n\n        this.updateCombatDetails();\n    }\n\n    clearBuffs() {\n        this.combatBuffs = {};\n        this.updateCombatDetails();\n    }\n\n    getBuffBoosts(type) {\n        let boosts = [];\n        Object.values(this.combatBuffs)\n            .filter((buff) => buff.typeHrid == type)\n            .forEach((buff) => {\n                boosts.push({ ratioBoost: buff.ratioBoost, flatBoost: buff.flatBoost });\n            });\n\n        return boosts;\n    }\n\n    getBuffBoost(type) {\n        let boosts = this.getBuffBoosts(type);\n\n        if (boosts.length > 1) {\n            throw new Error(\"Using getBuffBoost with multiple buffs active: \" + type);\n        }\n\n        let boost = {\n            ratioBoost: boosts[0]?.ratioBoost ?? 0,\n            flatBoost: boosts[0]?.flatBoost ?? 0,\n        };\n\n        return boost;\n    }\n\n    reset(currentTime = 0) {\n        this.isStunned = false;\n        this.stunExpireTime = null;\n\n        this.clearBuffs();\n        this.updateCombatDetails();\n        this.resetCooldowns(currentTime);\n\n        this.combatDetails.currentHitpoints = this.combatDetails.maxHitpoints;\n        this.combatDetails.currentManapoints = this.combatDetails.maxManapoints;\n    }\n\n    resetCooldowns(currentTime = 0) {\n        this.food.filter((food) => food != null).forEach((food) => (food.lastUsed = Number.MIN_SAFE_INTEGER));\n        this.drinks.filter((drink) => drink != null).forEach((drink) => (drink.lastUsed = Number.MIN_SAFE_INTEGER));\n\n        this.abilities\n            .filter((ability) => ability != null)\n            .forEach((ability) => {\n                if (this.isPlayer) {\n                    ability.lastUsed = Number.MIN_SAFE_INTEGER;\n                } else {\n                    ability.lastUsed = currentTime - Math.floor(Math.random() * ability.cooldownDuration);\n                }\n            });\n    }\n\n    addHitpoints(hitpoints) {\n        let hitpointsAdded = 0;\n\n        if (this.combatDetails.currentHitpoints >= this.combatDetails.maxHitpoints) {\n            return hitpointsAdded;\n        }\n\n        let newHitpoints = Math.min(this.combatDetails.currentHitpoints + hitpoints, this.combatDetails.maxHitpoints);\n        hitpointsAdded = newHitpoints - this.combatDetails.currentHitpoints;\n        this.combatDetails.currentHitpoints = newHitpoints;\n\n        return hitpointsAdded;\n    }\n\n    addManapoints(manapoints) {\n        let manapointsAdded = 0;\n\n        if (this.combatDetails.currentManapoints >= this.combatDetails.maxManapoints) {\n            return manapointsAdded;\n        }\n\n        let newManapoints = Math.min(\n            this.combatDetails.currentManapoints + manapoints,\n            this.combatDetails.maxManapoints\n        );\n        manapointsAdded = newManapoints - this.combatDetails.currentManapoints;\n        this.combatDetails.currentManapoints = newManapoints;\n\n        return manapointsAdded;\n    }\n}\n\nexport default CombatUnit;\n","import Buff from \"./buff\";\nimport itemDetailMap from \"./data/itemDetailMap.json\";\nimport Trigger from \"./trigger\";\n\nclass Consumable {\n    constructor(hrid, triggers = null) {\n        this.hrid = hrid;\n\n        let gameConsumable = itemDetailMap[this.hrid];\n        if (!gameConsumable) {\n            throw new Error(\"No consumable found for hrid: \" + this.hrid);\n        }\n\n        this.cooldownDuration = gameConsumable.consumableDetail.cooldownDuration;\n        this.hitpointRestore = gameConsumable.consumableDetail.hitpointRestore;\n        this.manapointRestore = gameConsumable.consumableDetail.manapointRestore;\n        this.recoveryDuration = gameConsumable.consumableDetail.recoveryDuration;\n\n        this.buffs = [];\n        if (gameConsumable.consumableDetail.buffs) {\n            for (const consumableBuff of gameConsumable.consumableDetail.buffs) {\n                let buff = new Buff(consumableBuff);\n                this.buffs.push(buff);\n            }\n        }\n\n        if (triggers) {\n            this.triggers = triggers;\n        } else {\n            this.triggers = [];\n            for (const defaultTrigger of gameConsumable.consumableDetail.defaultCombatTriggers) {\n                let trigger = new Trigger(\n                    defaultTrigger.dependencyHrid,\n                    defaultTrigger.conditionHrid,\n                    defaultTrigger.comparatorHrid,\n                    defaultTrigger.value\n                );\n                this.triggers.push(trigger);\n            }\n        }\n\n        this.lastUsed = Number.MIN_SAFE_INTEGER;\n    }\n\n    static createFromDTO(dto) {\n        let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n        let consumable = new Consumable(dto.hrid, triggers);\n\n        return consumable;\n    }\n\n    shouldTrigger(currentTime, source, target, friendlies, enemies) {\n        if (source.isStunned) {\n            return false;\n        }\n\n        if (this.lastUsed + this.cooldownDuration > currentTime) {\n            return false;\n        }\n\n        if (this.triggers.length == 0) {\n            return true;\n        }\n\n        let shouldTrigger = true;\n        for (const trigger of this.triggers) {\n            if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n                shouldTrigger = false;\n            }\n        }\n\n        return shouldTrigger;\n    }\n}\n\nexport default Consumable;\n","import itemDetailMap from \"./data/itemDetailMap.json\";\nimport enhancementLevelTotalMultiplierTable from \"./data/enhancementLevelTotalMultiplierTable.json\";\n\nclass Equipment {\n    constructor(hrid, enhancementLevel) {\n        this.hrid = hrid;\n        let gameItem = itemDetailMap[this.hrid];\n        if (!gameItem) {\n            throw new Error(\"No equipment found for hrid: \" + this.hrid);\n        }\n        this.gameItem = gameItem;\n        this.enhancementLevel = enhancementLevel;\n    }\n\n    static createFromDTO(dto) {\n        let equipment = new Equipment(dto.hrid, dto.enhancementLevel);\n\n        return equipment;\n    }\n\n    getCombatStat(combatStat) {\n        let multiplier = enhancementLevelTotalMultiplierTable[this.enhancementLevel];\n\n        let stat =\n            this.gameItem.equipmentDetail.combatStats[combatStat] +\n            multiplier * this.gameItem.equipmentDetail.combatEnhancementBonuses[combatStat];\n\n        return stat;\n    }\n\n    getCombatStyle() {\n        return this.gameItem.equipmentDetail.combatStats.combatStyleHrids[0];\n    }\n\n    getDamageType() {\n        return this.gameItem.equipmentDetail.combatStats.damageType;\n    }\n}\n\nexport default Equipment;\n","import Ability from \"./ability\";\nimport CombatUnit from \"./combatUnit\";\nimport Consumable from \"./consumable\";\nimport Equipment from \"./equipment\";\n\nclass Player extends CombatUnit {\n    equipment = {\n        \"/equipment_types/head\": null,\n        \"/equipment_types/body\": null,\n        \"/equipment_types/legs\": null,\n        \"/equipment_types/feet\": null,\n        \"/equipment_types/hands\": null,\n        \"/equipment_types/main_hand\": null,\n        \"/equipment_types/two_hand\": null,\n        \"/equipment_types/off_hand\": null,\n        \"/equipment_types/pouch\": null,\n    };\n\n    constructor() {\n        super();\n\n        this.isPlayer = true;\n        this.hrid = \"player\";\n    }\n\n    static createFromDTO(dto) {\n        let player = new Player();\n\n        player.staminaLevel = dto.staminaLevel;\n        player.intelligenceLevel = dto.intelligenceLevel;\n        player.attackLevel = dto.attackLevel;\n        player.powerLevel = dto.powerLevel;\n        player.defenseLevel = dto.defenseLevel;\n        player.rangedLevel = dto.rangedLevel;\n        player.magicLevel = dto.magicLevel;\n\n        for (const [key, value] of Object.entries(dto.equipment)) {\n            player.equipment[key] = value ? Equipment.createFromDTO(value) : null;\n        }\n\n        player.food = dto.food.map((food) => (food ? Consumable.createFromDTO(food) : null));\n        player.drinks = dto.drinks.map((drink) => (drink ? Consumable.createFromDTO(drink) : null));\n        player.abilities = dto.abilities.map((ability) => (ability ? Ability.createFromDTO(ability) : null));\n\n        return player;\n    }\n\n    updateCombatDetails() {\n        if (this.equipment[\"/equipment_types/main_hand\"]) {\n            this.combatDetails.combatStats.combatStyleHrid =\n                this.equipment[\"/equipment_types/main_hand\"].getCombatStyle();\n            this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/main_hand\"].getDamageType();\n            this.combatDetails.combatStats.attackInterval =\n                this.equipment[\"/equipment_types/main_hand\"].getCombatStat(\"attackInterval\");\n        } else if (this.equipment[\"/equipment_types/two_hand\"]) {\n            this.combatDetails.combatStats.combatStyleHrid =\n                this.equipment[\"/equipment_types/two_hand\"].getCombatStyle();\n            this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/two_hand\"].getDamageType();\n            this.combatDetails.combatStats.attackInterval =\n                this.equipment[\"/equipment_types/two_hand\"].getCombatStat(\"attackInterval\");\n        } else {\n            this.combatDetails.combatStats.combatStyleHrid = \"/combat_styles/smash\";\n            this.combatDetails.combatStats.damageType = \"/damage_types/physical\";\n            this.combatDetails.combatStats.attackInterval = 3000000000;\n        }\n\n        [\n            \"stabAccuracy\",\n            \"slashAccuracy\",\n            \"smashAccuracy\",\n            \"rangedAccuracy\",\n            \"stabDamage\",\n            \"slashDamage\",\n            \"smashDamage\",\n            \"rangedDamage\",\n            \"magicDamage\",\n            \"physicalAmplify\",\n            \"waterAmplify\",\n            \"natureAmplify\",\n            \"fireAmplify\",\n            \"healingAmplify\",\n            \"stabEvasion\",\n            \"slashEvasion\",\n            \"smashEvasion\",\n            \"rangedEvasion\",\n            \"armor\",\n            \"waterResistance\",\n            \"natureResistance\",\n            \"fireResistance\",\n            \"maxHitpoints\",\n            \"maxManapoints\",\n            \"lifeSteal\",\n            \"physicalReflectPower\",\n            \"dropRate\",\n            \"dropQuantity\",\n            \"experienceRate\",\n        ].forEach((stat) => {\n            this.combatDetails.combatStats[stat] = Object.values(this.equipment)\n                .filter((equipment) => equipment != null)\n                .map((equipment) => equipment.getCombatStat(stat))\n                .reduce((prev, cur) => prev + cur, 0);\n        });\n\n        if (this.equipment[\"/equipment_types/pouch\"]) {\n            this.combatDetails.combatStats.foodSlots =\n                1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"foodSlots\");\n            this.combatDetails.combatStats.drinkSlots =\n                1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"drinkSlots\");\n        } else {\n            this.combatDetails.combatStats.foodSlots = 1;\n            this.combatDetails.combatStats.drinkSlots = 1;\n        }\n\n        super.updateCombatDetails();\n    }\n}\n\nexport default Player;\n","import Ability from \"./ability\";\nimport CombatUnit from \"./combatUnit\";\nimport combatMonsterDetailMap from \"./data/combatMonsterDetailMap.json\";\n\nclass Monster extends CombatUnit {\n    constructor(hrid) {\n        super();\n\n        this.isPlayer = false;\n        this.hrid = hrid;\n\n        let gameMonster = combatMonsterDetailMap[this.hrid];\n        if (!gameMonster) {\n            throw new Error(\"No monster found for hrid: \" + this.hrid);\n        }\n\n        for (let i = 0; i < gameMonster.abilities.length; i++) {\n            this.abilities[i] = new Ability(gameMonster.abilities[i].abilityHrid, gameMonster.abilities[i].level);\n        }\n    }\n\n    updateCombatDetails() {\n        let gameMonster = combatMonsterDetailMap[this.hrid];\n\n        this.staminaLevel = gameMonster.combatDetails.staminaLevel;\n        this.intelligenceLevel = gameMonster.combatDetails.intelligenceLevel;\n        this.attackLevel = gameMonster.combatDetails.attackLevel;\n        this.powerLevel = gameMonster.combatDetails.powerLevel;\n        this.defenseLevel = gameMonster.combatDetails.defenseLevel;\n        this.rangedLevel = gameMonster.combatDetails.rangedLevel;\n        this.magicLevel = gameMonster.combatDetails.magicLevel;\n\n        this.combatDetails.combatStats.combatStyleHrid = gameMonster.combatDetails.combatStats.combatStyleHrids[0];\n\n        for (const [key, value] of Object.entries(gameMonster.combatDetails.combatStats)) {\n            this.combatDetails.combatStats[key] = value;\n        }\n\n        super.updateCombatDetails();\n    }\n}\n\nexport default Monster;\n","import actionDetailMap from \"./data/actionDetailMap.json\";\nimport Monster from \"./monster\";\n\nclass Zone {\n    constructor(hrid) {\n        this.hrid = hrid;\n\n        let gameZone = actionDetailMap[this.hrid];\n        this.monsterSpawnInfo = gameZone.monsterSpawnInfo;\n    }\n\n    getRandomEncounter() {\n        let totalWeight = this.monsterSpawnInfo.spawns.reduce((prev, cur) => prev + cur.rate, 0);\n\n        let encounterHrids = [];\n        let totalStrength = 0;\n\n        outer: for (let i = 0; i < this.monsterSpawnInfo.maxSpawnCount; i++) {\n            let randomWeight = totalWeight * Math.random();\n            let cumulativeWeight = 0;\n\n            for (const spawn of this.monsterSpawnInfo.spawns) {\n                cumulativeWeight += spawn.rate;\n                if (randomWeight <= cumulativeWeight) {\n                    totalStrength += spawn.strength;\n\n                    if (totalStrength <= this.monsterSpawnInfo.maxTotalStrength) {\n                        encounterHrids.push(spawn.combatMonsterHrid);\n                    } else {\n                        break outer;\n                    }\n                    break;\n                }\n            }\n        }\n\n        return encounterHrids.map((hrid) => new Monster(hrid));\n    }\n}\n\nexport default Zone;\n","import CombatSimulator from \"./combatsimulator/combatSimulator\";\nimport Player from \"./combatsimulator/player\";\nimport Zone from \"./combatsimulator/zone\";\n\nonmessage = async function (event) {\n    switch (event.data.type) {\n        case \"start_simulation\":\n            let player = Player.createFromDTO(event.data.player);\n            let zone = new Zone(event.data.zoneHrid);\n            let simulationTimeLimit = event.data.simulationTimeLimit;\n\n            let combatSimulator = new CombatSimulator(player, zone);\n            combatSimulator.addEventListener(\"progress\", (event) => {\n                this.postMessage({ type: \"simulation_progress\", progress: event.detail });\n            });\n\n            try {\n                let simResult = await combatSimulator.simulate(simulationTimeLimit);\n                this.postMessage({ type: \"simulation_result\", simResult: simResult });\n            } catch (e) {\n                this.postMessage({ type: \"simulation_error\", error: e });\n            }\n            break;\n    }\n};\n"],"names":["CombatUtilities","enemies","enemy","min","max","temp","minCeil","maxFloor","minTail","maxTail","balancedWeight","balancedAverage","average","extraTailWeight","extraTailChance","source","target","abilityEffect","combatStyle","damageType","sourceAccuracyRating","sourceAutoAttackMaxDamage","targetEvasionRating","sourceDamageMultiplier","sourceResistance","targetResistance","targetReflectPower","hitChance","critChance","baseDamageFlat","baseDamageRatio","sourceMinDamage","sourceMaxDamage","damageRoll","maxPremitigatedDamage","damageDone","mitigatedReflectDamage","reflectDamageDone","didHit","targetDamageTakenRatio","mitigatedDamage","sourceDamageTakenRatio","reflectDamage","lifeStealHeal","experienceGained","damagePrevented","healingAmplify","magicMaxDamage","baseHealFlat","baseHealRatio","minHeal","maxHeal","heal","totalValue","totalTicks","currentTick","currentSum","previousSum","damageTaken","manaUsed","damage","CombatEvent","type","time","_AutoAttackEvent","__publicField","AutoAttackEvent","_BleedTickEvent","sourceRef","BleedTickEvent","_CheckBuffExpirationEvent","CheckBuffExpirationEvent","_CombatStartEvent","CombatStartEvent","_ConsumableTickEvent","consumable","ConsumableTickEvent","_CooldownReadyEvent","CooldownReadyEvent","_EnemyRespawnEvent","EnemyRespawnEvent","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","__generator$1","body","_","t","f","y","g","verb","n","v","op","__read$1","o","m","i","r","ar","error","__spreadArray$1","to","from","pack","l","__values","s","HeapAsync","compare","_this","a","b","res","idx","whichChildren","_a","heap","deep","pi","repeat","str","times","out","node","lines","maxLines","maxLength","nodeText","line","el","half","arr","heapArr","item","iterable","element","elements","_b","j","children","children_1","children_1_1","ch","e_1_1","e_1","cloned","o_1","fn","e_2_1","e_2","_c","_d","array","_l","last","_i","queue","c","peek","rm","bottomHeap","startAt","parentStartAt","indices","k","length","left","right","best","topHeap","heapArray","branch","list","top","comp","__generator","__read","__spreadArray","Heap","callbackFn","indexes","currentIndex","currentElement","foundIndexes","EventQueue","event","unit","heapEvents","_PlayerRespawnEvent","PlayerRespawnEvent","_RegenTickEvent","RegenTickEvent","_StunExpirationEvent","StunExpirationEvent","SimResult","experience","ability","hit","amount","ONE_SECOND","HOT_TICK_INTERVAL","DOT_TICK_INTERVAL","REGEN_TICK_INTERVAL","ENEMY_RESPAWN_INTERVAL","PLAYER_RESPAWN_INTERVAL","CombatSimulator","player","zone","simulationTimeLimit","ticks","combatStartEvent","nextEvent","progressEvent","cooldownReadyEvent","regenTickEvent","units","attackResult","skill","xp","encounterEnded","enemyRespawnEvent","playerRespawnEvent","autoAttackEvent","tickValue","hitpointsAdded","manapointsAdded","consumableTickEvent","tickDamage","targetStaminaExperience","bleedTickEvent","hitpointRegen","manapointRegen","triggeredSomething","friendlies","food","drink","buff","checkBuffExpirationEvent","sourceIntelligenceExperience","targets","stunExpirationEvent","amountHealed","Buff","level","Trigger","dependencyHrid","conditionHrid","comparatorHrid","dto","currentTime","combatTriggerDependencyDetailMap","dependencyValue","dependency","prev","cur","buffHrid","Ability","hrid","triggers","gameAbility","abilityDetailMap","effect","defaultTrigger","trigger","shouldTrigger","CombatUnit","stat","accuracyRatioBoost","damageRatioBoost","style","attackIntervalRatioBoost","boost","baseArmor","armorBoosts","baseWaterResistance","waterResistanceBoosts","baseNatureResistance","natureResistanceBoosts","baseFireResistance","fireResistanceBoosts","boosts","hitpoints","newHitpoints","manapoints","newManapoints","Consumable","gameConsumable","itemDetailMap","consumableBuff","Equipment","enhancementLevel","gameItem","combatStat","multiplier","enhancementLevelTotalMultiplierTable","Player","key","equipment","Monster","gameMonster","combatMonsterDetailMap","Zone","gameZone","actionDetailMap","totalWeight","encounterHrids","totalStrength","outer","randomWeight","cumulativeWeight","spawn","combatSimulator","simResult"],"mappings":"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","x_google_ignoreList":[9]}