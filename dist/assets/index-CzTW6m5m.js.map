{"version":3,"file":"index-CzTW6m5m.js","sources":["../../src/Equipment.js","../../src/Buff.js","../../src/Trigger.js","../../src/Ability.js","../../src/unit/CombatUnit.ts","../../src/Consumable.js","../../src/Player.ts","../../src/data/combatTriggerConditionDetailMap.ts","../../src/main.ts"],"sourcesContent":["import itemDetailMap from \"$/data/itemDetailMap.json\";\nimport enhancementLevelTotalMultiplierTable from \"$/data/enhancementLevelTotalMultiplierTable.json\";\n\nclass Equipment {\n  constructor(hrid, enhancementLevel) {\n    this.hrid = hrid;\n    let gameItem = itemDetailMap[this.hrid];\n    if (!gameItem) {\n      throw new Error(\"No equipment found for hrid: \" + this.hrid);\n    }\n    this.gameItem = gameItem;\n    this.enhancementLevel = enhancementLevel;\n  }\n\n  static createFromDTO(dto) {\n    let equipment = new Equipment(dto.hrid, dto.enhancementLevel);\n\n    return equipment;\n  }\n\n  getCombatStat(combatStat) {\n    let multiplier = enhancementLevelTotalMultiplierTable[this.enhancementLevel];\n\n    let stat =\n      this.gameItem.equipmentDetail.combatStats[combatStat] +\n      multiplier * this.gameItem.equipmentDetail.combatEnhancementBonuses[combatStat];\n\n    return stat;\n  }\n\n  getCombatStyle() {\n    return this.gameItem.equipmentDetail.combatStats.combatStyleHrid;\n  }\n\n  getDamageType() {\n    return this.gameItem.equipmentDetail.combatStats.damageType;\n  }\n}\n\nexport default Equipment;\n","class Buff {\n  startTime;\n\n  constructor(buff, level = 1) {\n    this.sourceHrid = buff.sourceHrid;\n    this.typeHrid = buff.typeHrid;\n    this.ratioBoost = buff.ratioBoost + (level - 1) * buff.ratioBoostLevelBonus;\n    this.flatBoost = buff.flatBoost + (level - 1) * buff.flatBoostLevelBonus;\n    this.duration = buff.duration;\n  }\n}\n\nexport default Buff;\n","import combatTriggerDependencyDetailMap from \"$/data/combatTriggerDependencyDetailMap\";\n\nclass Trigger {\n  constructor(dependencyHrid, conditionHrid, comparatorHrid, value = 0) {\n    this.dependencyHrid = dependencyHrid;\n    this.conditionHrid = conditionHrid;\n    this.comparatorHrid = comparatorHrid;\n    this.value = value;\n  }\n\n  static createFromDTO(dto) {\n    let trigger = new Trigger(dto.dependencyHrid, dto.conditionHrid, dto.comparatorHrid, dto.value);\n\n    return trigger;\n  }\n\n  isActive(source, target, friendlies, enemies, currentTime) {\n    if (combatTriggerDependencyDetailMap[this.dependencyHrid].isSingleTarget) {\n      return this.isActiveSingleTarget(source, target, currentTime);\n    } else {\n      return this.isActiveMultiTarget(friendlies, enemies, currentTime);\n    }\n  }\n\n  isActiveSingleTarget(source, target, currentTime) {\n    let dependencyValue;\n    switch (this.dependencyHrid) {\n      case \"/combat_trigger_dependencies/self\":\n        dependencyValue = this.getDependencyValue(source, currentTime);\n        break;\n      case \"/combat_trigger_dependencies/targeted_enemy\":\n        if (!target) {\n          return false;\n        }\n        dependencyValue = this.getDependencyValue(target, currentTime);\n        break;\n      default:\n        throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n    }\n\n    return this.compareValue(dependencyValue);\n  }\n\n  isActiveMultiTarget(friendlies, enemies, currentTime) {\n    let dependency;\n    switch (this.dependencyHrid) {\n      case \"/combat_trigger_dependencies/all_allies\":\n        dependency = friendlies;\n        break;\n      case \"/combat_trigger_dependencies/all_enemies\":\n        if (!enemies) {\n          return false;\n        }\n        dependency = enemies;\n        break;\n      default:\n        throw new Error(\"Unknown dependencyHrid in trigger: \" + this.dependencyHrid);\n    }\n\n    let dependencyValue;\n    switch (this.conditionHrid) {\n      case \"/combat_trigger_conditions/number_of_active_units\":\n        dependencyValue = dependency.filter((unit) => unit.combatDetails.currentHitpoints > 0).length;\n        break;\n      default:\n        dependencyValue = dependency\n          .map((unit) => this.getDependencyValue(unit, currentTime))\n          .reduce((prev, cur) => prev + cur, 0);\n        break;\n    }\n\n    return this.compareValue(dependencyValue);\n  }\n\n  getDependencyValue(source, currentTime) {\n    switch (this.conditionHrid) {\n      case \"/combat_trigger_conditions/attack_coffee\":\n      case \"/combat_trigger_conditions/berserk\":\n      case \"/combat_trigger_conditions/defense_coffee\":\n      case \"/combat_trigger_conditions/elemental_affinity_fire_amplify\":\n      case \"/combat_trigger_conditions/elemental_affinity_nature_amplify\":\n      case \"/combat_trigger_conditions/elemental_affinity_water_amplify\":\n      case \"/combat_trigger_conditions/frenzy\":\n      case \"/combat_trigger_conditions/intelligence_coffee_max_mp\":\n      case \"/combat_trigger_conditions/intelligence_coffee_mp_regen\":\n      case \"/combat_trigger_conditions/lucky_coffee\":\n      case \"/combat_trigger_conditions/magic_coffee\":\n      case \"/combat_trigger_conditions/power_coffee\":\n      case \"/combat_trigger_conditions/precision\":\n      case \"/combat_trigger_conditions/ranged_coffee\":\n      case \"/combat_trigger_conditions/spike_shell\":\n      case \"/combat_trigger_conditions/stamina_coffee_hp_regen\":\n      case \"/combat_trigger_conditions/stamina_coffee_max_hp\":\n      case \"/combat_trigger_conditions/swiftness_coffee\":\n      case \"/combat_trigger_conditions/toughness_armor\":\n      case \"/combat_trigger_conditions/toughness_fire_resistance\":\n      case \"/combat_trigger_conditions/toughness_nature_resistance\":\n      case \"/combat_trigger_conditions/toughness_water_resistance\":\n      case \"/combat_trigger_conditions/vampirism\":\n      case \"/combat_trigger_conditions/wisdom_coffee\":\n        let buffHrid = \"/buff_sources\";\n        buffHrid += this.conditionHrid.slice(this.conditionHrid.lastIndexOf(\"/\"));\n        return source.combatBuffs[buffHrid];\n      case \"/combat_trigger_conditions/current_hp\":\n        return source.combatDetails.currentHitpoints;\n      case \"/combat_trigger_conditions/current_mp\":\n        return source.combatDetails.currentManapoints;\n      case \"/combat_trigger_conditions/missing_hp\":\n        return source.combatDetails.maxHitpoints - source.combatDetails.currentHitpoints;\n      case \"/combat_trigger_conditions/missing_mp\":\n        return source.combatDetails.maxManapoints - source.combatDetails.currentManapoints;\n      case \"/combat_trigger_conditions/stun_status\":\n        // Replicate the game's behaviour of \"stun status active\" triggers activating\n        // immediately after the stun has worn off\n        return source.isStunned || source.stunExpireTime == currentTime;\n      default:\n        throw new Error(\"Unknown conditionHrid in trigger: \" + this.conditionHrid);\n    }\n  }\n\n  compareValue(dependencyValue) {\n    switch (this.comparatorHrid) {\n      case \"/combat_trigger_comparators/greater_than_equal\":\n        return dependencyValue >= this.value;\n      case \"/combat_trigger_comparators/less_than_equal\":\n        return dependencyValue <= this.value;\n      case \"/combat_trigger_comparators/is_active\":\n        return !!dependencyValue;\n      case \"/combat_trigger_comparators/is_inactive\":\n        return !dependencyValue;\n      default:\n        throw new Error(\"Unknown comparatorHrid in trigger: \" + this.comparatorHrid);\n    }\n  }\n}\n\nexport default Trigger;\n","import Buff from \"$/Buff\";\nimport abilityDetailMap from \"$/data/abilityDetailMap.json\";\nimport Trigger from \"$/Trigger\";\n\nclass Ability {\n  constructor(hrid, level, triggers = null) {\n    this.hrid = hrid;\n    this.level = level;\n\n    let gameAbility = abilityDetailMap[hrid];\n    if (!gameAbility) {\n      throw new Error(\"No ability found for hrid: \" + this.hrid);\n    }\n\n    this.manaCost = gameAbility.manaCost;\n    this.cooldownDuration = gameAbility.cooldownDuration;\n\n    this.abilityEffects = [];\n\n    for (const effect of gameAbility.abilityEffects) {\n      let abilityEffect = {\n        targetType: effect.targetType,\n        effectType: effect.effectType,\n        combatStyleHrid: effect.combatStyleHrid,\n        damageType: effect.damageType,\n        damageFlat: effect.baseDamageFlat + (this.level - 1) * effect.baseDamageFlatLevelBonus,\n        damageRatio: effect.baseDamageRatio + (this.level - 1) * effect.baseDamageRatioLevelBonus,\n        bleedRatio: effect.bleedRatio,\n        bleedDuration: effect.bleedDuration,\n        stunChance: effect.stunChance,\n        stunDuration: effect.stunDuration,\n        buffs: null,\n      };\n      if (effect.buffs) {\n        abilityEffect.buffs = [];\n        for (const buff of effect.buffs) {\n          abilityEffect.buffs.push(new Buff(buff, this.level));\n        }\n      }\n      this.abilityEffects.push(abilityEffect);\n    }\n\n    if (triggers) {\n      this.triggers = triggers;\n    } else {\n      this.triggers = [];\n      for (const defaultTrigger of gameAbility.defaultCombatTriggers) {\n        let trigger = new Trigger(\n          defaultTrigger.dependencyHrid,\n          defaultTrigger.conditionHrid,\n          defaultTrigger.comparatorHrid,\n          defaultTrigger.value\n        );\n        this.triggers.push(trigger);\n      }\n    }\n\n    this.lastUsed = Number.MIN_SAFE_INTEGER;\n  }\n\n  static createFromDTO(dto) {\n    let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n    let ability = new Ability(dto.hrid, dto.level, triggers);\n\n    return ability;\n  }\n\n  shouldTrigger(currentTime, source, target, friendlies, enemies) {\n    if (source.isStunned) {\n      return false;\n    }\n\n    if (this.lastUsed + this.cooldownDuration > currentTime) {\n      return false;\n    }\n\n    if (this.triggers.length == 0) {\n      return true;\n    }\n\n    let shouldTrigger = true;\n    for (const trigger of this.triggers) {\n      if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n        shouldTrigger = false;\n      }\n    }\n\n    return shouldTrigger;\n  }\n}\n\nexport default Ability;\n","import Buff from \"$/Buff\";\n\nclass CombatUnit {\n  isPlayer = false;\n  isStunned = false;\n  stunExpireTime = null;\n\n  // Base levels which don't change after initialization\n  staminaLevel = 1;\n  intelligenceLevel = 1;\n  attackLevel = 1;\n  powerLevel = 1;\n  defenseLevel = 1;\n  rangedLevel = 1;\n  magicLevel = 1;\n\n  abilities = [null, null, null, null];\n  food = [null, null, null];\n  drinks = [null, null, null];\n\n  // Calculated combat stats including temporary buffs\n  combatDetails: ICombatDetails = {\n    staminaLevel: 1,\n    intelligenceLevel: 1,\n    attackLevel: 1,\n    powerLevel: 1,\n    defenseLevel: 1,\n    rangedLevel: 1,\n    magicLevel: 1,\n    maxHitpoints: 110,\n    currentHitpoints: 110,\n    maxManapoints: 110,\n    currentManapoints: 110,\n    stabAccuracyRating: 11,\n    slashAccuracyRating: 11,\n    smashAccuracyRating: 11,\n    rangedAccuracyRating: 11,\n    stabMaxDamage: 11,\n    slashMaxDamage: 11,\n    smashMaxDamage: 11,\n    rangedMaxDamage: 11,\n    magicMaxDamage: 11,\n    stabEvasionRating: 11,\n    slashEvasionRating: 11,\n    smashEvasionRating: 11,\n    rangedEvasionRating: 11,\n    totalArmor: 0.2,\n    totalWaterResistance: 0.4,\n    totalNatureResistance: 0.4,\n    totalFireResistance: 0.4,\n    combatStats: {\n      combatStyleHrid: \"/combat_styles/smash\",\n      damageType: \"/damage_types/physical\",\n      attackInterval: 3000000000,\n      stabAccuracy: 0,\n      slashAccuracy: 0,\n      smashAccuracy: 0,\n      rangedAccuracy: 0,\n      stabDamage: 0,\n      slashDamage: 0,\n      smashDamage: 0,\n      rangedDamage: 0,\n      magicDamage: 0,\n      physicalAmplify: 0,\n      waterAmplify: 0,\n      natureAmplify: 0,\n      fireAmplify: 0,\n      healingAmplify: 0,\n      stabEvasion: 0,\n      slashEvasion: 0,\n      smashEvasion: 0,\n      rangedEvasion: 0,\n      armor: 0,\n      waterResistance: 0,\n      natureResistance: 0,\n      fireResistance: 0,\n      maxHitpoints: 0,\n      maxManapoints: 0,\n      lifeSteal: 0,\n      HPRegen: 0.01,\n      MPRegen: 0.01,\n      physicalReflectPower: 0,\n      dropRate: 0,\n      dropQuantity: 0,\n      experienceRate: 0,\n      foodSlots: 1,\n      drinkSlots: 1,\n    },\n  };\n\n  combatBuffs: Record<string, Buff> = {};\n\n  updateCombatDetails() {\n    this.combatDetails.combatStats.HPRegen = 0.01;\n    this.combatDetails.combatStats.MPRegen = 0.01;\n\n    [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((stat) => {\n      this.combatDetails[stat + \"Level\"] = this[stat + \"Level\"];\n      let boosts = this.getBuffBoosts(\"/buff_types/\" + stat + \"_level\");\n      boosts.forEach((buff) => {\n        this.combatDetails[stat + \"Level\"] += Math.floor(this[stat + \"Level\"] * buff.ratioBoost);\n        this.combatDetails[stat + \"Level\"] += buff.flatBoost;\n      });\n    });\n\n    this.combatDetails.maxHitpoints =\n      10 * (10 + this.combatDetails.staminaLevel) + this.combatDetails.combatStats.maxHitpoints;\n    this.combatDetails.maxManapoints =\n      10 * (10 + this.combatDetails.intelligenceLevel) + this.combatDetails.combatStats.maxManapoints;\n\n    let accuracyRatioBoost = this.getBuffBoost(\"/buff_types/accuracy\").ratioBoost;\n    let damageRatioBoost = this.getBuffBoost(\"/buff_types/damage\").ratioBoost;\n\n    [\"stab\", \"slash\", \"smash\"].forEach((style) => {\n      this.combatDetails[style + \"AccuracyRating\"] =\n        (10 + this.combatDetails.attackLevel) *\n        (1 + this.combatDetails.combatStats[style + \"Accuracy\"]) *\n        (1 + accuracyRatioBoost);\n      this.combatDetails[style + \"MaxDamage\"] =\n        (10 + this.combatDetails.powerLevel) *\n        (1 + this.combatDetails.combatStats[style + \"Damage\"]) *\n        (1 + damageRatioBoost);\n      this.combatDetails[style + \"EvasionRating\"] =\n        (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats[style + \"Evasion\"]);\n    });\n\n    this.combatDetails.rangedAccuracyRating =\n      (10 + this.combatDetails.rangedLevel) *\n      (1 + this.combatDetails.combatStats.rangedAccuracy) *\n      (1 + accuracyRatioBoost);\n    this.combatDetails.rangedMaxDamage =\n      (10 + this.combatDetails.rangedLevel) *\n      (1 + this.combatDetails.combatStats.rangedDamage) *\n      (1 + damageRatioBoost);\n    this.combatDetails.rangedEvasionRating =\n      (10 + this.combatDetails.defenseLevel) * (1 + this.combatDetails.combatStats.rangedEvasion);\n\n    this.combatDetails.magicMaxDamage =\n      (10 + this.combatDetails.magicLevel) * (1 + this.combatDetails.combatStats.magicDamage) * (1 + damageRatioBoost);\n\n    this.combatDetails.combatStats.physicalAmplify += this.getBuffBoost(\"/buff_types/physical_amplify\").flatBoost;\n    this.combatDetails.combatStats.waterAmplify += this.getBuffBoost(\"/buff_types/water_amplify\").flatBoost;\n    this.combatDetails.combatStats.natureAmplify += this.getBuffBoost(\"/buff_types/nature_amplify\").flatBoost;\n    this.combatDetails.combatStats.fireAmplify += this.getBuffBoost(\"/buff_types/fire_amplify\").flatBoost;\n\n    let attackIntervalBoosts = this.getBuffBoosts(\"/buff_types/attack_speed\");\n    let attackIntervalRatioBoost = attackIntervalBoosts\n      .map((boost) => boost.ratioBoost)\n      .reduce((prev, cur) => prev + cur, 0);\n    this.combatDetails.combatStats.attackInterval =\n      this.combatDetails.combatStats.attackInterval * (1 / (1 + attackIntervalRatioBoost));\n\n    let baseArmor = 0.2 * this.combatDetails.defenseLevel + this.combatDetails.combatStats.armor;\n    this.combatDetails.totalArmor = baseArmor;\n    let armorBoosts = this.getBuffBoosts(\"/buff_types/armor\");\n    for (const boost of armorBoosts) {\n      this.combatDetails.totalArmor += boost.flatBoost;\n      this.combatDetails.totalArmor += baseArmor * boost.ratioBoost;\n    }\n\n    let baseWaterResistance =\n      0.1 * this.combatDetails.defenseLevel +\n      0.3 * this.combatDetails.magicLevel +\n      this.combatDetails.combatStats.waterResistance;\n    this.combatDetails.totalWaterResistance = baseWaterResistance;\n    let waterResistanceBoosts = this.getBuffBoosts(\"/buff_types/water_resistance\");\n    for (const boost of waterResistanceBoosts) {\n      this.combatDetails.totalWaterResistance += boost.flatBoost;\n      this.combatDetails.totalWaterResistance += baseWaterResistance * boost.ratioBoost;\n    }\n\n    let baseNatureResistance =\n      0.1 * this.combatDetails.defenseLevel +\n      0.3 * this.combatDetails.magicLevel +\n      this.combatDetails.combatStats.natureResistance;\n    this.combatDetails.totalNatureResistance = baseNatureResistance;\n    let natureResistanceBoosts = this.getBuffBoosts(\"/buff_types/nature_resistance\");\n    for (const boost of natureResistanceBoosts) {\n      this.combatDetails.totalNatureResistance += boost.flatBoost;\n      this.combatDetails.totalNatureResistance += baseNatureResistance * boost.ratioBoost;\n    }\n\n    let baseFireResistance =\n      0.1 * this.combatDetails.defenseLevel +\n      0.3 * this.combatDetails.magicLevel +\n      this.combatDetails.combatStats.fireResistance;\n    this.combatDetails.totalFireResistance = baseFireResistance;\n    let fireResistanceBoosts = this.getBuffBoosts(\"/buff_types/fire_resistance\");\n    for (const boost of fireResistanceBoosts) {\n      this.combatDetails.totalFireResistance += boost.flatBoost;\n      this.combatDetails.totalFireResistance += baseFireResistance * boost.ratioBoost;\n    }\n\n    this.combatDetails.combatStats.lifeSteal += this.getBuffBoost(\"/buff_types/life_steal\").flatBoost;\n    this.combatDetails.combatStats.HPRegen += this.getBuffBoost(\"/buff_types/hp_regen\").flatBoost;\n    this.combatDetails.combatStats.MPRegen += this.getBuffBoost(\"/buff_types/mp_regen\").flatBoost;\n    this.combatDetails.combatStats.physicalReflectPower += this.getBuffBoost(\n      \"/buff_types/physical_reflect_power\",\n    ).flatBoost;\n    this.combatDetails.combatStats.dropRate += this.getBuffBoost(\"/buff_types/combat_drop_rate\").ratioBoost;\n    this.combatDetails.combatStats.experienceRate += this.getBuffBoost(\"/buff_types/wisdom\").flatBoost;\n  }\n\n  addBuff(buff, currentTime) {\n    buff.startTime = currentTime;\n    this.combatBuffs[buff.sourceHrid] = buff;\n\n    this.updateCombatDetails();\n  }\n\n  removeExpiredBuffs(currentTime: number) {\n    let expiredBuffs = Object.values(this.combatBuffs).filter((buff) => buff.startTime + buff.duration <= currentTime);\n    expiredBuffs.forEach((buff) => {\n      delete this.combatBuffs[buff.sourceHrid];\n    });\n\n    this.updateCombatDetails();\n  }\n\n  clearBuffs() {\n    this.combatBuffs = {};\n    this.updateCombatDetails();\n  }\n\n  getBuffBoosts(type) {\n    let boosts = [];\n    Object.values(this.combatBuffs)\n      .filter((buff) => buff.typeHrid == type)\n      .forEach((buff) => {\n        boosts.push({ ratioBoost: buff.ratioBoost, flatBoost: buff.flatBoost });\n      });\n\n    return boosts;\n  }\n\n  getBuffBoost(type) {\n    let boosts = this.getBuffBoosts(type);\n\n    if (boosts.length > 1) {\n      throw new Error(\"Using getBuffBoost with multiple buffs active: \" + type);\n    }\n\n    let boost = {\n      ratioBoost: boosts[0]?.ratioBoost ?? 0,\n      flatBoost: boosts[0]?.flatBoost ?? 0,\n    };\n\n    return boost;\n  }\n\n  reset(currentTime = 0) {\n    this.isStunned = false;\n    this.stunExpireTime = null;\n\n    this.clearBuffs();\n    this.updateCombatDetails();\n    this.resetCooldowns(currentTime);\n\n    this.combatDetails.currentHitpoints = this.combatDetails.maxHitpoints;\n    this.combatDetails.currentManapoints = this.combatDetails.maxManapoints;\n  }\n\n  resetCooldowns(currentTime = 0) {\n    this.food.filter((food) => food != null).forEach((food) => (food.lastUsed = Number.MIN_SAFE_INTEGER));\n    this.drinks.filter((drink) => drink != null).forEach((drink) => (drink.lastUsed = Number.MIN_SAFE_INTEGER));\n\n    this.abilities\n      .filter((ability) => ability != null)\n      .forEach((ability) => {\n        if (this.isPlayer) {\n          ability.lastUsed = Number.MIN_SAFE_INTEGER;\n        } else {\n          ability.lastUsed = currentTime - Math.floor(Math.random() * ability.cooldownDuration);\n        }\n      });\n  }\n\n  addHitpoints(hitpoints) {\n    let hitpointsAdded = 0;\n\n    if (this.combatDetails.currentHitpoints >= this.combatDetails.maxHitpoints) {\n      return hitpointsAdded;\n    }\n\n    let newHitpoints = Math.min(this.combatDetails.currentHitpoints + hitpoints, this.combatDetails.maxHitpoints);\n    hitpointsAdded = newHitpoints - this.combatDetails.currentHitpoints;\n    this.combatDetails.currentHitpoints = newHitpoints;\n\n    return hitpointsAdded;\n  }\n\n  addManapoints(manapoints) {\n    let manapointsAdded = 0;\n\n    if (this.combatDetails.currentManapoints >= this.combatDetails.maxManapoints) {\n      return manapointsAdded;\n    }\n\n    let newManapoints = Math.min(this.combatDetails.currentManapoints + manapoints, this.combatDetails.maxManapoints);\n    manapointsAdded = newManapoints - this.combatDetails.currentManapoints;\n    this.combatDetails.currentManapoints = newManapoints;\n\n    return manapointsAdded;\n  }\n}\n\nexport default CombatUnit;\n","import Buff from \"$/Buff\";\nimport itemDetailMap from \"$/data/itemDetailMap.json\";\nimport Trigger from \"$/Trigger\";\n\nclass Consumable {\n  constructor(hrid, triggers = null) {\n    this.hrid = hrid;\n\n    let gameConsumable = itemDetailMap[this.hrid];\n    if (!gameConsumable) {\n      throw new Error(\"No consumable found for hrid: \" + this.hrid);\n    }\n\n    this.cooldownDuration = gameConsumable.consumableDetail.cooldownDuration;\n    this.hitpointRestore = gameConsumable.consumableDetail.hitpointRestore;\n    this.manapointRestore = gameConsumable.consumableDetail.manapointRestore;\n    this.recoveryDuration = gameConsumable.consumableDetail.recoveryDuration;\n\n    this.buffs = [];\n    if (gameConsumable.consumableDetail.buffs) {\n      for (const consumableBuff of gameConsumable.consumableDetail.buffs) {\n        let buff = new Buff(consumableBuff);\n        this.buffs.push(buff);\n      }\n    }\n\n    if (triggers) {\n      this.triggers = triggers;\n    } else {\n      this.triggers = [];\n      for (const defaultTrigger of gameConsumable.consumableDetail.defaultCombatTriggers) {\n        let trigger = new Trigger(\n          defaultTrigger.dependencyHrid,\n          defaultTrigger.conditionHrid,\n          defaultTrigger.comparatorHrid,\n          defaultTrigger.value\n        );\n        this.triggers.push(trigger);\n      }\n    }\n\n    this.lastUsed = Number.MIN_SAFE_INTEGER;\n  }\n\n  static createFromDTO(dto) {\n    let triggers = dto.triggers.map((trigger) => Trigger.createFromDTO(trigger));\n    let consumable = new Consumable(dto.hrid, triggers);\n\n    return consumable;\n  }\n\n  shouldTrigger(currentTime, source, target, friendlies, enemies) {\n    if (source.isStunned) {\n      return false;\n    }\n\n    if (this.lastUsed + this.cooldownDuration > currentTime) {\n      return false;\n    }\n\n    if (this.triggers.length == 0) {\n      return true;\n    }\n\n    let shouldTrigger = true;\n    for (const trigger of this.triggers) {\n      if (!trigger.isActive(source, target, friendlies, enemies, currentTime)) {\n        shouldTrigger = false;\n      }\n    }\n\n    return shouldTrigger;\n  }\n}\n\nexport default Consumable;\n","import Ability from \"$/Ability\";\nimport CombatUnit from \"$/unit/CombatUnit\";\nimport Consumable from \"$/Consumable\";\nimport Equipment from \"$/Equipment\";\n\nclass Player extends CombatUnit {\n  hrid: string;\n\n  equipment = {\n    \"/equipment_types/head\": null,\n    \"/equipment_types/body\": null,\n    \"/equipment_types/legs\": null,\n    \"/equipment_types/feet\": null,\n    \"/equipment_types/hands\": null,\n    \"/equipment_types/main_hand\": null,\n    \"/equipment_types/two_hand\": null,\n    \"/equipment_types/off_hand\": null,\n    \"/equipment_types/pouch\": null,\n  };\n\n  constructor() {\n    super();\n\n    this.isPlayer = true;\n    this.hrid = \"player\";\n  }\n\n  static createFromDTO(dto) {\n    let player = new Player();\n\n    player.staminaLevel = dto.staminaLevel;\n    player.intelligenceLevel = dto.intelligenceLevel;\n    player.attackLevel = dto.attackLevel;\n    player.powerLevel = dto.powerLevel;\n    player.defenseLevel = dto.defenseLevel;\n    player.rangedLevel = dto.rangedLevel;\n    player.magicLevel = dto.magicLevel;\n\n    for (const [key, value] of Object.entries(dto.equipment)) {\n      player.equipment[key] = value ? Equipment.createFromDTO(value) : null;\n    }\n\n    player.food = dto.food.map((food) => (food ? Consumable.createFromDTO(food) : null));\n    player.drinks = dto.drinks.map((drink) => (drink ? Consumable.createFromDTO(drink) : null));\n    player.abilities = dto.abilities.map((ability) => (ability ? Ability.createFromDTO(ability) : null));\n\n    return player;\n  }\n\n  updateCombatDetails() {\n    if (this.equipment[\"/equipment_types/main_hand\"]) {\n      this.combatDetails.combatStats.combatStyleHrid = this.equipment[\"/equipment_types/main_hand\"].getCombatStyle();\n      this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/main_hand\"].getDamageType();\n      this.combatDetails.combatStats.attackInterval =\n        this.equipment[\"/equipment_types/main_hand\"].getCombatStat(\"attackInterval\");\n    } else if (this.equipment[\"/equipment_types/two_hand\"]) {\n      this.combatDetails.combatStats.combatStyleHrid = this.equipment[\"/equipment_types/two_hand\"].getCombatStyle();\n      this.combatDetails.combatStats.damageType = this.equipment[\"/equipment_types/two_hand\"].getDamageType();\n      this.combatDetails.combatStats.attackInterval =\n        this.equipment[\"/equipment_types/two_hand\"].getCombatStat(\"attackInterval\");\n    } else {\n      this.combatDetails.combatStats.combatStyleHrid = \"/combat_styles/smash\";\n      this.combatDetails.combatStats.damageType = \"/damage_types/physical\";\n      this.combatDetails.combatStats.attackInterval = 3000000000;\n    }\n\n    [\n      \"stabAccuracy\",\n      \"slashAccuracy\",\n      \"smashAccuracy\",\n      \"rangedAccuracy\",\n      \"stabDamage\",\n      \"slashDamage\",\n      \"smashDamage\",\n      \"rangedDamage\",\n      \"magicDamage\",\n      \"physicalAmplify\",\n      \"waterAmplify\",\n      \"natureAmplify\",\n      \"fireAmplify\",\n      \"healingAmplify\",\n      \"stabEvasion\",\n      \"slashEvasion\",\n      \"smashEvasion\",\n      \"rangedEvasion\",\n      \"armor\",\n      \"waterResistance\",\n      \"natureResistance\",\n      \"fireResistance\",\n      \"maxHitpoints\",\n      \"maxManapoints\",\n      \"lifeSteal\",\n      \"physicalReflectPower\",\n      \"dropRate\",\n      \"dropQuantity\",\n      \"experienceRate\",\n    ].forEach((stat) => {\n      this.combatDetails.combatStats[stat] = Object.values(this.equipment)\n        .filter((equipment) => equipment != null)\n        .map((equipment) => equipment.getCombatStat(stat))\n        .reduce((prev, cur) => prev + cur, 0);\n    });\n\n    if (this.equipment[\"/equipment_types/pouch\"]) {\n      this.combatDetails.combatStats.foodSlots =\n        1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"foodSlots\");\n      this.combatDetails.combatStats.drinkSlots =\n        1 + this.equipment[\"/equipment_types/pouch\"].getCombatStat(\"drinkSlots\");\n    } else {\n      this.combatDetails.combatStats.foodSlots = 1;\n      this.combatDetails.combatStats.drinkSlots = 1;\n    }\n\n    super.updateCombatDetails();\n  }\n}\n\nexport default Player;\n","const combatTriggerConditionDetailMap: ICombatTriggerConditionDetailMap = {\n  \"/combat_trigger_conditions/attack_coffee\": {\n    hrid: \"/combat_trigger_conditions/attack_coffee\",\n    name: \"Attack Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 11,\n  },\n  \"/combat_trigger_conditions/berserk\": {\n    hrid: \"/combat_trigger_conditions/berserk\",\n    name: \"Berserk\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 23,\n  },\n  \"/combat_trigger_conditions/current_hp\": {\n    hrid: \"/combat_trigger_conditions/current_hp\",\n    name: \"Current Hp\",\n    isSingleTarget: true,\n    isMultiTarget: true,\n    allowedComparatorHrids: [\n      \"/combat_trigger_comparators/greater_than_equal\",\n      \"/combat_trigger_comparators/less_than_equal\",\n    ],\n    sortIndex: 3,\n  },\n  \"/combat_trigger_conditions/current_mp\": {\n    hrid: \"/combat_trigger_conditions/current_mp\",\n    name: \"Current Mp\",\n    isSingleTarget: true,\n    isMultiTarget: true,\n    allowedComparatorHrids: [\n      \"/combat_trigger_comparators/greater_than_equal\",\n      \"/combat_trigger_comparators/less_than_equal\",\n    ],\n    sortIndex: 5,\n  },\n  \"/combat_trigger_conditions/defense_coffee\": {\n    hrid: \"/combat_trigger_conditions/defense_coffee\",\n    name: \"Defense Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 10,\n  },\n  \"/combat_trigger_conditions/elemental_affinity_fire_amplify\": {\n    hrid: \"/combat_trigger_conditions/elemental_affinity_fire_amplify\",\n    name: \"Elemental Affinity (Fire Amplify)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 29,\n  },\n  \"/combat_trigger_conditions/elemental_affinity_nature_amplify\": {\n    hrid: \"/combat_trigger_conditions/elemental_affinity_nature_amplify\",\n    name: \"Elemental Affinity (Nature Amplify)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 28,\n  },\n  \"/combat_trigger_conditions/elemental_affinity_water_amplify\": {\n    hrid: \"/combat_trigger_conditions/elemental_affinity_water_amplify\",\n    name: \"Elemental Affinity (Water Amplify)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 27,\n  },\n  \"/combat_trigger_conditions/frenzy\": {\n    hrid: \"/combat_trigger_conditions/frenzy\",\n    name: \"Frenzy\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 24,\n  },\n  \"/combat_trigger_conditions/intelligence_coffee_max_mp\": {\n    hrid: \"/combat_trigger_conditions/intelligence_coffee_max_mp\",\n    name: \"Intelligence Coffee (Max MP)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 8,\n  },\n  \"/combat_trigger_conditions/intelligence_coffee_mp_regen\": {\n    hrid: \"/combat_trigger_conditions/intelligence_coffee_mp_regen\",\n    name: \"Intelligence Coffee (MP Regen)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 9,\n  },\n  \"/combat_trigger_conditions/lucky_coffee\": {\n    hrid: \"/combat_trigger_conditions/lucky_coffee\",\n    name: \"Lucky Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 16,\n  },\n  \"/combat_trigger_conditions/magic_coffee\": {\n    hrid: \"/combat_trigger_conditions/magic_coffee\",\n    name: \"Magic Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 14,\n  },\n  \"/combat_trigger_conditions/missing_hp\": {\n    hrid: \"/combat_trigger_conditions/missing_hp\",\n    name: \"Missing Hp\",\n    isSingleTarget: true,\n    isMultiTarget: true,\n    allowedComparatorHrids: [\n      \"/combat_trigger_comparators/greater_than_equal\",\n      \"/combat_trigger_comparators/less_than_equal\",\n    ],\n    sortIndex: 2,\n  },\n  \"/combat_trigger_conditions/missing_mp\": {\n    hrid: \"/combat_trigger_conditions/missing_mp\",\n    name: \"Missing Mp\",\n    isSingleTarget: true,\n    isMultiTarget: true,\n    allowedComparatorHrids: [\n      \"/combat_trigger_comparators/greater_than_equal\",\n      \"/combat_trigger_comparators/less_than_equal\",\n    ],\n    sortIndex: 4,\n  },\n  \"/combat_trigger_conditions/number_of_active_units\": {\n    hrid: \"/combat_trigger_conditions/number_of_active_units\",\n    name: \"# of Active Units\",\n    isSingleTarget: false,\n    isMultiTarget: true,\n    allowedComparatorHrids: [\n      \"/combat_trigger_comparators/greater_than_equal\",\n      \"/combat_trigger_comparators/less_than_equal\",\n    ],\n    sortIndex: 1,\n  },\n  \"/combat_trigger_conditions/power_coffee\": {\n    hrid: \"/combat_trigger_conditions/power_coffee\",\n    name: \"Power Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 12,\n  },\n  \"/combat_trigger_conditions/precision\": {\n    hrid: \"/combat_trigger_conditions/precision\",\n    name: \"Precision\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 22,\n  },\n  \"/combat_trigger_conditions/ranged_coffee\": {\n    hrid: \"/combat_trigger_conditions/ranged_coffee\",\n    name: \"Ranged Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 13,\n  },\n  \"/combat_trigger_conditions/spike_shell\": {\n    hrid: \"/combat_trigger_conditions/spike_shell\",\n    name: \"Spike Shell\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 25,\n  },\n  \"/combat_trigger_conditions/stamina_coffee_hp_regen\": {\n    hrid: \"/combat_trigger_conditions/stamina_coffee_hp_regen\",\n    name: \"Stamina Coffee (HP Regen)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 7,\n  },\n  \"/combat_trigger_conditions/stamina_coffee_max_hp\": {\n    hrid: \"/combat_trigger_conditions/stamina_coffee_max_hp\",\n    name: \"Stamina Coffee (Max HP)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 6,\n  },\n  \"/combat_trigger_conditions/stun_status\": {\n    hrid: \"/combat_trigger_conditions/stun_status\",\n    name: \"Stun Status\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 30,\n  },\n  \"/combat_trigger_conditions/swiftness_coffee\": {\n    hrid: \"/combat_trigger_conditions/swiftness_coffee\",\n    name: \"Swiftness Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 17,\n  },\n  \"/combat_trigger_conditions/toughness_armor\": {\n    hrid: \"/combat_trigger_conditions/toughness_armor\",\n    name: \"Toughness (Armor)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 18,\n  },\n  \"/combat_trigger_conditions/toughness_fire_resistance\": {\n    hrid: \"/combat_trigger_conditions/toughness_fire_resistance\",\n    name: \"Toughness (Fire Resistance)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 21,\n  },\n  \"/combat_trigger_conditions/toughness_nature_resistance\": {\n    hrid: \"/combat_trigger_conditions/toughness_nature_resistance\",\n    name: \"Toughness (Nature Resistance)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 20,\n  },\n  \"/combat_trigger_conditions/toughness_water_resistance\": {\n    hrid: \"/combat_trigger_conditions/toughness_water_resistance\",\n    name: \"Toughness (Water Resistance)\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 19,\n  },\n  \"/combat_trigger_conditions/vampirism\": {\n    hrid: \"/combat_trigger_conditions/vampirism\",\n    name: \"Vampirism\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 26,\n  },\n  \"/combat_trigger_conditions/wisdom_coffee\": {\n    hrid: \"/combat_trigger_conditions/wisdom_coffee\",\n    name: \"Wisdom Coffee\",\n    isSingleTarget: true,\n    isMultiTarget: false,\n    allowedComparatorHrids: [\"/combat_trigger_comparators/is_active\", \"/combat_trigger_comparators/is_inactive\"],\n    sortIndex: 15,\n  },\n};\n\nexport default combatTriggerConditionDetailMap;\n","import Equipment from \"$/Equipment\";\nimport Player from \"$/Player\";\nimport abilityDetailMap from \"$/data/abilityDetailMap.json\";\nimport itemDetailMap from \"$/data/itemDetailMap.json\";\nimport Ability from \"$/Ability\";\nimport Consumable from \"$/Consumable\";\nimport combatTriggerDependencyDetailMap from \"$/data/combatTriggerDependencyDetailMap.json\";\nimport combatTriggerConditionDetailMap from \"$/data/combatTriggerConditionDetailMap\";\nimport combatTriggerComparatorDetailMap from \"$/data/combatTriggerComparatorDetailMap.json\";\nimport abilitySlotsLevelRequirementList from \"$/data/abilitySlotsLevelRequirementList.json\";\nimport actionDetailMap from \"$/data/actionDetailMap.json\";\nimport combatMonsterDetailMap from \"$/data/combatMonsterDetailMap.json\";\nimport damageTypeDetailMap from \"$/data/damageTypeDetailMap.json\";\nimport combatStyleDetailMap from \"$/data/combatStyleDetailMap.json\";\nimport SimResult from \"$/simulator/simResult\";\n\nconst ONE_SECOND = 1e9;\nconst ONE_HOUR = 60 * 60 * ONE_SECOND;\n\nlet buttonStartSimulation = document.getElementById(\"buttonStartSimulation\") as HTMLButtonElement;\nlet progressbar = document.getElementById(\"simulationProgressBar\");\n\nlet worker = new Worker(new URL(\"worker.mjs\", import.meta.url), { type: \"module\" });\n\nlet player = new Player();\nlet food = [null, null, null];\nlet drinks = [null, null, null];\nlet abilities = [null, null, null, null];\nlet triggerMap = {};\nlet modalTriggers = [];\n\n// #region Worker\n\nworker.onmessage = function (event) {\n  switch (event.data.type) {\n    case \"simulation_result\":\n      progressbar.style.width = \"100%\";\n      progressbar.innerHTML = \"100%\";\n      showSimulationResult(event.data.simResult);\n      buttonStartSimulation.disabled = false;\n      break;\n    case \"simulation_progress\":\n      let progress = Math.floor(100 * event.data.progress);\n      progressbar.style.width = progress + \"%\";\n      progressbar.innerHTML = progress + \"%\";\n      break;\n    case \"simulation_error\":\n      showErrorModal(event.data.error.toString());\n      break;\n  }\n};\n\n// #endregion\n\n// #region Equipment\n\nfunction initEquipmentSection() {\n  [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"main_hand\", \"two_hand\", \"off_hand\", \"pouch\"].forEach((type) => {\n    initEquipmentSelect(type);\n    initEnhancementLevelInput(type);\n  });\n}\n\nfunction initEquipmentSelect(equipmentType) {\n  let selectId = \"selectEquipment_\";\n  if (equipmentType == \"main_hand\" || equipmentType == \"two_hand\") {\n    selectId += \"weapon\";\n  } else {\n    selectId += equipmentType;\n  }\n  let selectElement = document.getElementById(selectId) as HTMLSelectElement;\n\n  let gameEquipment = Object.values(itemDetailMap)\n    .filter((item) => item.categoryHrid == \"/item_categories/equipment\")\n    .filter((item) => item.equipmentDetail.type == \"/equipment_types/\" + equipmentType)\n    .sort((a, b) => a.sortIndex - b.sortIndex);\n\n  for (const equipment of Object.values(gameEquipment)) {\n    selectElement.add(new Option(equipment.name, equipment.hrid));\n  }\n\n  selectElement.addEventListener(\"change\", (event) => {\n    equipmentSelectHandler(event, equipmentType);\n  });\n}\n\nfunction initEnhancementLevelInput(equipmentType) {\n  let inputId = \"inputEquipmentEnhancementLevel_\";\n  if (equipmentType == \"main_hand\" || equipmentType == \"two_hand\") {\n    inputId += \"weapon\";\n  } else {\n    inputId += equipmentType;\n  }\n\n  let inputElement = document.getElementById(inputId) as HTMLInputElement;\n  inputElement.value = \"0\";\n  inputElement.addEventListener(\"change\", enhancementLevelInputHandler);\n}\n\nfunction equipmentSelectHandler(event, type) {\n  let equipmentType = \"/equipment_types/\" + type;\n\n  if (!event.target.value) {\n    updateEquipmentState();\n    updateUI();\n    return;\n  }\n\n  let gameItem = itemDetailMap[event.target.value];\n\n  // Weapon select has two handlers because of mainhand and twohand weapons. Ignore the handler with the wrong type\n  if (gameItem.equipmentDetail.type != equipmentType) {\n    return;\n  }\n\n  if (type == \"two_hand\") {\n    (document.getElementById(\"selectEquipment_off_hand\") as HTMLSelectElement).value = \"\";\n    (document.getElementById(\"inputEquipmentEnhancementLevel_off_hand\") as HTMLInputElement).value = \"0\";\n  }\n\n  if (type == \"off_hand\" && player.equipment[\"/equipment_types/two_hand\"]) {\n    (document.getElementById(\"selectEquipment_weapon\") as HTMLSelectElement).value = \"\";\n    (document.getElementById(\"inputEquipmentEnhancementLevel_weapon\") as HTMLInputElement).value = \"0\";\n  }\n\n  updateEquipmentState();\n  updateUI();\n}\n\nfunction enhancementLevelInputHandler() {\n  updateEquipmentState();\n  updateUI();\n}\n\nfunction updateEquipmentState() {\n  [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"main_hand\", \"two_hand\", \"off_hand\", \"pouch\"].forEach((type) => {\n    let equipmentType = \"/equipment_types/\" + type;\n    let selectType = type;\n    if (type == \"main_hand\" || type == \"two_hand\") {\n      selectType = \"weapon\";\n    }\n\n    let equipmentSelect = document.getElementById(\"selectEquipment_\" + selectType) as HTMLSelectElement;\n    let equipmentHrid = equipmentSelect.value;\n\n    if (!equipmentHrid) {\n      player.equipment[equipmentType] = null;\n      return;\n    }\n\n    let gameItem = itemDetailMap[equipmentHrid];\n\n    // Clear old weapon if a weapon of a different type is equipped\n    if (gameItem.equipmentDetail.type != equipmentType) {\n      player.equipment[equipmentType] = null;\n      return;\n    }\n\n    let enhancementLevel = Number(\n      (document.getElementById(`inputEquipmentEnhancementLevel_${selectType}`) as HTMLInputElement).value,\n    );\n    player.equipment[equipmentType] = new Equipment(gameItem.hrid, enhancementLevel);\n  });\n}\n\n// #endregion\n\n// #region Combat Stats\n\nfunction updateCombatStatsUI() {\n  player.updateCombatDetails();\n\n  let combatStyleElement = document.getElementById(\"combatStat_combatStyleHrid\");\n  let combatStyle = player.combatDetails.combatStats.combatStyleHrid;\n  combatStyleElement.innerHTML = combatStyleDetailMap[combatStyle].name;\n\n  let damageTypeElement = document.getElementById(\"combatStat_damageType\");\n  let damageType = damageTypeDetailMap[player.combatDetails.combatStats.damageType];\n  damageTypeElement.innerHTML = damageType.name;\n\n  let attackIntervalElement = document.getElementById(\"combatStat_attackInterval\");\n  attackIntervalElement.innerHTML = (player.combatDetails.combatStats.attackInterval / 1e9).toLocaleString() + \"s\";\n\n  [\n    \"maxHitpoints\",\n    \"maxManapoints\",\n    \"stabAccuracyRating\",\n    \"stabMaxDamage\",\n    \"slashAccuracyRating\",\n    \"slashMaxDamage\",\n    \"smashAccuracyRating\",\n    \"smashMaxDamage\",\n    \"rangedAccuracyRating\",\n    \"rangedMaxDamage\",\n    \"magicMaxDamage\",\n    \"stabEvasionRating\",\n    \"slashEvasionRating\",\n    \"smashEvasionRating\",\n    \"rangedEvasionRating\",\n    \"totalArmor\",\n    \"totalWaterResistance\",\n    \"totalNatureResistance\",\n    \"totalFireResistance\",\n  ].forEach((stat) => {\n    let element = document.getElementById(\"combatStat_\" + stat);\n    element.innerHTML = Math.floor(player.combatDetails[stat]).toString();\n  });\n\n  [\n    \"physicalAmplify\",\n    \"waterAmplify\",\n    \"natureAmplify\",\n    \"fireAmplify\",\n    \"healingAmplify\",\n    \"lifeSteal\",\n    \"physicalReflectPower\",\n    \"HPRegen\",\n    \"MPRegen\",\n    \"experienceRate\",\n  ].forEach((stat) => {\n    let element = document.getElementById(\"combatStat_\" + stat);\n    let value = (100 * player.combatDetails.combatStats[stat]).toLocaleString([], {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n    });\n    element.innerHTML = value + \"%\";\n  });\n}\n\n// #endregion\n\n// #region Level\n\nfunction initLevelSection() {\n  [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n    let levelInput = document.getElementById(`inputLevel_${skill}`) as HTMLInputElement;\n    levelInput.value = \"1\";\n    levelInput.addEventListener(\"change\", levelInputHandler);\n  });\n}\n\nfunction levelInputHandler() {\n  updateLevels();\n  updateUI();\n}\n\nfunction updateLevels() {\n  [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n    let levelInput = document.getElementById(`inputLevel_${skill}`) as HTMLInputElement;\n    player[`${skill}Level`] = Number(levelInput.value);\n  });\n}\n\n// #endregion\n\n// #region Food\n\nfunction initFoodSection() {\n  for (let i = 0; i < 3; i++) {\n    let element = document.getElementById(\"selectFood_\" + i) as HTMLSelectElement;\n\n    let gameFoods = Object.values(itemDetailMap)\n      .filter((item) => item.categoryHrid == \"/item_categories/food\")\n      .sort((a, b) => a.sortIndex - b.sortIndex);\n\n    for (const food of Object.values(gameFoods)) {\n      element.add(new Option(food.name, food.hrid));\n    }\n\n    element.addEventListener(\"change\", foodSelectHandler);\n  }\n}\n\nfunction foodSelectHandler() {\n  updateFoodState();\n  updateUI();\n}\n\nfunction updateFoodState() {\n  for (let i = 0; i < 3; i++) {\n    let foodSelect = document.getElementById(\"selectFood_\" + i) as HTMLSelectElement;\n    food[i] = foodSelect.value;\n    if (food[i] && !triggerMap[food[i]]) {\n      let gameItem = itemDetailMap[food[i]];\n      triggerMap[food[i]] = structuredClone(gameItem.consumableDetail.defaultCombatTriggers);\n    }\n  }\n}\n\nfunction updateFoodUI() {\n  for (let i = 0; i < 3; i++) {\n    let selectElement = document.getElementById(\"selectFood_\" + i) as HTMLSelectElement;\n    let triggerButton = document.getElementById(\"buttonFoodTrigger_\" + i) as HTMLButtonElement;\n\n    selectElement.disabled = i >= player.combatDetails.combatStats.foodSlots;\n    triggerButton.disabled = i >= player.combatDetails.combatStats.foodSlots || !food[i];\n  }\n}\n\n// #endregion\n\n// #region Drinks\n\nfunction initDrinksSection() {\n  for (let i = 0; i < 3; i++) {\n    let element = document.getElementById(\"selectDrink_\" + i) as HTMLSelectElement;\n\n    let gameDrinks = Object.values(itemDetailMap)\n      .filter((item) => item.categoryHrid == \"/item_categories/drink\")\n      .filter((item) => item.consumableDetail.usableInActionTypeMap[\"/action_types/combat\"])\n      .sort((a, b) => a.sortIndex - b.sortIndex);\n\n    for (const drink of Object.values(gameDrinks)) {\n      element.add(new Option(drink.name, drink.hrid));\n    }\n\n    element.addEventListener(\"change\", drinkSelectHandler);\n  }\n}\n\nfunction drinkSelectHandler() {\n  updateDrinksState();\n  updateDrinksUI();\n}\n\nfunction updateDrinksState() {\n  for (let i = 0; i < 3; i++) {\n    let drinkSelect = document.getElementById(\"selectDrink_\" + i) as HTMLSelectElement;\n    drinks[i] = drinkSelect.value;\n    if (drinks[i] && !triggerMap[drinks[i]]) {\n      let gameItem = itemDetailMap[drinks[i]];\n      triggerMap[drinks[i]] = structuredClone(gameItem.consumableDetail.defaultCombatTriggers);\n    }\n  }\n}\n\nfunction updateDrinksUI() {\n  for (let i = 0; i < 3; i++) {\n    let selectElement = document.getElementById(\"selectDrink_\" + i) as HTMLSelectElement;\n    let triggerButton = document.getElementById(\"buttonDrinkTrigger_\" + i) as HTMLButtonElement;\n\n    selectElement.disabled = i >= player.combatDetails.combatStats.drinkSlots;\n    triggerButton.disabled = i >= player.combatDetails.combatStats.drinkSlots || !drinks[i];\n  }\n}\n\n// #endregion\n\n// #region Abilities\n\nfunction initAbilitiesSection() {\n  for (let i = 0; i < 4; i++) {\n    let selectElement = document.getElementById(\"selectAbility_\" + i) as HTMLSelectElement;\n    let inputElement = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n\n    inputElement.value = \"1\";\n\n    let gameAbilities = Object.values(abilityDetailMap).sort((a, b) => a.sortIndex - b.sortIndex);\n\n    for (const ability of Object.values(gameAbilities)) {\n      selectElement.add(new Option(ability.name, ability.hrid));\n    }\n\n    selectElement.addEventListener(\"change\", abilitySelectHandler);\n  }\n}\n\nfunction abilitySelectHandler() {\n  updateAbilityState();\n  updateAbilityUI();\n}\n\nfunction updateAbilityState() {\n  for (let i = 0; i < 4; i++) {\n    let abilitySelect = document.getElementById(\"selectAbility_\" + i) as HTMLSelectElement;\n    abilities[i] = abilitySelect.value;\n    if (abilities[i] && !triggerMap[abilities[i]]) {\n      let gameAbility = abilityDetailMap[abilities[i]];\n      triggerMap[abilities[i]] = structuredClone(gameAbility.defaultCombatTriggers);\n    }\n  }\n}\n\nfunction updateAbilityUI() {\n  for (let i = 0; i < 4; i++) {\n    let selectElement = document.getElementById(\"selectAbility_\" + i) as HTMLSelectElement;\n    let inputElement = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n    let triggerButton = document.getElementById(\"buttonAbilityTrigger_\" + i) as HTMLButtonElement;\n\n    selectElement.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1];\n    inputElement.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1];\n    triggerButton.disabled = player.intelligenceLevel < abilitySlotsLevelRequirementList[i + 1] || !abilities[i];\n  }\n}\n\n// #endregion\n\n// #region Trigger\n\nfunction initTriggerModal() {\n  let modal = document.getElementById(\"triggerModal\");\n  modal.addEventListener(\"show.bs.modal\", (event) => triggerModalShownHandler(event));\n\n  let triggerSaveButton = document.getElementById(\"buttonTriggerModalSave\");\n  triggerSaveButton.addEventListener(\"click\", (event) => triggerModalSaveHandler(event));\n\n  let triggerAddButton = document.getElementById(\"buttonAddTrigger\");\n  triggerAddButton.addEventListener(\"click\", (event) => triggerAddButtonHandler(event));\n\n  let triggerDefaultButton = document.getElementById(\"buttonDefaultTrigger\");\n  triggerDefaultButton.addEventListener(\"click\", (event) => triggerDefaultButtonHandler(event));\n\n  for (let i = 0; i < 4; i++) {\n    let triggerDependencySelect = document.getElementById(\"selectTriggerDependency_\" + i);\n    let triggerConditionSelect = document.getElementById(\"selectTriggerCondition_\" + i);\n    let triggerComparatorSelect = document.getElementById(\"selectTriggerComparator_\" + i);\n    let triggerValueInput = document.getElementById(\"inputTriggerValue_\" + i);\n    let triggerRemoveButton = document.getElementById(\"buttonRemoveTrigger_\" + i);\n\n    triggerDependencySelect.addEventListener(\"change\", (event) => triggerDependencySelectHandler(event, i));\n    triggerConditionSelect.addEventListener(\"change\", (event) => triggerConditionSelectHandler(event, i));\n    triggerComparatorSelect.addEventListener(\"change\", (event) => triggerComparatorSelectHander(event, i));\n    triggerValueInput.addEventListener(\"change\", (event) => triggerValueInputHandler(event, i));\n    triggerRemoveButton.addEventListener(\"click\", (event) => triggerRemoveButtonHandler(event, i));\n  }\n}\n\nfunction triggerModalShownHandler(event) {\n  let triggerButton = event.relatedTarget;\n\n  let triggerType = triggerButton.getAttribute(\"data-bs-triggertype\");\n  let triggerIndex = Number(triggerButton.getAttribute(\"data-bs-triggerindex\"));\n\n  let triggerTarget;\n  switch (triggerType) {\n    case \"food\":\n      triggerTarget = food[triggerIndex];\n      break;\n    case \"drink\":\n      triggerTarget = drinks[triggerIndex];\n      break;\n    case \"ability\":\n      triggerTarget = abilities[triggerIndex];\n      break;\n  }\n\n  let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\") as HTMLInputElement;\n  triggerTargetnput.value = triggerTarget;\n  modalTriggers = triggerMap[triggerTarget];\n  updateTriggerModal();\n}\n\nfunction triggerModalSaveHandler(event) {\n  let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\") as HTMLInputElement;\n  let triggerTarget = triggerTargetnput.value;\n\n  triggerMap[triggerTarget] = modalTriggers;\n}\n\nfunction triggerDependencySelectHandler(event, index) {\n  modalTriggers[index].dependencyHrid = event.target.value;\n  modalTriggers[index].conditionHrid = \"\";\n  modalTriggers[index].comparatorHrid = \"\";\n  modalTriggers[index].value = 0;\n\n  updateTriggerModal();\n}\n\nfunction triggerConditionSelectHandler(event, index) {\n  modalTriggers[index].conditionHrid = event.target.value;\n  modalTriggers[index].comparatorHrid = \"\";\n  modalTriggers[index].value = 0;\n\n  updateTriggerModal();\n}\n\nfunction triggerComparatorSelectHander(event, index) {\n  modalTriggers[index].comparatorHrid = event.target.value;\n\n  updateTriggerModal();\n}\n\nfunction triggerValueInputHandler(event, index) {\n  modalTriggers[index].value = Number(event.target.value);\n\n  updateTriggerModal();\n}\n\nfunction triggerRemoveButtonHandler(event, index) {\n  modalTriggers.splice(index, 1);\n\n  updateTriggerModal();\n}\n\nfunction triggerAddButtonHandler(event) {\n  if (modalTriggers.length == 4) {\n    return;\n  }\n\n  modalTriggers.push({\n    dependencyHrid: \"\",\n    conditionHrid: \"\",\n    comparatorHrid: \"\",\n    value: 0,\n  });\n\n  updateTriggerModal();\n}\n\nfunction triggerDefaultButtonHandler(event) {\n  let triggerTargetnput = document.getElementById(\"inputModalTriggerTarget\") as HTMLInputElement;\n  let triggerTarget = triggerTargetnput.value;\n\n  if (triggerTarget.startsWith(\"/items/\")) {\n    modalTriggers = structuredClone(itemDetailMap[triggerTarget].consumableDetail.defaultCombatTriggers);\n  } else {\n    modalTriggers = structuredClone(abilityDetailMap[triggerTarget].defaultCombatTriggers);\n  }\n\n  updateTriggerModal();\n}\n\nfunction updateTriggerModal() {\n  let triggerStartTextElement = document.getElementById(\"triggerStartText\");\n  if (modalTriggers.length == 0) {\n    triggerStartTextElement.innerHTML = \"Activate as soon as it's off cooldown\";\n  } else {\n    triggerStartTextElement.innerHTML = \"Activate when:\";\n  }\n\n  let triggerAddButton = document.getElementById(\"buttonAddTrigger\") as HTMLButtonElement;\n  triggerAddButton.disabled = modalTriggers.length == 4;\n\n  let triggersValid = true;\n\n  for (let i = 0; i < 4; i++) {\n    let triggerElement = document.getElementById(\"modalTrigger_\" + i);\n\n    if (!modalTriggers[i]) {\n      hideElement(triggerElement);\n      continue;\n    }\n\n    showElement(triggerElement);\n\n    let triggerDependencySelect = document.getElementById(\"selectTriggerDependency_\" + i) as HTMLSelectElement;\n    let triggerConditionSelect = document.getElementById(\"selectTriggerCondition_\" + i) as HTMLSelectElement;\n    let triggerComparatorSelect = document.getElementById(\"selectTriggerComparator_\" + i) as HTMLSelectElement;\n    let triggerValueInput = document.getElementById(\"inputTriggerValue_\" + i) as HTMLInputElement;\n\n    showElement(triggerDependencySelect);\n    fillTriggerDependencySelect(triggerDependencySelect);\n\n    if (modalTriggers[i].dependencyHrid == \"\") {\n      hideElement(triggerConditionSelect);\n      hideElement(triggerComparatorSelect);\n      hideElement(triggerValueInput);\n      triggersValid = false;\n      continue;\n    }\n\n    triggerDependencySelect.value = modalTriggers[i].dependencyHrid;\n    showElement(triggerConditionSelect);\n    fillTriggerConditionSelect(triggerConditionSelect, modalTriggers[i].dependencyHrid);\n\n    if (modalTriggers[i].conditionHrid == \"\") {\n      hideElement(triggerComparatorSelect);\n      hideElement(triggerValueInput);\n      triggersValid = false;\n      continue;\n    }\n\n    triggerConditionSelect.value = modalTriggers[i].conditionHrid;\n    showElement(triggerComparatorSelect);\n    fillTriggerComparatorSelect(triggerComparatorSelect, modalTriggers[i].conditionHrid);\n\n    if (modalTriggers[i].comparatorHrid == \"\") {\n      hideElement(triggerValueInput);\n      triggersValid = false;\n      continue;\n    }\n\n    triggerComparatorSelect.value = modalTriggers[i].comparatorHrid;\n\n    if (combatTriggerComparatorDetailMap[modalTriggers[i].comparatorHrid].allowValue) {\n      showElement(triggerValueInput);\n      triggerValueInput.value = modalTriggers[i].value;\n    } else {\n      hideElement(triggerValueInput);\n    }\n  }\n\n  let triggerSaveButton = document.getElementById(\"buttonTriggerModalSave\") as HTMLButtonElement;\n  triggerSaveButton.disabled = !triggersValid;\n}\n\nfunction fillTriggerDependencySelect(element) {\n  element.length = 0;\n  element.add(new Option(\"\", \"\"));\n\n  for (const dependency of Object.values(combatTriggerDependencyDetailMap).sort((a, b) => a.sortIndex - b.sortIndex)) {\n    element.add(new Option(dependency.name, dependency.hrid));\n  }\n}\n\n/**\n * Fills the trigger condition select element based on the selected dependency.\n *\n * @param element The select element to fill with trigger conditions.\n * @param dependencyHrid The hrid of the selected dependency.\n */\nfunction fillTriggerConditionSelect(element, dependencyHrid) {\n  let dependency = combatTriggerDependencyDetailMap[dependencyHrid];\n\n  let conditions = [];\n  if (dependency.isSingleTarget) {\n    conditions = Object.values(combatTriggerConditionDetailMap).filter((condition) => condition.isSingleTarget);\n  } else {\n    conditions = Object.values(combatTriggerConditionDetailMap).filter((condition) => condition.isMultiTarget);\n  }\n\n  element.length = 0;\n  element.add(new Option(\"\", \"\"));\n\n  for (const condition of Object.values(conditions).sort((a, b) => a.sortIndex - b.sortIndex)) {\n    element.add(new Option(condition.name, condition.hrid));\n  }\n}\n\nfunction fillTriggerComparatorSelect(element, conditionHrid) {\n  let condition = combatTriggerConditionDetailMap[conditionHrid];\n\n  let comparators = condition.allowedComparatorHrids.map((hrid) => combatTriggerComparatorDetailMap[hrid]);\n\n  element.length = 0;\n  element.add(new Option(\"\", \"\"));\n\n  for (const comparator of Object.values(comparators).sort((a, b) => a.sortIndex - b.sortIndex)) {\n    element.add(new Option(comparator.name, comparator.hrid));\n  }\n}\n\nfunction hideElement(element) {\n  element.classList.remove(\"d-flex\");\n  element.classList.add(\"d-none\");\n}\n\nfunction showElement(element) {\n  element.classList.remove(\"d-none\");\n  element.classList.add(\"d-flex\");\n}\n\n// #endregion\n\n// #region Zones\n\nfunction initZones() {\n  let zoneSelect = document.getElementById(\"selectZone\") as HTMLSelectElement;\n\n  let gameZones = Object.values(actionDetailMap)\n    .filter((action) => action.type == \"/action_types/combat\")\n    .sort((a, b) => a.sortIndex - b.sortIndex);\n\n  for (const zone of Object.values(gameZones)) {\n    zoneSelect.add(new Option(zone.name, zone.hrid));\n  }\n}\n\n// #endregion\n\n// #region Simulation Result\n\nfunction showSimulationResult(simResult: SimResult) {\n  showKills(simResult);\n  showDeaths(simResult);\n  showExperienceGained(simResult);\n  showConsumablesUsed(simResult);\n  showHitpointsGained(simResult);\n  showManapointsGained(simResult);\n  showDamageDone(simResult);\n  showDamageTaken(simResult);\n}\n\nfunction showKills(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultKills\");\n  let newChildren = [];\n\n  let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n  let playerDeaths = simResult.deaths[\"player\"] ?? 0;\n  let encountersPerHour = (simResult.encounters / hoursSimulated).toFixed(1);\n\n  let encountersRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Encounters\", encountersPerHour]);\n  newChildren.push(encountersRow);\n\n  let monsters = Object.keys(simResult.deaths)\n    .filter((enemy) => enemy != \"player\")\n    .sort();\n\n  for (const monster of monsters) {\n    let killsPerHour = (simResult.deaths[monster] / hoursSimulated).toFixed(1);\n    let monsterRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [combatMonsterDetailMap[monster].name, killsPerHour]);\n    newChildren.push(monsterRow);\n  }\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showDeaths(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultPlayerDeaths\");\n\n  let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n  let playerDeaths = simResult.deaths[\"player\"] ?? 0;\n  let deathsPerHour = (playerDeaths / hoursSimulated).toFixed(2);\n\n  let deathRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Player\", deathsPerHour]);\n  resultDiv.replaceChildren(deathRow);\n}\n\nfunction showExperienceGained(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultExperienceGain\");\n  let newChildren = [];\n\n  let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n\n  let totalExperience = Object.values(simResult.experienceGained[\"player\"]).reduce((acc, cur) => {\n    acc += cur;\n    return acc;\n  }, 0);\n\n  let totalExperiencePerHour = (totalExperience / hoursSimulated).toFixed(0);\n  let totalRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Total\", totalExperiencePerHour]);\n  newChildren.push(totalRow);\n\n  [\"Stamina\", \"Intelligence\", \"Attack\", \"Power\", \"Defense\", \"Ranged\", \"Magic\"].forEach((skill) => {\n    let experience = simResult.experienceGained[\"player\"][skill.toLowerCase()] ?? 0;\n    if (experience == 0) {\n      return;\n    }\n    let experiencePerHour = (experience / hoursSimulated).toFixed(0);\n    let experienceRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [skill, experiencePerHour]);\n    newChildren.push(experienceRow);\n  });\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showConsumablesUsed(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultConsumablesUsed\");\n  let newChildren = [];\n\n  let hoursSimulated = simResult.simulatedTime / ONE_HOUR;\n\n  if (!simResult.consumablesUsed[\"player\"]) {\n    resultDiv.replaceChildren(...newChildren);\n    return;\n  }\n\n  let consumablesUsed = Object.entries(simResult.consumablesUsed[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n  for (const [consumable, amount] of consumablesUsed) {\n    let consumablesPerHour = (amount / hoursSimulated).toFixed(0);\n    let consumableRow = createRow(\n      [\"col-md-6\", \"col-md-6 text-end\"],\n      [itemDetailMap[consumable].name, consumablesPerHour],\n    );\n    newChildren.push(consumableRow);\n  }\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showHitpointsGained(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultHealthRestored\");\n  let newChildren = [];\n\n  let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n  if (!simResult.hitpointsGained[\"player\"]) {\n    resultDiv.replaceChildren(...newChildren);\n    return;\n  }\n\n  let hitpointsGained = Object.entries(simResult.hitpointsGained[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n  let totalHitpointsGained = hitpointsGained.reduce((prev, cur) => prev + cur[1], 0);\n  let totalHitpointsPerSecond = (totalHitpointsGained / secondsSimulated).toFixed(2);\n  let totalRow = createRow(\n    [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n    [\"Total\", totalHitpointsPerSecond, \"100%\"],\n  );\n  newChildren.push(totalRow);\n\n  for (const [source, amount] of hitpointsGained) {\n    if (amount == 0) {\n      continue;\n    }\n\n    let sourceText;\n    switch (source) {\n      case \"regen\":\n        sourceText = \"Regen\";\n        break;\n      case \"lifesteal\":\n        sourceText = \"Life Steal\";\n        break;\n      default:\n        if (itemDetailMap[source]) {\n          sourceText = itemDetailMap[source].name;\n        } else if (abilityDetailMap[source]) {\n          sourceText = abilityDetailMap[source].name;\n        }\n        break;\n    }\n    let hitpointsPerSecond = (amount / secondsSimulated).toFixed(2);\n    let percentage = ((100 * amount) / totalHitpointsGained).toFixed(0);\n\n    let row = createRow(\n      [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n      [sourceText, hitpointsPerSecond, percentage + \"%\"],\n    );\n    newChildren.push(row);\n  }\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showManapointsGained(simResult: SimResult) {\n  let resultDiv = document.getElementById(\"simulationResultManaRestored\");\n  let newChildren = [];\n\n  let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n  if (!simResult.manapointsGained[\"player\"]) {\n    resultDiv.replaceChildren(...newChildren);\n    return;\n  }\n\n  let manapointsGained = Object.entries(simResult.manapointsGained[\"player\"]).sort((a, b) => b[1] - a[1]);\n\n  let totalManapointsGained = manapointsGained.reduce((prev, cur) => prev + cur[1], 0);\n  let totalManapointsPerSecond = (totalManapointsGained / secondsSimulated).toFixed(2);\n  let totalRow = createRow(\n    [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n    [\"Total\", totalManapointsPerSecond, \"100%\"],\n  );\n  newChildren.push(totalRow);\n\n  for (const [source, amount] of manapointsGained) {\n    if (amount == 0) {\n      continue;\n    }\n\n    let sourceText;\n    switch (source) {\n      case \"regen\":\n        sourceText = \"Regen\";\n        break;\n      default:\n        sourceText = itemDetailMap[source].name;\n        break;\n    }\n    let manapointsPerSecond = (amount / secondsSimulated).toFixed(2);\n    let percentage = ((100 * amount) / totalManapointsGained).toFixed(0);\n\n    let row = createRow(\n      [\"col-md-6\", \"col-md-3 text-end\", \"col-md-3 text-end\"],\n      [sourceText, manapointsPerSecond, percentage + \"%\"],\n    );\n    newChildren.push(row);\n  }\n\n  let ranOutOfManaText = simResult.playerRanOutOfMana ? \"Yes\" : \"No\";\n  let ranOutOfManaRow = createRow([\"col-md-6\", \"col-md-6 text-end\"], [\"Ran out of mana\", ranOutOfManaText]);\n  newChildren.push(ranOutOfManaRow);\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction showDamageDone(simResult: SimResult) {\n  let totalDamageDone = {};\n  let enemyIndex = 1;\n\n  let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n  for (let i = 1; i < 6; i++) {\n    let accordion = document.getElementById(\"simulationResultDamageDoneAccordionEnemy\" + i);\n    hideElement(accordion);\n  }\n\n  for (const [target, abilities] of Object.entries(simResult.attacks[\"player\"])) {\n    let targetDamageDone = {};\n\n    for (const [ability, abilityCasts] of Object.entries(abilities)) {\n      let casts = Object.values(abilityCasts).reduce((prev, cur) => prev + cur, 0);\n      let misses = abilityCasts[\"miss\"] ?? 0;\n      let damage = Object.entries(abilityCasts)\n        .filter((entry) => entry[0] != \"miss\")\n        .reduce((prev, cur) => prev + Number(cur[0]) * cur[1], 0);\n\n      targetDamageDone[ability] = {\n        casts,\n        misses,\n        damage,\n      };\n      if (totalDamageDone[ability]) {\n        totalDamageDone[ability].casts += casts;\n        totalDamageDone[ability].misses += misses;\n        totalDamageDone[ability].damage += damage;\n      } else {\n        totalDamageDone[ability] = {\n          casts,\n          misses,\n          damage,\n        };\n      }\n    }\n\n    let resultDiv = document.getElementById(\"simulationResultDamageDoneEnemy\" + enemyIndex);\n    createDamageTable(resultDiv, targetDamageDone, secondsSimulated);\n\n    let resultAccordion = document.getElementById(\"simulationResultDamageDoneAccordionEnemy\" + enemyIndex);\n    showElement(resultAccordion);\n\n    let resultAccordionButton = document.getElementById(\"buttonSimulationResultDamageDoneAccordionEnemy\" + enemyIndex);\n    let targetName = combatMonsterDetailMap[target].name;\n    resultAccordionButton.innerHTML = \"<b>Damage Done (\" + targetName + \")</b>\";\n\n    enemyIndex++;\n  }\n\n  let totalResultDiv = document.getElementById(\"simulationResultTotalDamageDone\");\n  createDamageTable(totalResultDiv, totalDamageDone, secondsSimulated);\n}\n\nfunction showDamageTaken(simResult: SimResult) {\n  let totalDamageTaken = {};\n  let enemyIndex = 1;\n\n  let secondsSimulated = simResult.simulatedTime / ONE_SECOND;\n\n  for (let i = 1; i < 6; i++) {\n    let accordion = document.getElementById(\"simulationResultDamageTakenAccordionEnemy\" + i);\n    hideElement(accordion);\n  }\n\n  for (const [source, targets] of Object.entries(simResult.attacks)) {\n    if (source == \"player\") {\n      continue;\n    }\n\n    let sourceDamageTaken = {};\n\n    for (const [ability, abilityCasts] of Object.entries(targets[\"player\"])) {\n      let casts = Object.values(abilityCasts).reduce((prev, cur) => prev + cur, 0);\n      let misses = abilityCasts[\"miss\"] ?? 0;\n      let damage = Object.entries(abilityCasts)\n        .filter((entry) => entry[0] != \"miss\")\n        .reduce((prev, cur) => prev + Number(cur[0]) * cur[1], 0);\n\n      sourceDamageTaken[ability] = {\n        casts,\n        misses,\n        damage,\n      };\n      if (totalDamageTaken[ability]) {\n        totalDamageTaken[ability].casts += casts;\n        totalDamageTaken[ability].misses += misses;\n        totalDamageTaken[ability].damage += damage;\n      } else {\n        totalDamageTaken[ability] = {\n          casts,\n          misses,\n          damage,\n        };\n      }\n    }\n\n    let resultDiv = document.getElementById(\"simulationResultDamageTakenEnemy\" + enemyIndex);\n    createDamageTable(resultDiv, sourceDamageTaken, secondsSimulated);\n\n    let resultAccordion = document.getElementById(\"simulationResultDamageTakenAccordionEnemy\" + enemyIndex);\n    showElement(resultAccordion);\n\n    let resultAccordionButton = document.getElementById(\"buttonSimulationResultDamageTakenAccordionEnemy\" + enemyIndex);\n    let sourceName = combatMonsterDetailMap[source].name;\n    resultAccordionButton.innerHTML = \"<b>Damage Taken (\" + sourceName + \")</b>\";\n\n    enemyIndex++;\n  }\n\n  let totalResultDiv = document.getElementById(\"simulationResultTotalDamageTaken\");\n  createDamageTable(totalResultDiv, totalDamageTaken, secondsSimulated);\n}\n\nfunction createDamageTable(\n  resultDiv: HTMLElement,\n  damage: Record<string, { casts: number; misses: number; damage: number }>,\n  secondsSimulated: number,\n) {\n  let newChildren = [];\n\n  let sortedDamageDone = Object.entries(damage).sort((a, b) => b[1].damage - a[1].damage);\n\n  let totalCasts = sortedDamageDone.reduce((prev, cur) => prev + cur[1].casts, 0);\n  let totalMisses = sortedDamageDone.reduce((prev, cur) => prev + cur[1].misses, 0);\n  let totalDamage = sortedDamageDone.reduce((prev, cur) => prev + cur[1].damage, 0);\n  let totalHitChance = ((100 * (totalCasts - totalMisses)) / totalCasts).toFixed(1);\n  let totalDamagePerSecond = (totalDamage / secondsSimulated).toFixed(2);\n\n  let totalRow = createRow(\n    [\"col-md-5\", \"col-md-3 text-end\", \"col-md-2 text-end\", \"col-md-2 text-end\"],\n    [\"Total\", totalHitChance + \"%\", totalDamagePerSecond, \"100%\"],\n  );\n  newChildren.push(totalRow);\n\n  for (const [ability, damageInfo] of sortedDamageDone) {\n    let abilityText;\n    switch (ability) {\n      case \"autoAttack\":\n        abilityText = \"Auto Attack\";\n        break;\n      case \"bleed\":\n        abilityText = \"Bleed\";\n        break;\n      case \"physicalReflect\":\n        abilityText = \"Physical Reflect\";\n        break;\n      default:\n        abilityText = abilityDetailMap[ability].name;\n        break;\n    }\n\n    let hitChance = ((100 * (damageInfo.casts - damageInfo.misses)) / damageInfo.casts).toFixed(1);\n    let damagePerSecond = (damageInfo.damage / secondsSimulated).toFixed(2);\n    let percentage = ((100 * damageInfo.damage) / totalDamage).toFixed(0);\n\n    let row = createRow(\n      [\"col-md-5\", \"col-md-3 text-end\", \"col-md-2 text-end\", \"col-md-2 text-end\"],\n      [abilityText, hitChance + \"%\", damagePerSecond, percentage + \"%\"],\n    );\n    newChildren.push(row);\n  }\n\n  resultDiv.replaceChildren(...newChildren);\n}\n\nfunction createRow(columnClassNames, columnValues) {\n  let row = createElement(\"div\", \"row\");\n\n  for (let i = 0; i < columnClassNames.length; i++) {\n    let column = createElement(\"div\", columnClassNames[i], columnValues[i]);\n    row.appendChild(column);\n  }\n\n  return row;\n}\n\nfunction createElement(tagName, className, innerHTML = \"\") {\n  let element = document.createElement(tagName);\n  element.className = className;\n  element.innerHTML = innerHTML;\n\n  return element;\n}\n\n// #endregion\n\n// #region Simulation Controls\n\nfunction initSimulationControls() {\n  let simulationTimeInput = document.getElementById(\"inputSimulationTime\") as HTMLInputElement;\n  simulationTimeInput.value = \"100\";\n\n  buttonStartSimulation.addEventListener(\"click\", (event) => {\n    let invalidElements = document.querySelectorAll(\":invalid\");\n    if (invalidElements.length > 0) {\n      invalidElements.forEach((element) => (element as HTMLInputElement).reportValidity());\n      return;\n    }\n\n    buttonStartSimulation.disabled = true;\n    startSimulation();\n  });\n}\n\nfunction startSimulation() {\n  updateState();\n  updateUI();\n\n  for (let i = 0; i < 3; i++) {\n    if (food[i] && i < player.combatDetails.combatStats.foodSlots) {\n      let consumable = new Consumable(food[i], triggerMap[food[i]]);\n      player.food[i] = consumable;\n    } else {\n      player.food[i] = null;\n    }\n\n    if (drinks[i] && i < player.combatDetails.combatStats.drinkSlots) {\n      let consumable = new Consumable(drinks[i], triggerMap[drinks[i]]);\n      player.drinks[i] = consumable;\n    } else {\n      player.drinks[i] = null;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    if (abilities[i] && player.intelligenceLevel >= abilitySlotsLevelRequirementList[i + 1]) {\n      let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n      let ability = new Ability(abilities[i], Number(abilityLevelInput.value), triggerMap[abilities[i]]);\n      player.abilities[i] = ability;\n    } else {\n      player.abilities[i] = null;\n    }\n  }\n\n  let zoneSelect = document.getElementById(\"selectZone\") as HTMLSelectElement;\n  let simulationTimeInput = document.getElementById(\"inputSimulationTime\") as HTMLInputElement;\n\n  let simulationTimeLimit = Number(simulationTimeInput.value) * ONE_HOUR;\n\n  let workerMessage = {\n    type: \"start_simulation\",\n    player: player,\n    zoneHrid: zoneSelect.value,\n    simulationTimeLimit: simulationTimeLimit,\n  };\n\n  worker.postMessage(workerMessage);\n}\n\n// #endregion\n\n// #region Equipment Sets\n\nfunction initEquipmentSetsModal() {\n  let equipmentSetsModal = document.getElementById(\"equipmentSetsModal\");\n  equipmentSetsModal.addEventListener(\"show.bs.modal\", equipmentSetsModalShownHandler);\n\n  let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\");\n  equipmentSetNameInput.addEventListener(\"input\", (event) => equipmentSetNameChangedHandler(event));\n\n  let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\");\n  createEquipmentSetButton.addEventListener(\"click\", createNewEquipmentSetHandler);\n}\n\nfunction equipmentSetsModalShownHandler() {\n  resetNewEquipmentSetControls();\n  updateEquipmentSetList();\n}\n\nfunction resetNewEquipmentSetControls() {\n  let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\") as HTMLInputElement;\n  equipmentSetNameInput.value = \"\";\n\n  let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\") as HTMLButtonElement;\n  createEquipmentSetButton.disabled = true;\n}\n\nfunction updateEquipmentSetList() {\n  let newChildren = [];\n  let equipmentSets = loadEquipmentSets();\n\n  for (const equipmentSetName of Object.keys(equipmentSets)) {\n    let row = createElement(\"div\", \"row mb-2\");\n\n    let nameCol = createElement(\"div\", \"col align-self-center\", equipmentSetName);\n    row.appendChild(nameCol);\n\n    let loadButtonCol = createElement(\"div\", \"col-md-auto\");\n    let loadButton = createElement(\"button\", \"btn btn-primary\", \"Load\");\n    loadButton.setAttribute(\"type\", \"button\");\n    loadButton.addEventListener(\"click\", (_) => loadEquipmentSetHandler(equipmentSetName));\n    loadButtonCol.appendChild(loadButton);\n    row.appendChild(loadButtonCol);\n\n    let saveButtonCol = createElement(\"div\", \"col-md-auto\");\n    let saveButton = createElement(\"button\", \"btn btn-primary\", \"Save\");\n    saveButton.setAttribute(\"type\", \"button\");\n    saveButton.addEventListener(\"click\", (_) => updateEquipmentSetHandler(equipmentSetName));\n    saveButtonCol.appendChild(saveButton);\n    row.appendChild(saveButtonCol);\n\n    let deleteButtonCol = createElement(\"div\", \"col-md-auto\");\n    let deleteButton = createElement(\"button\", \"btn btn-danger\", \"Delete\");\n    deleteButton.setAttribute(\"type\", \"button\");\n    deleteButton.addEventListener(\"click\", (_) => deleteEquipmentSetHandler(equipmentSetName));\n    deleteButtonCol.appendChild(deleteButton);\n    row.appendChild(deleteButtonCol);\n\n    newChildren.push(row);\n  }\n\n  let equipmentSetList = document.getElementById(\"equipmentSetList\");\n  equipmentSetList.replaceChildren(...newChildren);\n}\n\nfunction equipmentSetNameChangedHandler(event) {\n  let invalid = false;\n\n  if (event.target.value.length == 0) {\n    invalid = true;\n  }\n\n  let equipmentSets = loadEquipmentSets();\n  if (equipmentSets[event.target.value]) {\n    invalid = true;\n  }\n\n  let createEquipmentSetButton = document.getElementById(\"buttonCreateNewEquipmentSet\") as HTMLButtonElement;\n  createEquipmentSetButton.disabled = invalid;\n}\n\nfunction createNewEquipmentSetHandler() {\n  let equipmentSetNameInput = document.getElementById(\"inputEquipmentSetName\") as HTMLInputElement;\n  let equipmentSetName = equipmentSetNameInput.value;\n\n  let equipmentSet = getEquipmentSetFromUI();\n  let equipmentSets = loadEquipmentSets();\n  equipmentSets[equipmentSetName] = equipmentSet;\n  saveEquipmentSets(equipmentSets);\n\n  resetNewEquipmentSetControls();\n  updateEquipmentSetList();\n}\n\nfunction loadEquipmentSetHandler(name) {\n  let equipmentSets = loadEquipmentSets();\n  loadEquipmentSetIntoUI(equipmentSets[name]);\n}\n\nfunction updateEquipmentSetHandler(name) {\n  let equipmentSet = getEquipmentSetFromUI();\n  let equipmentSets = loadEquipmentSets();\n  equipmentSets[name] = equipmentSet;\n  saveEquipmentSets(equipmentSets);\n}\n\nfunction deleteEquipmentSetHandler(name) {\n  let equipmentSets = loadEquipmentSets();\n  delete equipmentSets[name];\n  saveEquipmentSets(equipmentSets);\n\n  updateEquipmentSetList();\n}\n\nfunction loadEquipmentSets() {\n  return JSON.parse(localStorage.getItem(\"equipmentSets\")) ?? {};\n}\n\nfunction saveEquipmentSets(equipmentSets) {\n  localStorage.setItem(\"equipmentSets\", JSON.stringify(equipmentSets));\n}\n\nfunction getEquipmentSetFromUI() {\n  let equipmentSet = {\n    levels: {},\n    equipment: {},\n    food: {},\n    drinks: {},\n    abilities: {},\n    triggerMap: {},\n  };\n\n  [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n    let levelInput = document.getElementById(\"inputLevel_\" + skill) as HTMLInputElement;\n    equipmentSet.levels[skill] = Number(levelInput.value);\n  });\n\n  [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"weapon\", \"off_hand\", \"pouch\"].forEach((type) => {\n    let equipmentSelect = document.getElementById(\"selectEquipment_\" + type) as HTMLSelectElement;\n    let enhancementLevelInput = document.getElementById(\"inputEquipmentEnhancementLevel_\" + type) as HTMLInputElement;\n\n    equipmentSet.equipment[type] = {\n      equipment: equipmentSelect.value,\n      enhancementLevel: Number(enhancementLevelInput.value),\n    };\n  });\n\n  for (let i = 0; i < 3; i++) {\n    let foodSelect = document.getElementById(\"selectFood_\" + i) as HTMLSelectElement;\n    equipmentSet.food[i] = foodSelect.value;\n  }\n\n  for (let i = 0; i < 3; i++) {\n    let drinkSelect = document.getElementById(\"selectDrink_\" + i) as HTMLSelectElement;\n    equipmentSet.drinks[i] = drinkSelect.value;\n  }\n\n  for (let i = 0; i < 4; i++) {\n    let abilitySelect = document.getElementById(\"selectAbility_\" + i) as HTMLSelectElement;\n    let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n    equipmentSet.abilities[i] = {\n      ability: abilitySelect.value,\n      level: Number(abilityLevelInput.value),\n    };\n  }\n\n  equipmentSet.triggerMap = triggerMap;\n\n  return equipmentSet;\n}\n\nfunction loadEquipmentSetIntoUI(equipmentSet) {\n  [\"stamina\", \"intelligence\", \"attack\", \"power\", \"defense\", \"ranged\", \"magic\"].forEach((skill) => {\n    let levelInput = document.getElementById(\"inputLevel_\" + skill) as HTMLInputElement;\n    levelInput.value = equipmentSet.levels[skill] ?? 1;\n  });\n\n  [\"head\", \"body\", \"legs\", \"feet\", \"hands\", \"weapon\", \"off_hand\", \"pouch\"].forEach((type) => {\n    let equipmentSelect = document.getElementById(\"selectEquipment_\" + type) as HTMLSelectElement;\n    let enhancementLevelInput = document.getElementById(\"inputEquipmentEnhancementLevel_\" + type) as HTMLInputElement;\n\n    equipmentSelect.value = equipmentSet.equipment[type].equipment;\n    enhancementLevelInput.value = equipmentSet.equipment[type].enhancementLevel;\n  });\n\n  for (let i = 0; i < 3; i++) {\n    let foodSelect = document.getElementById(\"selectFood_\" + i) as HTMLSelectElement;\n    foodSelect.value = equipmentSet.food[i];\n  }\n\n  for (let i = 0; i < 3; i++) {\n    let drinkSelect = document.getElementById(\"selectDrink_\" + i) as HTMLSelectElement;\n    drinkSelect.value = equipmentSet.drinks[i];\n  }\n\n  for (let i = 0; i < 4; i++) {\n    let abilitySelect = document.getElementById(\"selectAbility_\" + i) as HTMLSelectElement;\n    let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n\n    abilitySelect.value = equipmentSet.abilities[i].ability;\n    abilityLevelInput.value = equipmentSet.abilities[i].level;\n  }\n\n  triggerMap = equipmentSet.triggerMap;\n\n  updateState();\n  updateUI();\n}\n\n// #endregion\n\n// #region Error Handling\n\nfunction initErrorHandling() {\n  window.addEventListener(\"error\", (event) => {\n    showErrorModal(event.message);\n  });\n\n  let copyErrorButton = document.getElementById(\"buttonCopyError\");\n  copyErrorButton.addEventListener(\"click\", (event) => {\n    let errorInput = document.getElementById(\"inputError\") as HTMLInputElement;\n    navigator.clipboard.writeText(errorInput.value);\n  });\n}\n\nfunction showErrorModal(error) {\n  let zoneSelect = document.getElementById(\"selectZone\") as HTMLSelectElement;\n  let simulationTimeInput = document.getElementById(\"inputSimulationTime\") as HTMLInputElement;\n\n  let state = {\n    error: error,\n    player: player,\n    food: food,\n    drinks: drinks,\n    abilities: abilities,\n    triggerMap: triggerMap,\n    modalTriggers: modalTriggers,\n    zone: zoneSelect.value,\n    simulationTime: simulationTimeInput.value,\n  };\n\n  for (let i = 0; i < 4; i++) {\n    let abilityLevelInput = document.getElementById(\"inputAbilityLevel_\" + i) as HTMLInputElement;\n    state[\"abilityLevel\" + i] = abilityLevelInput.value;\n  }\n\n  let errorInput = document.getElementById(\"inputError\") as HTMLInputElement;\n  errorInput.value = JSON.stringify(state);\n\n  // @ts-ignore - bootstrap type not fixed yet\n  let errorModal = new bootstrap.Modal(document.getElementById(\"errorModal\"));\n  errorModal.show();\n}\n\n// #endregion\n\nfunction updateState() {\n  updateEquipmentState();\n  updateLevels();\n  updateFoodState();\n  updateDrinksState();\n  updateAbilityState();\n}\n\nfunction updateUI() {\n  updateCombatStatsUI();\n  updateFoodUI();\n  updateDrinksUI();\n  updateAbilityUI();\n}\n\ninitEquipmentSection();\ninitLevelSection();\ninitFoodSection();\ninitDrinksSection();\ninitAbilitiesSection();\ninitZones();\ninitTriggerModal();\ninitSimulationControls();\ninitEquipmentSetsModal();\ninitErrorHandling();\n\nupdateState();\nupdateUI();\n"],"names":["Equipment","hrid","enhancementLevel","gameItem","itemDetailMap","dto","combatStat","multiplier","enhancementLevelTotalMultiplierTable","Buff","buff","level","__publicField","Trigger","dependencyHrid","conditionHrid","comparatorHrid","value","source","target","friendlies","enemies","currentTime","combatTriggerDependencyDetailMap","dependencyValue","dependency","unit","prev","cur","buffHrid","Ability","triggers","gameAbility","abilityDetailMap","effect","abilityEffect","defaultTrigger","trigger","shouldTrigger","CombatUnit","stat","accuracyRatioBoost","damageRatioBoost","style","attackIntervalRatioBoost","boost","baseArmor","armorBoosts","baseWaterResistance","waterResistanceBoosts","baseNatureResistance","natureResistanceBoosts","baseFireResistance","fireResistanceBoosts","type","boosts","_a","_b","food","drink","ability","hitpoints","hitpointsAdded","newHitpoints","manapoints","manapointsAdded","newManapoints","Consumable","gameConsumable","consumableBuff","Player","player","key","equipment","combatTriggerConditionDetailMap","ONE_SECOND","ONE_HOUR","buttonStartSimulation","progressbar","worker","drinks","abilities","triggerMap","modalTriggers","event","showSimulationResult","progress","showErrorModal","initEquipmentSection","initEquipmentSelect","initEnhancementLevelInput","equipmentType","selectId","selectElement","gameEquipment","item","a","b","equipmentSelectHandler","inputId","inputElement","enhancementLevelInputHandler","updateEquipmentState","updateUI","selectType","equipmentHrid","updateCombatStatsUI","combatStyleElement","combatStyle","combatStyleDetailMap","damageTypeElement","damageType","damageTypeDetailMap","attackIntervalElement","element","initLevelSection","skill","levelInput","levelInputHandler","updateLevels","initFoodSection","i","gameFoods","foodSelectHandler","updateFoodState","foodSelect","updateFoodUI","triggerButton","initDrinksSection","gameDrinks","drinkSelectHandler","updateDrinksState","updateDrinksUI","drinkSelect","initAbilitiesSection","gameAbilities","abilitySelectHandler","updateAbilityState","updateAbilityUI","abilitySelect","abilitySlotsLevelRequirementList","initTriggerModal","triggerModalShownHandler","triggerModalSaveHandler","triggerAddButtonHandler","triggerDefaultButtonHandler","triggerDependencySelect","triggerConditionSelect","triggerComparatorSelect","triggerValueInput","triggerRemoveButton","triggerDependencySelectHandler","triggerConditionSelectHandler","triggerComparatorSelectHander","triggerValueInputHandler","triggerRemoveButtonHandler","triggerType","triggerIndex","triggerTarget","triggerTargetnput","updateTriggerModal","index","triggerStartTextElement","triggerAddButton","triggersValid","triggerElement","hideElement","showElement","fillTriggerDependencySelect","fillTriggerConditionSelect","fillTriggerComparatorSelect","combatTriggerComparatorDetailMap","triggerSaveButton","conditions","condition","comparators","comparator","initZones","zoneSelect","gameZones","actionDetailMap","action","zone","simResult","showKills","showDeaths","showExperienceGained","showConsumablesUsed","showHitpointsGained","showManapointsGained","showDamageDone","showDamageTaken","resultDiv","newChildren","hoursSimulated","encountersPerHour","encountersRow","createRow","monsters","enemy","monster","killsPerHour","monsterRow","combatMonsterDetailMap","deathsPerHour","deathRow","totalExperiencePerHour","acc","totalRow","experience","experiencePerHour","experienceRow","consumablesUsed","consumable","amount","consumablesPerHour","consumableRow","secondsSimulated","hitpointsGained","totalHitpointsGained","totalHitpointsPerSecond","sourceText","hitpointsPerSecond","percentage","row","manapointsGained","totalManapointsGained","totalManapointsPerSecond","manapointsPerSecond","ranOutOfManaText","ranOutOfManaRow","totalDamageDone","enemyIndex","accordion","targetDamageDone","abilityCasts","casts","misses","damage","entry","createDamageTable","resultAccordion","resultAccordionButton","targetName","totalResultDiv","totalDamageTaken","targets","sourceDamageTaken","sourceName","sortedDamageDone","totalCasts","totalMisses","totalDamage","totalHitChance","totalDamagePerSecond","damageInfo","abilityText","hitChance","damagePerSecond","columnClassNames","columnValues","createElement","column","tagName","className","innerHTML","initSimulationControls","simulationTimeInput","invalidElements","startSimulation","updateState","abilityLevelInput","simulationTimeLimit","workerMessage","initEquipmentSetsModal","equipmentSetsModalShownHandler","equipmentSetNameChangedHandler","createNewEquipmentSetHandler","resetNewEquipmentSetControls","updateEquipmentSetList","equipmentSetNameInput","createEquipmentSetButton","equipmentSets","loadEquipmentSets","equipmentSetName","nameCol","loadButtonCol","loadButton","_","loadEquipmentSetHandler","saveButtonCol","saveButton","updateEquipmentSetHandler","deleteButtonCol","deleteButton","deleteEquipmentSetHandler","invalid","equipmentSet","getEquipmentSetFromUI","saveEquipmentSets","name","loadEquipmentSetIntoUI","equipmentSelect","enhancementLevelInput","initErrorHandling","errorInput","error","state"],"mappings":"gg36BAGA,MAAMA,CAAU,CACd,YAAYC,EAAMC,EAAkB,CAClC,KAAK,KAAOD,EACZ,IAAIE,EAAWC,EAAc,KAAK,IAAI,EACtC,GAAI,CAACD,EACH,MAAM,IAAI,MAAM,gCAAkC,KAAK,IAAI,EAE7D,KAAK,SAAWA,EAChB,KAAK,iBAAmBD,CAC5B,CAEE,OAAO,cAAcG,EAAK,CAGxB,OAFgB,IAAIL,EAAUK,EAAI,KAAMA,EAAI,gBAAgB,CAGhE,CAEE,cAAcC,EAAY,CACxB,IAAIC,EAAaC,GAAqC,KAAK,gBAAgB,EAM3E,OAHE,KAAK,SAAS,gBAAgB,YAAYF,CAAU,EACpDC,EAAa,KAAK,SAAS,gBAAgB,yBAAyBD,CAAU,CAGpF,CAEE,gBAAiB,CACf,OAAO,KAAK,SAAS,gBAAgB,YAAY,eACrD,CAEE,eAAgB,CACd,OAAO,KAAK,SAAS,gBAAgB,YAAY,UACrD,CACA,CCrCA,MAAMG,CAAK,CAGT,YAAYC,EAAMC,EAAQ,EAAG,CAF7BC,EAAA,kBAGE,KAAK,WAAaF,EAAK,WACvB,KAAK,SAAWA,EAAK,SACrB,KAAK,WAAaA,EAAK,YAAcC,EAAQ,GAAKD,EAAK,qBACvD,KAAK,UAAYA,EAAK,WAAaC,EAAQ,GAAKD,EAAK,oBACrD,KAAK,SAAWA,EAAK,QACzB,CACA,4kyBCRA,MAAMG,CAAQ,CACZ,YAAYC,EAAgBC,EAAeC,EAAgBC,EAAQ,EAAG,CACpE,KAAK,eAAiBH,EACtB,KAAK,cAAgBC,EACrB,KAAK,eAAiBC,EACtB,KAAK,MAAQC,CACjB,CAEE,OAAO,cAAcZ,EAAK,CAGxB,OAFc,IAAIQ,EAAQR,EAAI,eAAgBA,EAAI,cAAeA,EAAI,eAAgBA,EAAI,KAAK,CAGlG,CAEE,SAASa,EAAQC,EAAQC,EAAYC,EAASC,EAAa,CACzD,OAAIC,EAAiC,KAAK,cAAc,EAAE,eACjD,KAAK,qBAAqBL,EAAQC,EAAQG,CAAW,EAErD,KAAK,oBAAoBF,EAAYC,EAASC,CAAW,CAEtE,CAEE,qBAAqBJ,EAAQC,EAAQG,EAAa,CAChD,IAAIE,EACJ,OAAQ,KAAK,eAAc,CACzB,IAAK,oCACHA,EAAkB,KAAK,mBAAmBN,EAAQI,CAAW,EAC7D,MACF,IAAK,8CACH,GAAI,CAACH,EACH,MAAO,GAETK,EAAkB,KAAK,mBAAmBL,EAAQG,CAAW,EAC7D,MACF,QACE,MAAM,IAAI,MAAM,sCAAwC,KAAK,cAAc,CACnF,CAEI,OAAO,KAAK,aAAaE,CAAe,CAC5C,CAEE,oBAAoBJ,EAAYC,EAASC,EAAa,CACpD,IAAIG,EACJ,OAAQ,KAAK,eAAc,CACzB,IAAK,0CACHA,EAAaL,EACb,MACF,IAAK,2CACH,GAAI,CAACC,EACH,MAAO,GAETI,EAAaJ,EACb,MACF,QACE,MAAM,IAAI,MAAM,sCAAwC,KAAK,cAAc,CACnF,CAEI,IAAIG,EACJ,OAAQ,KAAK,cAAa,CACxB,IAAK,oDACHA,EAAkBC,EAAW,OAAQC,GAASA,EAAK,cAAc,iBAAmB,CAAC,EAAE,OACvF,MACF,QACEF,EAAkBC,EACf,IAAKC,GAAS,KAAK,mBAAmBA,EAAMJ,CAAW,CAAC,EACxD,OAAO,CAACK,EAAMC,IAAQD,EAAOC,EAAK,CAAC,EACtC,KACR,CAEI,OAAO,KAAK,aAAaJ,CAAe,CAC5C,CAEE,mBAAmBN,EAAQI,EAAa,CACtC,OAAQ,KAAK,cAAa,CACxB,IAAK,2CACL,IAAK,qCACL,IAAK,4CACL,IAAK,6DACL,IAAK,+DACL,IAAK,8DACL,IAAK,oCACL,IAAK,wDACL,IAAK,0DACL,IAAK,0CACL,IAAK,0CACL,IAAK,0CACL,IAAK,uCACL,IAAK,2CACL,IAAK,yCACL,IAAK,qDACL,IAAK,mDACL,IAAK,8CACL,IAAK,6CACL,IAAK,uDACL,IAAK,yDACL,IAAK,wDACL,IAAK,uCACL,IAAK,2CACH,IAAIO,EAAW,gBACf,OAAAA,GAAY,KAAK,cAAc,MAAM,KAAK,cAAc,YAAY,GAAG,CAAC,EACjEX,EAAO,YAAYW,CAAQ,EACpC,IAAK,wCACH,OAAOX,EAAO,cAAc,iBAC9B,IAAK,wCACH,OAAOA,EAAO,cAAc,kBAC9B,IAAK,wCACH,OAAOA,EAAO,cAAc,aAAeA,EAAO,cAAc,iBAClE,IAAK,wCACH,OAAOA,EAAO,cAAc,cAAgBA,EAAO,cAAc,kBACnE,IAAK,yCAGH,OAAOA,EAAO,WAAaA,EAAO,gBAAkBI,EACtD,QACE,MAAM,IAAI,MAAM,qCAAuC,KAAK,aAAa,CACjF,CACA,CAEE,aAAaE,EAAiB,CAC5B,OAAQ,KAAK,eAAc,CACzB,IAAK,iDACH,OAAOA,GAAmB,KAAK,MACjC,IAAK,8CACH,OAAOA,GAAmB,KAAK,MACjC,IAAK,wCACH,MAAO,CAAC,CAACA,EACX,IAAK,0CACH,MAAO,CAACA,EACV,QACE,MAAM,IAAI,MAAM,sCAAwC,KAAK,cAAc,CACnF,CACA,CACA,CClIA,MAAMM,CAAQ,CACZ,YAAY7B,EAAMU,EAAOoB,EAAW,KAAM,CACxC,KAAK,KAAO9B,EACZ,KAAK,MAAQU,EAEb,IAAIqB,EAAcC,EAAiBhC,CAAI,EACvC,GAAI,CAAC+B,EACH,MAAM,IAAI,MAAM,8BAAgC,KAAK,IAAI,EAG3D,KAAK,SAAWA,EAAY,SAC5B,KAAK,iBAAmBA,EAAY,iBAEpC,KAAK,eAAiB,CAAE,EAExB,UAAWE,KAAUF,EAAY,eAAgB,CAC/C,IAAIG,EAAgB,CAClB,WAAYD,EAAO,WACnB,WAAYA,EAAO,WACnB,gBAAiBA,EAAO,gBACxB,WAAYA,EAAO,WACnB,WAAYA,EAAO,gBAAkB,KAAK,MAAQ,GAAKA,EAAO,yBAC9D,YAAaA,EAAO,iBAAmB,KAAK,MAAQ,GAAKA,EAAO,0BAChE,WAAYA,EAAO,WACnB,cAAeA,EAAO,cACtB,WAAYA,EAAO,WACnB,aAAcA,EAAO,aACrB,MAAO,IACR,EACD,GAAIA,EAAO,MAAO,CAChBC,EAAc,MAAQ,CAAE,EACxB,UAAWzB,KAAQwB,EAAO,MACxBC,EAAc,MAAM,KAAK,IAAI1B,EAAKC,EAAM,KAAK,KAAK,CAAC,CAE7D,CACM,KAAK,eAAe,KAAKyB,CAAa,CAC5C,CAEI,GAAIJ,EACF,KAAK,SAAWA,MACX,CACL,KAAK,SAAW,CAAE,EAClB,UAAWK,KAAkBJ,EAAY,sBAAuB,CAC9D,IAAIK,EAAU,IAAIxB,EAChBuB,EAAe,eACfA,EAAe,cACfA,EAAe,eACfA,EAAe,KAChB,EACD,KAAK,SAAS,KAAKC,CAAO,CAClC,CACA,CAEI,KAAK,SAAW,OAAO,gBAC3B,CAEE,OAAO,cAAchC,EAAK,CACxB,IAAI0B,EAAW1B,EAAI,SAAS,IAAKgC,GAAYxB,EAAQ,cAAcwB,CAAO,CAAC,EAG3E,OAFc,IAAIP,EAAQzB,EAAI,KAAMA,EAAI,MAAO0B,CAAQ,CAG3D,CAEE,cAAcT,EAAaJ,EAAQC,EAAQC,EAAYC,EAAS,CAK9D,GAJIH,EAAO,WAIP,KAAK,SAAW,KAAK,iBAAmBI,EAC1C,MAAO,GAGT,GAAI,KAAK,SAAS,QAAU,EAC1B,MAAO,GAGT,IAAIgB,EAAgB,GACpB,UAAWD,KAAW,KAAK,SACpBA,EAAQ,SAASnB,EAAQC,EAAQC,EAAYC,EAASC,CAAW,IACpEgB,EAAgB,IAIpB,OAAOA,CACX,CACA,CCvFA,MAAMC,EAAW,CAAjB,aAAA,CACa,KAAA,SAAA,GACC,KAAA,UAAA,GACK,KAAA,eAAA,KAGF,KAAA,aAAA,EACK,KAAA,kBAAA,EACN,KAAA,YAAA,EACD,KAAA,WAAA,EACE,KAAA,aAAA,EACD,KAAA,YAAA,EACD,KAAA,WAAA,EAEb,KAAA,UAAY,CAAC,KAAM,KAAM,KAAM,IAAI,EAC5B,KAAA,KAAA,CAAC,KAAM,KAAM,IAAI,EACf,KAAA,OAAA,CAAC,KAAM,KAAM,IAAI,EAGM,KAAA,cAAA,CAC9B,aAAc,EACd,kBAAmB,EACnB,YAAa,EACb,WAAY,EACZ,aAAc,EACd,YAAa,EACb,WAAY,EACZ,aAAc,IACd,iBAAkB,IAClB,cAAe,IACf,kBAAmB,IACnB,mBAAoB,GACpB,oBAAqB,GACrB,oBAAqB,GACrB,qBAAsB,GACtB,cAAe,GACf,eAAgB,GAChB,eAAgB,GAChB,gBAAiB,GACjB,eAAgB,GAChB,kBAAmB,GACnB,mBAAoB,GACpB,mBAAoB,GACpB,oBAAqB,GACrB,WAAY,GACZ,qBAAsB,GACtB,sBAAuB,GACvB,oBAAqB,GACrB,YAAa,CACX,gBAAiB,uBACjB,WAAY,yBACZ,eAAgB,IAChB,aAAc,EACd,cAAe,EACf,cAAe,EACf,eAAgB,EAChB,WAAY,EACZ,YAAa,EACb,YAAa,EACb,aAAc,EACd,YAAa,EACb,gBAAiB,EACjB,aAAc,EACd,cAAe,EACf,YAAa,EACb,eAAgB,EAChB,YAAa,EACb,aAAc,EACd,aAAc,EACd,cAAe,EACf,MAAO,EACP,gBAAiB,EACjB,iBAAkB,EAClB,eAAgB,EAChB,aAAc,EACd,cAAe,EACf,UAAW,EACX,QAAS,IACT,QAAS,IACT,qBAAsB,EACtB,SAAU,EACV,aAAc,EACd,eAAgB,EAChB,UAAW,EACX,WAAY,CAAA,CAEhB,EAEA,KAAA,YAAoC,CAAC,CAAA,CAErC,qBAAsB,CACf,KAAA,cAAc,YAAY,QAAU,IACpC,KAAA,cAAc,YAAY,QAAU,IAExC,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAASC,GAAS,CAC7F,KAAK,cAAcA,EAAO,OAAO,EAAI,KAAKA,EAAO,OAAO,EAC3C,KAAK,cAAc,eAAiBA,EAAO,QAAQ,EACzD,QAAS9B,GAAS,CAClB,KAAA,cAAc8B,EAAO,OAAO,GAAK,KAAK,MAAM,KAAKA,EAAO,OAAO,EAAI9B,EAAK,UAAU,EACvF,KAAK,cAAc8B,EAAO,OAAO,GAAK9B,EAAK,SAAA,CAC5C,CAAA,CACF,EAEI,KAAA,cAAc,aACjB,IAAM,GAAK,KAAK,cAAc,cAAgB,KAAK,cAAc,YAAY,aAC1E,KAAA,cAAc,cACjB,IAAM,GAAK,KAAK,cAAc,mBAAqB,KAAK,cAAc,YAAY,cAEpF,IAAI+B,EAAqB,KAAK,aAAa,sBAAsB,EAAE,WAC/DC,EAAmB,KAAK,aAAa,oBAAoB,EAAE,WAE/D,CAAC,OAAQ,QAAS,OAAO,EAAE,QAASC,GAAU,CAC5C,KAAK,cAAcA,EAAQ,gBAAgB,GACxC,GAAK,KAAK,cAAc,cACxB,EAAI,KAAK,cAAc,YAAYA,EAAQ,UAAU,IACrD,EAAIF,GACP,KAAK,cAAcE,EAAQ,WAAW,GACnC,GAAK,KAAK,cAAc,aACxB,EAAI,KAAK,cAAc,YAAYA,EAAQ,QAAQ,IACnD,EAAID,GACP,KAAK,cAAcC,EAAQ,eAAe,GACvC,GAAK,KAAK,cAAc,eAAiB,EAAI,KAAK,cAAc,YAAYA,EAAQ,SAAS,EAAA,CACjG,EAEI,KAAA,cAAc,sBAChB,GAAK,KAAK,cAAc,cACxB,EAAI,KAAK,cAAc,YAAY,iBACnC,EAAIF,GACF,KAAA,cAAc,iBAChB,GAAK,KAAK,cAAc,cACxB,EAAI,KAAK,cAAc,YAAY,eACnC,EAAIC,GACF,KAAA,cAAc,qBAChB,GAAK,KAAK,cAAc,eAAiB,EAAI,KAAK,cAAc,YAAY,eAE1E,KAAA,cAAc,gBAChB,GAAK,KAAK,cAAc,aAAe,EAAI,KAAK,cAAc,YAAY,cAAgB,EAAIA,GAEjG,KAAK,cAAc,YAAY,iBAAmB,KAAK,aAAa,8BAA8B,EAAE,UACpG,KAAK,cAAc,YAAY,cAAgB,KAAK,aAAa,2BAA2B,EAAE,UAC9F,KAAK,cAAc,YAAY,eAAiB,KAAK,aAAa,4BAA4B,EAAE,UAChG,KAAK,cAAc,YAAY,aAAe,KAAK,aAAa,0BAA0B,EAAE,UAG5F,IAAIE,EADuB,KAAK,cAAc,0BAA0B,EAErE,IAAKC,GAAUA,EAAM,UAAU,EAC/B,OAAO,CAAClB,EAAMC,IAAQD,EAAOC,EAAK,CAAC,EACjC,KAAA,cAAc,YAAY,eAC7B,KAAK,cAAc,YAAY,gBAAkB,GAAK,EAAIgB,IAE5D,IAAIE,EAAY,GAAM,KAAK,cAAc,aAAe,KAAK,cAAc,YAAY,MACvF,KAAK,cAAc,WAAaA,EAC5B,IAAAC,EAAc,KAAK,cAAc,mBAAmB,EACxD,UAAWF,KAASE,EACb,KAAA,cAAc,YAAcF,EAAM,UAClC,KAAA,cAAc,YAAcC,EAAYD,EAAM,WAGjD,IAAAG,EACF,GAAM,KAAK,cAAc,aACzB,GAAM,KAAK,cAAc,WACzB,KAAK,cAAc,YAAY,gBACjC,KAAK,cAAc,qBAAuBA,EACtC,IAAAC,EAAwB,KAAK,cAAc,8BAA8B,EAC7E,UAAWJ,KAASI,EACb,KAAA,cAAc,sBAAwBJ,EAAM,UAC5C,KAAA,cAAc,sBAAwBG,EAAsBH,EAAM,WAGrE,IAAAK,EACF,GAAM,KAAK,cAAc,aACzB,GAAM,KAAK,cAAc,WACzB,KAAK,cAAc,YAAY,iBACjC,KAAK,cAAc,sBAAwBA,EACvC,IAAAC,EAAyB,KAAK,cAAc,+BAA+B,EAC/E,UAAWN,KAASM,EACb,KAAA,cAAc,uBAAyBN,EAAM,UAC7C,KAAA,cAAc,uBAAyBK,EAAuBL,EAAM,WAGvE,IAAAO,EACF,GAAM,KAAK,cAAc,aACzB,GAAM,KAAK,cAAc,WACzB,KAAK,cAAc,YAAY,eACjC,KAAK,cAAc,oBAAsBA,EACrC,IAAAC,EAAuB,KAAK,cAAc,6BAA6B,EAC3E,UAAWR,KAASQ,EACb,KAAA,cAAc,qBAAuBR,EAAM,UAC3C,KAAA,cAAc,qBAAuBO,EAAqBP,EAAM,WAGvE,KAAK,cAAc,YAAY,WAAa,KAAK,aAAa,wBAAwB,EAAE,UACxF,KAAK,cAAc,YAAY,SAAW,KAAK,aAAa,sBAAsB,EAAE,UACpF,KAAK,cAAc,YAAY,SAAW,KAAK,aAAa,sBAAsB,EAAE,UAC/E,KAAA,cAAc,YAAY,sBAAwB,KAAK,aAC1D,oCAAA,EACA,UACF,KAAK,cAAc,YAAY,UAAY,KAAK,aAAa,8BAA8B,EAAE,WAC7F,KAAK,cAAc,YAAY,gBAAkB,KAAK,aAAa,oBAAoB,EAAE,SAAA,CAG3F,QAAQnC,EAAMY,EAAa,CACzBZ,EAAK,UAAYY,EACZ,KAAA,YAAYZ,EAAK,UAAU,EAAIA,EAEpC,KAAK,oBAAoB,CAAA,CAG3B,mBAAmBY,EAAqB,CACnB,OAAO,OAAO,KAAK,WAAW,EAAE,OAAQZ,GAASA,EAAK,UAAYA,EAAK,UAAYY,CAAW,EACpG,QAASZ,GAAS,CACtB,OAAA,KAAK,YAAYA,EAAK,UAAU,CAAA,CACxC,EAED,KAAK,oBAAoB,CAAA,CAG3B,YAAa,CACX,KAAK,YAAc,CAAC,EACpB,KAAK,oBAAoB,CAAA,CAG3B,cAAc4C,EAAM,CAClB,IAAIC,EAAS,CAAC,EACd,cAAO,OAAO,KAAK,WAAW,EAC3B,OAAQ7C,GAASA,EAAK,UAAY4C,CAAI,EACtC,QAAS5C,GAAS,CACV6C,EAAA,KAAK,CAAE,WAAY7C,EAAK,WAAY,UAAWA,EAAK,UAAW,CAAA,CACvE,EAEI6C,CAAA,CAGT,aAAaD,EAAM,SACb,IAAAC,EAAS,KAAK,cAAcD,CAAI,EAEhC,GAAAC,EAAO,OAAS,EACZ,MAAA,IAAI,MAAM,kDAAoDD,CAAI,EAQnE,MALK,CACV,aAAYE,EAAAD,EAAO,CAAC,IAAR,YAAAC,EAAW,aAAc,EACrC,YAAWC,EAAAF,EAAO,CAAC,IAAR,YAAAE,EAAW,YAAa,CACrC,CAEO,CAGT,MAAMnC,EAAc,EAAG,CACrB,KAAK,UAAY,GACjB,KAAK,eAAiB,KAEtB,KAAK,WAAW,EAChB,KAAK,oBAAoB,EACzB,KAAK,eAAeA,CAAW,EAE1B,KAAA,cAAc,iBAAmB,KAAK,cAAc,aACpD,KAAA,cAAc,kBAAoB,KAAK,cAAc,aAAA,CAG5D,eAAeA,EAAc,EAAG,CAC9B,KAAK,KAAK,OAAQoC,GAASA,GAAQ,IAAI,EAAE,QAASA,GAAUA,EAAK,SAAW,OAAO,gBAAiB,EACpG,KAAK,OAAO,OAAQC,GAAUA,GAAS,IAAI,EAAE,QAASA,GAAWA,EAAM,SAAW,OAAO,gBAAiB,EAErG,KAAA,UACF,OAAQC,GAAYA,GAAW,IAAI,EACnC,QAASA,GAAY,CAChB,KAAK,SACPA,EAAQ,SAAW,OAAO,iBAElBA,EAAA,SAAWtC,EAAc,KAAK,MAAM,KAAK,OAAO,EAAIsC,EAAQ,gBAAgB,CACtF,CACD,CAAA,CAGL,aAAaC,EAAW,CACtB,IAAIC,EAAiB,EAErB,GAAI,KAAK,cAAc,kBAAoB,KAAK,cAAc,aACrD,OAAAA,EAGL,IAAAC,EAAe,KAAK,IAAI,KAAK,cAAc,iBAAmBF,EAAW,KAAK,cAAc,YAAY,EAC3F,OAAAC,EAAAC,EAAe,KAAK,cAAc,iBACnD,KAAK,cAAc,iBAAmBA,EAE/BD,CAAA,CAGT,cAAcE,EAAY,CACxB,IAAIC,EAAkB,EAEtB,GAAI,KAAK,cAAc,mBAAqB,KAAK,cAAc,cACtD,OAAAA,EAGL,IAAAC,EAAgB,KAAK,IAAI,KAAK,cAAc,kBAAoBF,EAAY,KAAK,cAAc,aAAa,EAC9F,OAAAC,EAAAC,EAAgB,KAAK,cAAc,kBACrD,KAAK,cAAc,kBAAoBA,EAEhCD,CAAA,CAEX,CC5SA,MAAME,CAAW,CACf,YAAYlE,EAAM8B,EAAW,KAAM,CACjC,KAAK,KAAO9B,EAEZ,IAAImE,EAAiBhE,EAAc,KAAK,IAAI,EAC5C,GAAI,CAACgE,EACH,MAAM,IAAI,MAAM,iCAAmC,KAAK,IAAI,EAS9D,GANA,KAAK,iBAAmBA,EAAe,iBAAiB,iBACxD,KAAK,gBAAkBA,EAAe,iBAAiB,gBACvD,KAAK,iBAAmBA,EAAe,iBAAiB,iBACxD,KAAK,iBAAmBA,EAAe,iBAAiB,iBAExD,KAAK,MAAQ,CAAE,EACXA,EAAe,iBAAiB,MAClC,UAAWC,KAAkBD,EAAe,iBAAiB,MAAO,CAClE,IAAI1D,EAAO,IAAID,EAAK4D,CAAc,EAClC,KAAK,MAAM,KAAK3D,CAAI,CAC5B,CAGI,GAAIqB,EACF,KAAK,SAAWA,MACX,CACL,KAAK,SAAW,CAAE,EAClB,UAAWK,KAAkBgC,EAAe,iBAAiB,sBAAuB,CAClF,IAAI/B,EAAU,IAAIxB,EAChBuB,EAAe,eACfA,EAAe,cACfA,EAAe,eACfA,EAAe,KAChB,EACD,KAAK,SAAS,KAAKC,CAAO,CAClC,CACA,CAEI,KAAK,SAAW,OAAO,gBAC3B,CAEE,OAAO,cAAchC,EAAK,CACxB,IAAI0B,EAAW1B,EAAI,SAAS,IAAKgC,GAAYxB,EAAQ,cAAcwB,CAAO,CAAC,EAG3E,OAFiB,IAAI8B,EAAW9D,EAAI,KAAM0B,CAAQ,CAGtD,CAEE,cAAcT,EAAaJ,EAAQC,EAAQC,EAAYC,EAAS,CAK9D,GAJIH,EAAO,WAIP,KAAK,SAAW,KAAK,iBAAmBI,EAC1C,MAAO,GAGT,GAAI,KAAK,SAAS,QAAU,EAC1B,MAAO,GAGT,IAAIgB,EAAgB,GACpB,UAAWD,KAAW,KAAK,SACpBA,EAAQ,SAASnB,EAAQC,EAAQC,EAAYC,EAASC,CAAW,IACpEgB,EAAgB,IAIpB,OAAOA,CACX,CACA,CCpEA,MAAMgC,UAAe/B,EAAW,CAe9B,aAAc,CACN,MAAA,EAbI,KAAA,UAAA,CACV,wBAAyB,KACzB,wBAAyB,KACzB,wBAAyB,KACzB,wBAAyB,KACzB,yBAA0B,KAC1B,6BAA8B,KAC9B,4BAA6B,KAC7B,4BAA6B,KAC7B,yBAA0B,IAC5B,EAKE,KAAK,SAAW,GAChB,KAAK,KAAO,QAAA,CAGd,OAAO,cAAclC,EAAK,CACpB,IAAAkE,EAAS,IAAID,EAEjBC,EAAO,aAAelE,EAAI,aAC1BkE,EAAO,kBAAoBlE,EAAI,kBAC/BkE,EAAO,YAAclE,EAAI,YACzBkE,EAAO,WAAalE,EAAI,WACxBkE,EAAO,aAAelE,EAAI,aAC1BkE,EAAO,YAAclE,EAAI,YACzBkE,EAAO,WAAalE,EAAI,WAEb,SAAA,CAACmE,EAAKvD,CAAK,IAAK,OAAO,QAAQZ,EAAI,SAAS,EACrDkE,EAAO,UAAUC,CAAG,EAAIvD,EAAQjB,EAAU,cAAciB,CAAK,EAAI,KAG5D,OAAAsD,EAAA,KAAOlE,EAAI,KAAK,IAAKqD,GAAUA,EAAOS,EAAW,cAAcT,CAAI,EAAI,IAAK,EAC5Ea,EAAA,OAASlE,EAAI,OAAO,IAAKsD,GAAWA,EAAQQ,EAAW,cAAcR,CAAK,EAAI,IAAK,EACnFY,EAAA,UAAYlE,EAAI,UAAU,IAAKuD,GAAaA,EAAU9B,EAAQ,cAAc8B,CAAO,EAAI,IAAK,EAE5FW,CAAA,CAGT,qBAAsB,CAChB,KAAK,UAAU,4BAA4B,GAC7C,KAAK,cAAc,YAAY,gBAAkB,KAAK,UAAU,4BAA4B,EAAE,eAAe,EAC7G,KAAK,cAAc,YAAY,WAAa,KAAK,UAAU,4BAA4B,EAAE,cAAc,EAClG,KAAA,cAAc,YAAY,eAC7B,KAAK,UAAU,4BAA4B,EAAE,cAAc,gBAAgB,GACpE,KAAK,UAAU,2BAA2B,GACnD,KAAK,cAAc,YAAY,gBAAkB,KAAK,UAAU,2BAA2B,EAAE,eAAe,EAC5G,KAAK,cAAc,YAAY,WAAa,KAAK,UAAU,2BAA2B,EAAE,cAAc,EACjG,KAAA,cAAc,YAAY,eAC7B,KAAK,UAAU,2BAA2B,EAAE,cAAc,gBAAgB,IAEvE,KAAA,cAAc,YAAY,gBAAkB,uBAC5C,KAAA,cAAc,YAAY,WAAa,yBACvC,KAAA,cAAc,YAAY,eAAiB,KAGlD,CACE,eACA,gBACA,gBACA,iBACA,aACA,cACA,cACA,eACA,cACA,kBACA,eACA,gBACA,cACA,iBACA,cACA,eACA,eACA,gBACA,QACA,kBACA,mBACA,iBACA,eACA,gBACA,YACA,uBACA,WACA,eACA,gBAAA,EACA,QAAS/B,GAAS,CAClB,KAAK,cAAc,YAAYA,CAAI,EAAI,OAAO,OAAO,KAAK,SAAS,EAChE,OAAQiC,GAAcA,GAAa,IAAI,EACvC,IAAKA,GAAcA,EAAU,cAAcjC,CAAI,CAAC,EAChD,OAAO,CAACb,EAAMC,IAAQD,EAAOC,EAAK,CAAC,CAAA,CACvC,EAEG,KAAK,UAAU,wBAAwB,GACpC,KAAA,cAAc,YAAY,UAC7B,EAAI,KAAK,UAAU,wBAAwB,EAAE,cAAc,WAAW,EACnE,KAAA,cAAc,YAAY,WAC7B,EAAI,KAAK,UAAU,wBAAwB,EAAE,cAAc,YAAY,IAEpE,KAAA,cAAc,YAAY,UAAY,EACtC,KAAA,cAAc,YAAY,WAAa,GAG9C,MAAM,oBAAoB,CAAA,CAE9B,CCnHA,MAAM8C,EAAoE,CACxE,2CAA4C,CAC1C,KAAM,2CACN,KAAM,gBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,qCAAsC,CACpC,KAAM,qCACN,KAAM,UACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,wCAAyC,CACvC,KAAM,wCACN,KAAM,aACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CACtB,iDACA,6CACF,EACA,UAAW,CACb,EACA,wCAAyC,CACvC,KAAM,wCACN,KAAM,aACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CACtB,iDACA,6CACF,EACA,UAAW,CACb,EACA,4CAA6C,CAC3C,KAAM,4CACN,KAAM,iBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,6DAA8D,CAC5D,KAAM,6DACN,KAAM,oCACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,+DAAgE,CAC9D,KAAM,+DACN,KAAM,sCACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,8DAA+D,CAC7D,KAAM,8DACN,KAAM,qCACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,oCAAqC,CACnC,KAAM,oCACN,KAAM,SACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,wDAAyD,CACvD,KAAM,wDACN,KAAM,+BACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,CACb,EACA,0DAA2D,CACzD,KAAM,0DACN,KAAM,iCACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,CACb,EACA,0CAA2C,CACzC,KAAM,0CACN,KAAM,eACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,0CAA2C,CACzC,KAAM,0CACN,KAAM,eACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,wCAAyC,CACvC,KAAM,wCACN,KAAM,aACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CACtB,iDACA,6CACF,EACA,UAAW,CACb,EACA,wCAAyC,CACvC,KAAM,wCACN,KAAM,aACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CACtB,iDACA,6CACF,EACA,UAAW,CACb,EACA,oDAAqD,CACnD,KAAM,oDACN,KAAM,oBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CACtB,iDACA,6CACF,EACA,UAAW,CACb,EACA,0CAA2C,CACzC,KAAM,0CACN,KAAM,eACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,uCAAwC,CACtC,KAAM,uCACN,KAAM,YACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,2CAA4C,CAC1C,KAAM,2CACN,KAAM,gBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,yCAA0C,CACxC,KAAM,yCACN,KAAM,cACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,qDAAsD,CACpD,KAAM,qDACN,KAAM,4BACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,CACb,EACA,mDAAoD,CAClD,KAAM,mDACN,KAAM,0BACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,CACb,EACA,yCAA0C,CACxC,KAAM,yCACN,KAAM,cACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,8CAA+C,CAC7C,KAAM,8CACN,KAAM,mBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,6CAA8C,CAC5C,KAAM,6CACN,KAAM,oBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,uDAAwD,CACtD,KAAM,uDACN,KAAM,8BACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,yDAA0D,CACxD,KAAM,yDACN,KAAM,gCACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,wDAAyD,CACvD,KAAM,wDACN,KAAM,+BACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,uCAAwC,CACtC,KAAM,uCACN,KAAM,YACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EACb,EACA,2CAA4C,CAC1C,KAAM,2CACN,KAAM,gBACN,eAAgB,GAChB,cAAe,GACf,uBAAwB,CAAC,wCAAyC,yCAAyC,EAC3G,UAAW,EAAA,CAEf,gq5UChPMC,EAAa,IACbC,EAAW,GAAK,GAAKD,EAE3B,IAAIE,EAAwB,SAAS,eAAe,uBAAuB,EACvEC,EAAc,SAAS,eAAe,uBAAuB,EAE7DC,GAAS,IAAI,OAAO,IAAwC,IAAA,gDAAA,YAAA,GAAA,EAAA,CAAE,KAAM,QAAA,CAAU,EAE9ER,EAAS,IAAID,EACbZ,EAAO,CAAC,KAAM,KAAM,IAAI,EACxBsB,EAAS,CAAC,KAAM,KAAM,IAAI,EAC1BC,EAAY,CAAC,KAAM,KAAM,KAAM,IAAI,EACnCC,EAAa,CAAC,EACdC,EAAgB,CAAC,EAIrBJ,GAAO,UAAY,SAAUK,EAAO,CAC1B,OAAAA,EAAM,KAAK,KAAM,CACvB,IAAK,oBACHN,EAAY,MAAM,MAAQ,OAC1BA,EAAY,UAAY,OACHO,GAAAD,EAAM,KAAK,SAAS,EACzCP,EAAsB,SAAW,GACjC,MACF,IAAK,sBACH,IAAIS,EAAW,KAAK,MAAM,IAAMF,EAAM,KAAK,QAAQ,EACvCN,EAAA,MAAM,MAAQQ,EAAW,IACrCR,EAAY,UAAYQ,EAAW,IACnC,MACF,IAAK,mBACHC,GAAeH,EAAM,KAAK,MAAM,SAAA,CAAU,EAC1C,KAAA,CAEN,EAMA,SAASI,IAAuB,CAC9B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,YAAa,WAAY,WAAY,OAAO,EAAE,QAASlC,GAAS,CACxGmC,GAAoBnC,CAAI,EACxBoC,GAA0BpC,CAAI,CAAA,CAC/B,CACH,CAEA,SAASmC,GAAoBE,EAAe,CAC1C,IAAIC,EAAW,mBACXD,GAAiB,aAAeA,GAAiB,WACvCC,GAAA,SAEAA,GAAAD,EAEV,IAAAE,EAAgB,SAAS,eAAeD,CAAQ,EAEhDE,EAAgB,OAAO,OAAO1F,CAAa,EAC5C,OAAQ2F,GAASA,EAAK,cAAgB,4BAA4B,EAClE,OAAQA,GAASA,EAAK,gBAAgB,MAAQ,oBAAsBJ,CAAa,EACjF,KAAK,CAACK,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAE3C,UAAWxB,KAAa,OAAO,OAAOqB,CAAa,EACjDD,EAAc,IAAI,IAAI,OAAOpB,EAAU,KAAMA,EAAU,IAAI,CAAC,EAGhDoB,EAAA,iBAAiB,SAAWT,GAAU,CAClDc,GAAuBd,EAAOO,CAAa,CAAA,CAC5C,CACH,CAEA,SAASD,GAA0BC,EAAe,CAChD,IAAIQ,EAAU,kCACVR,GAAiB,aAAeA,GAAiB,WACxCQ,GAAA,SAEAA,GAAAR,EAGT,IAAAS,EAAe,SAAS,eAAeD,CAAO,EAClDC,EAAa,MAAQ,IACRA,EAAA,iBAAiB,SAAUC,EAA4B,CACtE,CAEA,SAASH,GAAuBd,EAAO9B,EAAM,CAC3C,IAAIqC,EAAgB,oBAAsBrC,EAEtC,GAAA,CAAC8B,EAAM,OAAO,MAAO,CACFkB,EAAA,EACZC,EAAA,EACT,MAAA,CAGanG,EAAcgF,EAAM,OAAO,KAAK,EAGlC,gBAAgB,MAAQO,IAIjCrC,GAAQ,aACT,SAAS,eAAe,0BAA0B,EAAwB,MAAQ,GAClF,SAAS,eAAe,yCAAyC,EAAuB,MAAQ,KAG/FA,GAAQ,YAAciB,EAAO,UAAU,2BAA2B,IACnE,SAAS,eAAe,wBAAwB,EAAwB,MAAQ,GAChF,SAAS,eAAe,uCAAuC,EAAuB,MAAQ,KAG5E+B,EAAA,EACZC,EAAA,EACX,CAEA,SAASF,IAA+B,CACjBC,EAAA,EACZC,EAAA,CACX,CAEA,SAASD,GAAuB,CAC9B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,YAAa,WAAY,WAAY,OAAO,EAAE,QAAShD,GAAS,CACxG,IAAIqC,EAAgB,oBAAsBrC,EACtCkD,EAAalD,GACbA,GAAQ,aAAeA,GAAQ,cACpBkD,EAAA,UAIf,IAAIC,EADkB,SAAS,eAAe,mBAAqBD,CAAU,EACzC,MAEpC,GAAI,CAACC,EAAe,CACXlC,EAAA,UAAUoB,CAAa,EAAI,KAClC,MAAA,CAGE,IAAAxF,EAAWC,EAAcqG,CAAa,EAGtC,GAAAtG,EAAS,gBAAgB,MAAQwF,EAAe,CAC3CpB,EAAA,UAAUoB,CAAa,EAAI,KAClC,MAAA,CAGF,IAAIzF,EAAmB,OACpB,SAAS,eAAe,kCAAkCsG,CAAU,EAAE,EAAuB,KAChG,EACAjC,EAAO,UAAUoB,CAAa,EAAI,IAAI3F,EAAUG,EAAS,KAAMD,CAAgB,CAAA,CAChF,CACH,CAMA,SAASwG,IAAsB,CAC7BnC,EAAO,oBAAoB,EAEvB,IAAAoC,EAAqB,SAAS,eAAe,4BAA4B,EACzEC,EAAcrC,EAAO,cAAc,YAAY,gBAChCoC,EAAA,UAAYE,GAAqBD,CAAW,EAAE,KAE7D,IAAAE,EAAoB,SAAS,eAAe,uBAAuB,EACnEC,EAAaC,GAAoBzC,EAAO,cAAc,YAAY,UAAU,EAChFuC,EAAkB,UAAYC,EAAW,KAErC,IAAAE,EAAwB,SAAS,eAAe,2BAA2B,EAC/EA,EAAsB,WAAa1C,EAAO,cAAc,YAAY,eAAiB,KAAK,iBAAmB,IAE7G,CACE,eACA,gBACA,qBACA,gBACA,sBACA,iBACA,sBACA,iBACA,uBACA,kBACA,iBACA,oBACA,qBACA,qBACA,sBACA,aACA,uBACA,wBACA,qBAAA,EACA,QAAS/B,GAAS,CAClB,IAAI0E,EAAU,SAAS,eAAe,cAAgB1E,CAAI,EAClD0E,EAAA,UAAY,KAAK,MAAM3C,EAAO,cAAc/B,CAAI,CAAC,EAAE,SAAS,CAAA,CACrE,EAED,CACE,kBACA,eACA,gBACA,cACA,iBACA,YACA,uBACA,UACA,UACA,gBAAA,EACA,QAASA,GAAS,CAClB,IAAI0E,EAAU,SAAS,eAAe,cAAgB1E,CAAI,EACtDvB,GAAS,IAAMsD,EAAO,cAAc,YAAY/B,CAAI,GAAG,eAAe,GAAI,CAC5E,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EACD0E,EAAQ,UAAYjG,EAAQ,GAAA,CAC7B,CACH,CAMA,SAASkG,IAAmB,CACzB,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAASC,GAAU,CAC9F,IAAIC,EAAa,SAAS,eAAe,cAAcD,CAAK,EAAE,EAC9DC,EAAW,MAAQ,IACRA,EAAA,iBAAiB,SAAUC,EAAiB,CAAA,CACxD,CACH,CAEA,SAASA,IAAoB,CACdC,GAAA,EACJhB,EAAA,CACX,CAEA,SAASgB,IAAe,CACrB,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAASH,GAAU,CAC9F,IAAIC,EAAa,SAAS,eAAe,cAAcD,CAAK,EAAE,EAC9D7C,EAAO,GAAG6C,CAAK,OAAO,EAAI,OAAOC,EAAW,KAAK,CAAA,CAClD,CACH,CAMA,SAASG,IAAkB,CACzB,QAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIP,EAAU,SAAS,eAAe,cAAgBO,CAAC,EAEnDC,EAAY,OAAO,OAAOtH,CAAa,EACxC,OAAQ2F,GAASA,EAAK,cAAgB,uBAAuB,EAC7D,KAAK,CAACC,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAE3C,UAAWvC,KAAQ,OAAO,OAAOgE,CAAS,EACxCR,EAAQ,IAAI,IAAI,OAAOxD,EAAK,KAAMA,EAAK,IAAI,CAAC,EAGtCwD,EAAA,iBAAiB,SAAUS,EAAiB,CAAA,CAExD,CAEA,SAASA,IAAoB,CACXC,GAAA,EACPrB,EAAA,CACX,CAEA,SAASqB,IAAkB,CACzB,QAASH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAII,EAAa,SAAS,eAAe,cAAgBJ,CAAC,EAEtD,GADC/D,EAAA+D,CAAC,EAAII,EAAW,MACjBnE,EAAK+D,CAAC,GAAK,CAACvC,EAAWxB,EAAK+D,CAAC,CAAC,EAAG,CACnC,IAAItH,EAAWC,EAAcsD,EAAK+D,CAAC,CAAC,EACpCvC,EAAWxB,EAAK+D,CAAC,CAAC,EAAI,gBAAgBtH,EAAS,iBAAiB,qBAAqB,CAAA,CACvF,CAEJ,CAEA,SAAS2H,IAAe,CACtB,QAASL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5B,EAAgB,SAAS,eAAe,cAAgB4B,CAAC,EACzDM,EAAgB,SAAS,eAAe,qBAAuBN,CAAC,EAEpE5B,EAAc,SAAW4B,GAAKlD,EAAO,cAAc,YAAY,UACjDwD,EAAA,SAAWN,GAAKlD,EAAO,cAAc,YAAY,WAAa,CAACb,EAAK+D,CAAC,CAAA,CAEvF,CAMA,SAASO,IAAoB,CAC3B,QAASP,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIP,EAAU,SAAS,eAAe,eAAiBO,CAAC,EAEpDQ,EAAa,OAAO,OAAO7H,CAAa,EACzC,OAAQ2F,GAASA,EAAK,cAAgB,wBAAwB,EAC9D,OAAQA,GAASA,EAAK,iBAAiB,sBAAsB,sBAAsB,CAAC,EACpF,KAAK,CAACC,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAE3C,UAAWtC,KAAS,OAAO,OAAOsE,CAAU,EAC1Cf,EAAQ,IAAI,IAAI,OAAOvD,EAAM,KAAMA,EAAM,IAAI,CAAC,EAGxCuD,EAAA,iBAAiB,SAAUgB,EAAkB,CAAA,CAEzD,CAEA,SAASA,IAAqB,CACVC,GAAA,EACHC,GAAA,CACjB,CAEA,SAASD,IAAoB,CAC3B,QAASV,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIY,EAAc,SAAS,eAAe,eAAiBZ,CAAC,EAExD,GADGzC,EAAAyC,CAAC,EAAIY,EAAY,MACpBrD,EAAOyC,CAAC,GAAK,CAACvC,EAAWF,EAAOyC,CAAC,CAAC,EAAG,CACvC,IAAItH,EAAWC,EAAc4E,EAAOyC,CAAC,CAAC,EACtCvC,EAAWF,EAAOyC,CAAC,CAAC,EAAI,gBAAgBtH,EAAS,iBAAiB,qBAAqB,CAAA,CACzF,CAEJ,CAEA,SAASiI,IAAiB,CACxB,QAASX,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5B,EAAgB,SAAS,eAAe,eAAiB4B,CAAC,EAC1DM,EAAgB,SAAS,eAAe,sBAAwBN,CAAC,EAErE5B,EAAc,SAAW4B,GAAKlD,EAAO,cAAc,YAAY,WACjDwD,EAAA,SAAWN,GAAKlD,EAAO,cAAc,YAAY,YAAc,CAACS,EAAOyC,CAAC,CAAA,CAE1F,CAMA,SAASa,IAAuB,CAC9B,QAASb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5B,EAAgB,SAAS,eAAe,iBAAmB4B,CAAC,EAC5DrB,EAAe,SAAS,eAAe,qBAAuBqB,CAAC,EAEnErB,EAAa,MAAQ,IAErB,IAAImC,EAAgB,OAAO,OAAOtG,CAAgB,EAAE,KAAK,CAAC+D,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAE5F,UAAWrC,KAAW,OAAO,OAAO2E,CAAa,EAC/C1C,EAAc,IAAI,IAAI,OAAOjC,EAAQ,KAAMA,EAAQ,IAAI,CAAC,EAG5CiC,EAAA,iBAAiB,SAAU2C,EAAoB,CAAA,CAEjE,CAEA,SAASA,IAAuB,CACXC,GAAA,EACHC,GAAA,CAClB,CAEA,SAASD,IAAqB,CAC5B,QAAShB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkB,EAAgB,SAAS,eAAe,iBAAmBlB,CAAC,EAE5D,GADMxC,EAAAwC,CAAC,EAAIkB,EAAc,MACzB1D,EAAUwC,CAAC,GAAK,CAACvC,EAAWD,EAAUwC,CAAC,CAAC,EAAG,CAC7C,IAAIzF,EAAcC,EAAiBgD,EAAUwC,CAAC,CAAC,EAC/CvC,EAAWD,EAAUwC,CAAC,CAAC,EAAI,gBAAgBzF,EAAY,qBAAqB,CAAA,CAC9E,CAEJ,CAEA,SAAS0G,IAAkB,CACzB,QAASjB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5B,EAAgB,SAAS,eAAe,iBAAmB4B,CAAC,EAC5DrB,EAAe,SAAS,eAAe,qBAAuBqB,CAAC,EAC/DM,EAAgB,SAAS,eAAe,wBAA0BN,CAAC,EAEvE5B,EAAc,SAAWtB,EAAO,kBAAoBqE,EAAiCnB,EAAI,CAAC,EAC1FrB,EAAa,SAAW7B,EAAO,kBAAoBqE,EAAiCnB,EAAI,CAAC,EAC3EM,EAAA,SAAWxD,EAAO,kBAAoBqE,EAAiCnB,EAAI,CAAC,GAAK,CAACxC,EAAUwC,CAAC,CAAA,CAE/G,CAMA,SAASoB,IAAmB,CACd,SAAS,eAAe,cAAc,EAC5C,iBAAiB,gBAAkBzD,GAAU0D,GAAyB1D,CAAK,CAAC,EAE1D,SAAS,eAAe,wBAAwB,EACtD,iBAAiB,QAAUA,GAAU2D,GAA6B,CAAC,EAE9D,SAAS,eAAe,kBAAkB,EAChD,iBAAiB,QAAU3D,GAAU4D,GAA6B,CAAC,EAEzD,SAAS,eAAe,sBAAsB,EACpD,iBAAiB,QAAU5D,GAAU6D,GAAiC,CAAC,EAE5F,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAIC,EAA0B,SAAS,eAAe,2BAA6B,CAAC,EAChFC,EAAyB,SAAS,eAAe,0BAA4B,CAAC,EAC9EC,EAA0B,SAAS,eAAe,2BAA6B,CAAC,EAChFC,EAAoB,SAAS,eAAe,qBAAuB,CAAC,EACpEC,EAAsB,SAAS,eAAe,uBAAyB,CAAC,EAE5EJ,EAAwB,iBAAiB,SAAW9D,GAAUmE,GAA+BnE,EAAO,CAAC,CAAC,EACtG+D,EAAuB,iBAAiB,SAAW/D,GAAUoE,GAA8BpE,EAAO,CAAC,CAAC,EACpGgE,EAAwB,iBAAiB,SAAWhE,GAAUqE,GAA8BrE,EAAO,CAAC,CAAC,EACrGiE,EAAkB,iBAAiB,SAAWjE,GAAUsE,GAAyBtE,EAAO,CAAC,CAAC,EAC1FkE,EAAoB,iBAAiB,QAAUlE,GAAUuE,GAA2BvE,EAAO,CAAC,CAAC,CAAA,CAEjG,CAEA,SAAS0D,GAAyB1D,EAAO,CACvC,IAAI2C,EAAgB3C,EAAM,cAEtBwE,EAAc7B,EAAc,aAAa,qBAAqB,EAC9D8B,EAAe,OAAO9B,EAAc,aAAa,sBAAsB,CAAC,EAExE+B,EACJ,OAAQF,EAAa,CACnB,IAAK,OACHE,EAAgBpG,EAAKmG,CAAY,EACjC,MACF,IAAK,QACHC,EAAgB9E,EAAO6E,CAAY,EACnC,MACF,IAAK,UACHC,EAAgB7E,EAAU4E,CAAY,EACtC,KAAA,CAGA,IAAAE,EAAoB,SAAS,eAAe,yBAAyB,EACzEA,EAAkB,MAAQD,EAC1B3E,EAAgBD,EAAW4E,CAAa,EACrBE,EAAA,CACrB,CAEA,SAASjB,GAAwB3D,EAAO,CAEtC,IAAI0E,EADoB,SAAS,eAAe,yBAAyB,EACnC,MAEtC5E,EAAW4E,CAAa,EAAI3E,CAC9B,CAEA,SAASoE,GAA+BnE,EAAO6E,EAAO,CACpD9E,EAAc8E,CAAK,EAAE,eAAiB7E,EAAM,OAAO,MACrCD,EAAA8E,CAAK,EAAE,cAAgB,GACvB9E,EAAA8E,CAAK,EAAE,eAAiB,GACxB9E,EAAA8E,CAAK,EAAE,MAAQ,EAEVD,EAAA,CACrB,CAEA,SAASR,GAA8BpE,EAAO6E,EAAO,CACnD9E,EAAc8E,CAAK,EAAE,cAAgB7E,EAAM,OAAO,MACpCD,EAAA8E,CAAK,EAAE,eAAiB,GACxB9E,EAAA8E,CAAK,EAAE,MAAQ,EAEVD,EAAA,CACrB,CAEA,SAASP,GAA8BrE,EAAO6E,EAAO,CACnD9E,EAAc8E,CAAK,EAAE,eAAiB7E,EAAM,OAAO,MAEhC4E,EAAA,CACrB,CAEA,SAASN,GAAyBtE,EAAO6E,EAAO,CAC9C9E,EAAc8E,CAAK,EAAE,MAAQ,OAAO7E,EAAM,OAAO,KAAK,EAEnC4E,EAAA,CACrB,CAEA,SAASL,GAA2BvE,EAAO6E,EAAO,CAClC9E,EAAA,OAAO8E,EAAO,CAAC,EAEVD,EAAA,CACrB,CAEA,SAAShB,GAAwB5D,EAAO,CAClCD,EAAc,QAAU,IAI5BA,EAAc,KAAK,CACjB,eAAgB,GAChB,cAAe,GACf,eAAgB,GAChB,MAAO,CAAA,CACR,EAEkB6E,EAAA,EACrB,CAEA,SAASf,GAA4B7D,EAAO,CAE1C,IAAI0E,EADoB,SAAS,eAAe,yBAAyB,EACnC,MAElCA,EAAc,WAAW,SAAS,EACpC3E,EAAgB,gBAAgB/E,EAAc0J,CAAa,EAAE,iBAAiB,qBAAqB,EAEnG3E,EAAgB,gBAAgBlD,EAAiB6H,CAAa,EAAE,qBAAqB,EAGpEE,EAAA,CACrB,CAEA,SAASA,GAAqB,CACxB,IAAAE,EAA0B,SAAS,eAAe,kBAAkB,EACpE/E,EAAc,QAAU,EAC1B+E,EAAwB,UAAY,wCAEpCA,EAAwB,UAAY,iBAGlC,IAAAC,EAAmB,SAAS,eAAe,kBAAkB,EAChDA,EAAA,SAAWhF,EAAc,QAAU,EAEpD,IAAIiF,EAAgB,GAEpB,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAIC,EAAiB,SAAS,eAAe,gBAAkB,CAAC,EAE5D,GAAA,CAAClF,EAAc,CAAC,EAAG,CACrBmF,EAAYD,CAAc,EAC1B,QAAA,CAGFE,EAAYF,CAAc,EAE1B,IAAInB,EAA0B,SAAS,eAAe,2BAA6B,CAAC,EAChFC,EAAyB,SAAS,eAAe,0BAA4B,CAAC,EAC9EC,EAA0B,SAAS,eAAe,2BAA6B,CAAC,EAChFC,EAAoB,SAAS,eAAe,qBAAuB,CAAC,EAKxE,GAHAkB,EAAYrB,CAAuB,EACnCsB,GAA4BtB,CAAuB,EAE/C/D,EAAc,CAAC,EAAE,gBAAkB,GAAI,CACzCmF,EAAYnB,CAAsB,EAClCmB,EAAYlB,CAAuB,EACnCkB,EAAYjB,CAAiB,EACbe,EAAA,GAChB,QAAA,CAOF,GAJwBlB,EAAA,MAAQ/D,EAAc,CAAC,EAAE,eACjDoF,EAAYpB,CAAsB,EAClCsB,GAA2BtB,EAAwBhE,EAAc,CAAC,EAAE,cAAc,EAE9EA,EAAc,CAAC,EAAE,eAAiB,GAAI,CACxCmF,EAAYlB,CAAuB,EACnCkB,EAAYjB,CAAiB,EACbe,EAAA,GAChB,QAAA,CAOF,GAJuBjB,EAAA,MAAQhE,EAAc,CAAC,EAAE,cAChDoF,EAAYnB,CAAuB,EACnCsB,GAA4BtB,EAAyBjE,EAAc,CAAC,EAAE,aAAa,EAE/EA,EAAc,CAAC,EAAE,gBAAkB,GAAI,CACzCmF,EAAYjB,CAAiB,EACbe,EAAA,GAChB,QAAA,CAGsBhB,EAAA,MAAQjE,EAAc,CAAC,EAAE,eAE7CwF,GAAiCxF,EAAc,CAAC,EAAE,cAAc,EAAE,YACpEoF,EAAYlB,CAAiB,EACXA,EAAA,MAAQlE,EAAc,CAAC,EAAE,OAE3CmF,EAAYjB,CAAiB,CAC/B,CAGE,IAAAuB,EAAoB,SAAS,eAAe,wBAAwB,EACxEA,EAAkB,SAAW,CAACR,CAChC,CAEA,SAASI,GAA4BtD,EAAS,CAC5CA,EAAQ,OAAS,EACjBA,EAAQ,IAAI,IAAI,OAAO,GAAI,EAAE,CAAC,EAE9B,UAAWzF,KAAc,OAAO,OAAOF,CAAgC,EAAE,KAAK,CAACyE,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAC/GiB,EAAQ,IAAI,IAAI,OAAOzF,EAAW,KAAMA,EAAW,IAAI,CAAC,CAE5D,CAQA,SAASgJ,GAA2BvD,EAASpG,EAAgB,CACvD,IAAAW,EAAaF,EAAiCT,CAAc,EAE5D+J,EAAa,CAAC,EACdpJ,EAAW,eACAoJ,EAAA,OAAO,OAAOnG,CAA+B,EAAE,OAAQoG,GAAcA,EAAU,cAAc,EAE7FD,EAAA,OAAO,OAAOnG,CAA+B,EAAE,OAAQoG,GAAcA,EAAU,aAAa,EAG3G5D,EAAQ,OAAS,EACjBA,EAAQ,IAAI,IAAI,OAAO,GAAI,EAAE,CAAC,EAE9B,UAAW4D,KAAa,OAAO,OAAOD,CAAU,EAAE,KAAK,CAAC7E,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EACxFiB,EAAQ,IAAI,IAAI,OAAO4D,EAAU,KAAMA,EAAU,IAAI,CAAC,CAE1D,CAEA,SAASJ,GAA4BxD,EAASnG,EAAe,CAGvD,IAAAgK,EAFYrG,EAAgC3D,CAAa,EAEjC,uBAAuB,IAAKd,GAAS0K,GAAiC1K,CAAI,CAAC,EAEvGiH,EAAQ,OAAS,EACjBA,EAAQ,IAAI,IAAI,OAAO,GAAI,EAAE,CAAC,EAE9B,UAAW8D,KAAc,OAAO,OAAOD,CAAW,EAAE,KAAK,CAAC/E,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAC1FiB,EAAQ,IAAI,IAAI,OAAO8D,EAAW,KAAMA,EAAW,IAAI,CAAC,CAE5D,CAEA,SAASV,EAAYpD,EAAS,CACpBA,EAAA,UAAU,OAAO,QAAQ,EACzBA,EAAA,UAAU,IAAI,QAAQ,CAChC,CAEA,SAASqD,EAAYrD,EAAS,CACpBA,EAAA,UAAU,OAAO,QAAQ,EACzBA,EAAA,UAAU,IAAI,QAAQ,CAChC,CAMA,SAAS+D,IAAY,CACf,IAAAC,EAAa,SAAS,eAAe,YAAY,EAEjDC,EAAY,OAAO,OAAOC,EAAe,EAC1C,OAAQC,GAAWA,EAAO,MAAQ,sBAAsB,EACxD,KAAK,CAACrF,EAAGC,IAAMD,EAAE,UAAYC,EAAE,SAAS,EAE3C,UAAWqF,KAAQ,OAAO,OAAOH,CAAS,EACxCD,EAAW,IAAI,IAAI,OAAOI,EAAK,KAAMA,EAAK,IAAI,CAAC,CAEnD,CAMA,SAASjG,GAAqBkG,EAAsB,CAClDC,GAAUD,CAAS,EACnBE,GAAWF,CAAS,EACpBG,GAAqBH,CAAS,EAC9BI,GAAoBJ,CAAS,EAC7BK,GAAoBL,CAAS,EAC7BM,GAAqBN,CAAS,EAC9BO,GAAeP,CAAS,EACxBQ,GAAgBR,CAAS,CAC3B,CAEA,SAASC,GAAUD,EAAsB,CACnC,IAAAS,EAAY,SAAS,eAAe,uBAAuB,EAC3DC,EAAc,CAAC,EAEfC,EAAiBX,EAAU,cAAgB3G,EAC5B2G,EAAU,OAAO,OACpC,IAAIY,GAAqBZ,EAAU,WAAaW,GAAgB,QAAQ,CAAC,EAErEE,EAAgBC,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAAC,aAAcF,CAAiB,CAAC,EAClGF,EAAY,KAAKG,CAAa,EAE9B,IAAIE,EAAW,OAAO,KAAKf,EAAU,MAAM,EACxC,OAAQgB,GAAUA,GAAS,QAAQ,EACnC,KAAK,EAER,UAAWC,KAAWF,EAAU,CAC9B,IAAIG,GAAgBlB,EAAU,OAAOiB,CAAO,EAAIN,GAAgB,QAAQ,CAAC,EACrEQ,EAAaL,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAACM,EAAuBH,CAAO,EAAE,KAAMC,CAAY,CAAC,EAClHR,EAAY,KAAKS,CAAU,CAAA,CAGnBV,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASR,GAAWF,EAAsB,CACpC,IAAAS,EAAY,SAAS,eAAe,8BAA8B,EAElEE,EAAiBX,EAAU,cAAgB3G,EAE3CgI,IADerB,EAAU,OAAO,QAAa,GACbW,GAAgB,QAAQ,CAAC,EAEzDW,EAAWR,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAAC,SAAUO,CAAa,CAAC,EACrFZ,EAAU,gBAAgBa,CAAQ,CACpC,CAEA,SAASnB,GAAqBH,EAAsB,CAC9C,IAAAS,EAAY,SAAS,eAAe,gCAAgC,EACpEC,EAAc,CAAC,EAEfC,EAAiBX,EAAU,cAAgB3G,EAO3CkI,GALkB,OAAO,OAAOvB,EAAU,iBAAiB,MAAS,EAAE,OAAO,CAACwB,EAAKnL,KAC9EmL,GAAAnL,EACAmL,GACN,CAAC,EAE4Cb,GAAgB,QAAQ,CAAC,EACrEc,EAAWX,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAAC,QAASS,CAAsB,CAAC,EAC7Fb,EAAY,KAAKe,CAAQ,EAExB,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAAS5F,GAAU,CAC1F,IAAA6F,EAAa1B,EAAU,iBAAiB,OAAUnE,EAAM,YAAa,CAAA,GAAK,EAC9E,GAAI6F,GAAc,EAChB,OAEF,IAAIC,GAAqBD,EAAaf,GAAgB,QAAQ,CAAC,EAC3DiB,EAAgBd,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAACjF,EAAO8F,CAAiB,CAAC,EAC3FjB,EAAY,KAAKkB,CAAa,CAAA,CAC/B,EAESnB,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASN,GAAoBJ,EAAsB,CAC7C,IAAAS,EAAY,SAAS,eAAe,iCAAiC,EACrEC,EAAc,CAAC,EAEfC,EAAiBX,EAAU,cAAgB3G,EAE/C,GAAI,CAAC2G,EAAU,gBAAgB,OAAW,CAC9BS,EAAA,gBAAgB,GAAGC,CAAW,EACxC,MAAA,CAGF,IAAImB,EAAkB,OAAO,QAAQ7B,EAAU,gBAAgB,MAAS,EAAE,KAAK,CAACvF,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAEpG,SAAW,CAACqH,EAAYC,CAAM,IAAKF,EAAiB,CAClD,IAAIG,GAAsBD,EAASpB,GAAgB,QAAQ,CAAC,EACxDsB,EAAgBnB,EAClB,CAAC,WAAY,mBAAmB,EAChC,CAACjM,EAAciN,CAAU,EAAE,KAAME,CAAkB,CACrD,EACAtB,EAAY,KAAKuB,CAAa,CAAA,CAGtBxB,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASL,GAAoBL,EAAsB,CAC7C,IAAAS,EAAY,SAAS,eAAe,gCAAgC,EACpEC,EAAc,CAAC,EAEfwB,EAAmBlC,EAAU,cAAgB5G,EAEjD,GAAI,CAAC4G,EAAU,gBAAgB,OAAW,CAC9BS,EAAA,gBAAgB,GAAGC,CAAW,EACxC,MAAA,CAGF,IAAIyB,EAAkB,OAAO,QAAQnC,EAAU,gBAAgB,MAAS,EAAE,KAAK,CAACvF,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAEhG2H,EAAuBD,EAAgB,OAAO,CAAC/L,EAAMC,IAAQD,EAAOC,EAAI,CAAC,EAAG,CAAC,EAC7EgM,GAA2BD,EAAuBF,GAAkB,QAAQ,CAAC,EAC7ET,EAAWX,EACb,CAAC,WAAY,oBAAqB,mBAAmB,EACrD,CAAC,QAASuB,EAAyB,MAAM,CAC3C,EACA3B,EAAY,KAAKe,CAAQ,EAEzB,SAAW,CAAC9L,EAAQoM,CAAM,IAAKI,EAAiB,CAC9C,GAAIJ,GAAU,EACZ,SAGE,IAAAO,EACJ,OAAQ3M,EAAQ,CACd,IAAK,QACU2M,EAAA,QACb,MACF,IAAK,YACUA,EAAA,aACb,MACF,QACMzN,EAAcc,CAAM,EACT2M,EAAAzN,EAAcc,CAAM,EAAE,KAC1Be,EAAiBf,CAAM,IACnB2M,EAAA5L,EAAiBf,CAAM,EAAE,MAExC,KAAA,CAEJ,IAAI4M,GAAsBR,EAASG,GAAkB,QAAQ,CAAC,EAC1DM,GAAe,IAAMT,EAAUK,GAAsB,QAAQ,CAAC,EAE9DK,EAAM3B,EACR,CAAC,WAAY,oBAAqB,mBAAmB,EACrD,CAACwB,EAAYC,EAAoBC,EAAa,GAAG,CACnD,EACA9B,EAAY,KAAK+B,CAAG,CAAA,CAGZhC,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASJ,GAAqBN,EAAsB,CAC9C,IAAAS,EAAY,SAAS,eAAe,8BAA8B,EAClEC,EAAc,CAAC,EAEfwB,EAAmBlC,EAAU,cAAgB5G,EAEjD,GAAI,CAAC4G,EAAU,iBAAiB,OAAW,CAC/BS,EAAA,gBAAgB,GAAGC,CAAW,EACxC,MAAA,CAGF,IAAIgC,EAAmB,OAAO,QAAQ1C,EAAU,iBAAiB,MAAS,EAAE,KAAK,CAACvF,EAAGC,IAAMA,EAAE,CAAC,EAAID,EAAE,CAAC,CAAC,EAElGkI,EAAwBD,EAAiB,OAAO,CAACtM,EAAMC,IAAQD,EAAOC,EAAI,CAAC,EAAG,CAAC,EAC/EuM,GAA4BD,EAAwBT,GAAkB,QAAQ,CAAC,EAC/ET,EAAWX,EACb,CAAC,WAAY,oBAAqB,mBAAmB,EACrD,CAAC,QAAS8B,EAA0B,MAAM,CAC5C,EACAlC,EAAY,KAAKe,CAAQ,EAEzB,SAAW,CAAC9L,EAAQoM,CAAM,IAAKW,EAAkB,CAC/C,GAAIX,GAAU,EACZ,SAGE,IAAAO,EACJ,OAAQ3M,EAAQ,CACd,IAAK,QACU2M,EAAA,QACb,MACF,QACeA,EAAAzN,EAAcc,CAAM,EAAE,KACnC,KAAA,CAEJ,IAAIkN,GAAuBd,EAASG,GAAkB,QAAQ,CAAC,EAC3DM,GAAe,IAAMT,EAAUY,GAAuB,QAAQ,CAAC,EAE/DF,EAAM3B,EACR,CAAC,WAAY,oBAAqB,mBAAmB,EACrD,CAACwB,EAAYO,EAAqBL,EAAa,GAAG,CACpD,EACA9B,EAAY,KAAK+B,CAAG,CAAA,CAGlB,IAAAK,EAAmB9C,EAAU,mBAAqB,MAAQ,KAC1D+C,EAAkBjC,EAAU,CAAC,WAAY,mBAAmB,EAAG,CAAC,kBAAmBgC,CAAgB,CAAC,EACxGpC,EAAY,KAAKqC,CAAe,EAEtBtC,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASH,GAAeP,EAAsB,CAC5C,IAAIgD,EAAkB,CAAC,EACnBC,EAAa,EAEbf,EAAmBlC,EAAU,cAAgB5G,EAEjD,QAAS8C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIgH,EAAY,SAAS,eAAe,2CAA6ChH,CAAC,EACtF6C,EAAYmE,CAAS,CAAA,CAGZ,SAAA,CAACtN,EAAQ8D,CAAS,IAAK,OAAO,QAAQsG,EAAU,QAAQ,MAAS,EAAG,CAC7E,IAAImD,EAAmB,CAAC,EAExB,SAAW,CAAC9K,EAAS+K,CAAY,IAAK,OAAO,QAAQ1J,CAAS,EAAG,CAC3D,IAAA2J,EAAQ,OAAO,OAAOD,CAAY,EAAE,OAAO,CAAChN,EAAMC,IAAQD,EAAOC,EAAK,CAAC,EACvEiN,EAASF,EAAa,MAAW,EACjCG,EAAS,OAAO,QAAQH,CAAY,EACrC,OAAQI,GAAUA,EAAM,CAAC,GAAK,MAAM,EACpC,OAAO,CAACpN,EAAMC,IAAQD,EAAO,OAAOC,EAAI,CAAC,CAAC,EAAIA,EAAI,CAAC,EAAG,CAAC,EAE1D8M,EAAiB9K,CAAO,EAAI,CAC1B,MAAAgL,EACA,OAAAC,EACA,OAAAC,CACF,EACIP,EAAgB3K,CAAO,GACT2K,EAAA3K,CAAO,EAAE,OAASgL,EAClBL,EAAA3K,CAAO,EAAE,QAAUiL,EACnBN,EAAA3K,CAAO,EAAE,QAAUkL,GAEnCP,EAAgB3K,CAAO,EAAI,CACzB,MAAAgL,EACA,OAAAC,EACA,OAAAC,CACF,CACF,CAGF,IAAI9C,EAAY,SAAS,eAAe,kCAAoCwC,CAAU,EACpEQ,EAAAhD,EAAW0C,EAAkBjB,CAAgB,EAE/D,IAAIwB,EAAkB,SAAS,eAAe,2CAA6CT,CAAU,EACrGjE,EAAY0E,CAAe,EAE3B,IAAIC,EAAwB,SAAS,eAAe,iDAAmDV,CAAU,EAC7GW,EAAaxC,EAAuBxL,CAAM,EAAE,KAC1B+N,EAAA,UAAY,mBAAqBC,EAAa,QAEpEX,GAAA,CAGE,IAAAY,EAAiB,SAAS,eAAe,iCAAiC,EAC5DJ,EAAAI,EAAgBb,EAAiBd,CAAgB,CACrE,CAEA,SAAS1B,GAAgBR,EAAsB,CAC7C,IAAI8D,EAAmB,CAAC,EACpBb,EAAa,EAEbf,EAAmBlC,EAAU,cAAgB5G,EAEjD,QAAS8C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIgH,EAAY,SAAS,eAAe,4CAA8ChH,CAAC,EACvF6C,EAAYmE,CAAS,CAAA,CAGZ,SAAA,CAACvN,EAAQoO,CAAO,IAAK,OAAO,QAAQ/D,EAAU,OAAO,EAAG,CACjE,GAAIrK,GAAU,SACZ,SAGF,IAAIqO,EAAoB,CAAC,EAEd,SAAA,CAAC3L,EAAS+K,CAAY,IAAK,OAAO,QAAQW,EAAQ,MAAS,EAAG,CACnE,IAAAV,EAAQ,OAAO,OAAOD,CAAY,EAAE,OAAO,CAAChN,EAAMC,IAAQD,EAAOC,EAAK,CAAC,EACvEiN,EAASF,EAAa,MAAW,EACjCG,EAAS,OAAO,QAAQH,CAAY,EACrC,OAAQI,GAAUA,EAAM,CAAC,GAAK,MAAM,EACpC,OAAO,CAACpN,EAAMC,IAAQD,EAAO,OAAOC,EAAI,CAAC,CAAC,EAAIA,EAAI,CAAC,EAAG,CAAC,EAE1D2N,EAAkB3L,CAAO,EAAI,CAC3B,MAAAgL,EACA,OAAAC,EACA,OAAAC,CACF,EACIO,EAAiBzL,CAAO,GACTyL,EAAAzL,CAAO,EAAE,OAASgL,EAClBS,EAAAzL,CAAO,EAAE,QAAUiL,EACnBQ,EAAAzL,CAAO,EAAE,QAAUkL,GAEpCO,EAAiBzL,CAAO,EAAI,CAC1B,MAAAgL,EACA,OAAAC,EACA,OAAAC,CACF,CACF,CAGF,IAAI9C,EAAY,SAAS,eAAe,mCAAqCwC,CAAU,EACrEQ,EAAAhD,EAAWuD,EAAmB9B,CAAgB,EAEhE,IAAIwB,EAAkB,SAAS,eAAe,4CAA8CT,CAAU,EACtGjE,EAAY0E,CAAe,EAE3B,IAAIC,EAAwB,SAAS,eAAe,kDAAoDV,CAAU,EAC9GgB,EAAa7C,EAAuBzL,CAAM,EAAE,KAC1BgO,EAAA,UAAY,oBAAsBM,EAAa,QAErEhB,GAAA,CAGE,IAAAY,EAAiB,SAAS,eAAe,kCAAkC,EAC7DJ,EAAAI,EAAgBC,EAAkB5B,CAAgB,CACtE,CAEA,SAASuB,EACPhD,EACA8C,EACArB,EACA,CACA,IAAIxB,EAAc,CAAC,EAEfwD,EAAmB,OAAO,QAAQX,CAAM,EAAE,KAAK,CAAC9I,EAAGC,IAAMA,EAAE,CAAC,EAAE,OAASD,EAAE,CAAC,EAAE,MAAM,EAElF0J,EAAaD,EAAiB,OAAO,CAAC9N,EAAMC,IAAQD,EAAOC,EAAI,CAAC,EAAE,MAAO,CAAC,EAC1E+N,EAAcF,EAAiB,OAAO,CAAC9N,EAAMC,IAAQD,EAAOC,EAAI,CAAC,EAAE,OAAQ,CAAC,EAC5EgO,EAAcH,EAAiB,OAAO,CAAC9N,EAAMC,IAAQD,EAAOC,EAAI,CAAC,EAAE,OAAQ,CAAC,EAC5EiO,GAAmB,KAAOH,EAAaC,GAAgBD,GAAY,QAAQ,CAAC,EAC5EI,GAAwBF,EAAcnC,GAAkB,QAAQ,CAAC,EAEjET,EAAWX,EACb,CAAC,WAAY,oBAAqB,oBAAqB,mBAAmB,EAC1E,CAAC,QAASwD,EAAiB,IAAKC,EAAsB,MAAM,CAC9D,EACA7D,EAAY,KAAKe,CAAQ,EAEzB,SAAW,CAACpJ,EAASmM,CAAU,IAAKN,EAAkB,CAChD,IAAAO,EACJ,OAAQpM,EAAS,CACf,IAAK,aACWoM,EAAA,cACd,MACF,IAAK,QACWA,EAAA,QACd,MACF,IAAK,kBACWA,EAAA,mBACd,MACF,QACgBA,EAAA/N,EAAiB2B,CAAO,EAAE,KACxC,KAAA,CAGA,IAAAqM,GAAc,KAAOF,EAAW,MAAQA,EAAW,QAAWA,EAAW,OAAO,QAAQ,CAAC,EACzFG,GAAmBH,EAAW,OAAStC,GAAkB,QAAQ,CAAC,EAClEM,GAAe,IAAMgC,EAAW,OAAUH,GAAa,QAAQ,CAAC,EAEhE5B,EAAM3B,EACR,CAAC,WAAY,oBAAqB,oBAAqB,mBAAmB,EAC1E,CAAC2D,EAAaC,EAAY,IAAKC,EAAiBnC,EAAa,GAAG,CAClE,EACA9B,EAAY,KAAK+B,CAAG,CAAA,CAGZhC,EAAA,gBAAgB,GAAGC,CAAW,CAC1C,CAEA,SAASI,EAAU8D,EAAkBC,EAAc,CAC7C,IAAApC,EAAMqC,EAAc,MAAO,KAAK,EAEpC,QAAS5I,EAAI,EAAGA,EAAI0I,EAAiB,OAAQ1I,IAAK,CAC5C,IAAA6I,EAASD,EAAc,MAAOF,EAAiB1I,CAAC,EAAG2I,EAAa3I,CAAC,CAAC,EACtEuG,EAAI,YAAYsC,CAAM,CAAA,CAGjB,OAAAtC,CACT,CAEA,SAASqC,EAAcE,EAASC,EAAWC,EAAY,GAAI,CACrD,IAAAvJ,EAAU,SAAS,cAAcqJ,CAAO,EAC5C,OAAArJ,EAAQ,UAAYsJ,EACpBtJ,EAAQ,UAAYuJ,EAEbvJ,CACT,CAMA,SAASwJ,IAAyB,CAC5B,IAAAC,EAAsB,SAAS,eAAe,qBAAqB,EACvEA,EAAoB,MAAQ,MAEN9L,EAAA,iBAAiB,QAAUO,GAAU,CACrD,IAAAwL,EAAkB,SAAS,iBAAiB,UAAU,EACtD,GAAAA,EAAgB,OAAS,EAAG,CAC9BA,EAAgB,QAAS1J,GAAaA,EAA6B,gBAAgB,EACnF,MAAA,CAGFrC,EAAsB,SAAW,GACjBgM,GAAA,CAAA,CACjB,CACH,CAEA,SAASA,IAAkB,CACbC,EAAA,EACHvK,EAAA,EAET,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,GAAI7C,EAAK,CAAC,GAAK,EAAIa,EAAO,cAAc,YAAY,UAAW,CACzD,IAAA8I,EAAa,IAAIlJ,EAAWT,EAAK,CAAC,EAAGwB,EAAWxB,EAAK,CAAC,CAAC,CAAC,EACrDa,EAAA,KAAK,CAAC,EAAI8I,CAAA,MAEV9I,EAAA,KAAK,CAAC,EAAI,KAGnB,GAAIS,EAAO,CAAC,GAAK,EAAIT,EAAO,cAAc,YAAY,WAAY,CAC5D,IAAA8I,EAAa,IAAIlJ,EAAWa,EAAO,CAAC,EAAGE,EAAWF,EAAO,CAAC,CAAC,CAAC,EACzDT,EAAA,OAAO,CAAC,EAAI8I,CAAA,MAEZ9I,EAAA,OAAO,CAAC,EAAI,IACrB,CAGF,QAAS,EAAI,EAAG,EAAI,EAAG,IACjB,GAAAU,EAAU,CAAC,GAAKV,EAAO,mBAAqBqE,EAAiC,EAAI,CAAC,EAAG,CACvF,IAAImI,EAAoB,SAAS,eAAe,qBAAuB,CAAC,EACpEnN,EAAU,IAAI9B,EAAQmD,EAAU,CAAC,EAAG,OAAO8L,EAAkB,KAAK,EAAG7L,EAAWD,EAAU,CAAC,CAAC,CAAC,EAC1FV,EAAA,UAAU,CAAC,EAAIX,CAAA,MAEfW,EAAA,UAAU,CAAC,EAAI,KAItB,IAAA2G,EAAa,SAAS,eAAe,YAAY,EACjDyF,EAAsB,SAAS,eAAe,qBAAqB,EAEnEK,EAAsB,OAAOL,EAAoB,KAAK,EAAI/L,EAE1DqM,EAAgB,CAClB,KAAM,mBACN,OAAA1M,EACA,SAAU2G,EAAW,MACrB,oBAAA8F,CACF,EAEAjM,GAAO,YAAYkM,CAAa,CAClC,CAMA,SAASC,IAAyB,CACP,SAAS,eAAe,oBAAoB,EAClD,iBAAiB,gBAAiBC,EAA8B,EAEvD,SAAS,eAAe,uBAAuB,EACrD,iBAAiB,QAAU/L,GAAUgM,GAA+BhM,CAAK,CAAC,EAEjE,SAAS,eAAe,6BAA6B,EAC3D,iBAAiB,QAASiM,EAA4B,CACjF,CAEA,SAASF,IAAiC,CACXG,GAAA,EACNC,EAAA,CACzB,CAEA,SAASD,IAA+B,CAClC,IAAAE,EAAwB,SAAS,eAAe,uBAAuB,EAC3EA,EAAsB,MAAQ,GAE1B,IAAAC,EAA2B,SAAS,eAAe,6BAA6B,EACpFA,EAAyB,SAAW,EACtC,CAEA,SAASF,GAAyB,CAChC,IAAItF,EAAc,CAAC,EACfyF,EAAgBC,EAAkB,EAEtC,UAAWC,KAAoB,OAAO,KAAKF,CAAa,EAAG,CACrD,IAAA1D,EAAMqC,EAAc,MAAO,UAAU,EAErCwB,EAAUxB,EAAc,MAAO,wBAAyBuB,CAAgB,EAC5E5D,EAAI,YAAY6D,CAAO,EAEnB,IAAAC,EAAgBzB,EAAc,MAAO,aAAa,EAClD0B,EAAa1B,EAAc,SAAU,kBAAmB,MAAM,EACvD0B,EAAA,aAAa,OAAQ,QAAQ,EACxCA,EAAW,iBAAiB,QAAUC,GAAMC,GAAwBL,CAAgB,CAAC,EACrFE,EAAc,YAAYC,CAAU,EACpC/D,EAAI,YAAY8D,CAAa,EAEzB,IAAAI,EAAgB7B,EAAc,MAAO,aAAa,EAClD8B,EAAa9B,EAAc,SAAU,kBAAmB,MAAM,EACvD8B,EAAA,aAAa,OAAQ,QAAQ,EACxCA,EAAW,iBAAiB,QAAUH,GAAMI,GAA0BR,CAAgB,CAAC,EACvFM,EAAc,YAAYC,CAAU,EACpCnE,EAAI,YAAYkE,CAAa,EAEzB,IAAAG,EAAkBhC,EAAc,MAAO,aAAa,EACpDiC,EAAejC,EAAc,SAAU,iBAAkB,QAAQ,EACxDiC,EAAA,aAAa,OAAQ,QAAQ,EAC1CA,EAAa,iBAAiB,QAAUN,GAAMO,GAA0BX,CAAgB,CAAC,EACzFS,EAAgB,YAAYC,CAAY,EACxCtE,EAAI,YAAYqE,CAAe,EAE/BpG,EAAY,KAAK+B,CAAG,CAAA,CAGC,SAAS,eAAe,kBAAkB,EAChD,gBAAgB,GAAG/B,CAAW,CACjD,CAEA,SAASmF,GAA+BhM,EAAO,CAC7C,IAAIoN,EAAU,GAEVpN,EAAM,OAAO,MAAM,QAAU,IACrBoN,EAAA,IAGQb,EAAkB,EACpBvM,EAAM,OAAO,KAAK,IACxBoN,EAAA,IAGR,IAAAf,EAA2B,SAAS,eAAe,6BAA6B,EACpFA,EAAyB,SAAWe,CACtC,CAEA,SAASnB,IAA+B,CAEtC,IAAIO,EADwB,SAAS,eAAe,uBAAuB,EAC9B,MAEzCa,EAAeC,GAAsB,EACrChB,EAAgBC,EAAkB,EACtCD,EAAcE,CAAgB,EAAIa,EAClCE,EAAkBjB,CAAa,EAEFJ,GAAA,EACNC,EAAA,CACzB,CAEA,SAASU,GAAwBW,EAAM,CACrC,IAAIlB,EAAgBC,EAAkB,EACfkB,GAAAnB,EAAckB,CAAI,CAAC,CAC5C,CAEA,SAASR,GAA0BQ,EAAM,CACvC,IAAIH,EAAeC,GAAsB,EACrChB,EAAgBC,EAAkB,EACtCD,EAAckB,CAAI,EAAIH,EACtBE,EAAkBjB,CAAa,CACjC,CAEA,SAASa,GAA0BK,EAAM,CACvC,IAAIlB,EAAgBC,EAAkB,EACtC,OAAOD,EAAckB,CAAI,EACzBD,EAAkBjB,CAAa,EAERH,EAAA,CACzB,CAEA,SAASI,GAAoB,CAC3B,OAAO,KAAK,MAAM,aAAa,QAAQ,eAAe,CAAC,GAAK,CAAC,CAC/D,CAEA,SAASgB,EAAkBjB,EAAe,CACxC,aAAa,QAAQ,gBAAiB,KAAK,UAAUA,CAAa,CAAC,CACrE,CAEA,SAASgB,IAAwB,CAC/B,IAAID,EAAe,CACjB,OAAQ,CAAC,EACT,UAAW,CAAC,EACZ,KAAM,CAAC,EACP,OAAQ,CAAC,EACT,UAAW,CAAC,EACZ,WAAY,CAAA,CACd,EAEC,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAASrL,GAAU,CAC9F,IAAIC,EAAa,SAAS,eAAe,cAAgBD,CAAK,EAC9DqL,EAAa,OAAOrL,CAAK,EAAI,OAAOC,EAAW,KAAK,CAAA,CACrD,EAEA,CAAA,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,WAAY,OAAO,EAAE,QAAS/D,GAAS,CACzF,IAAIwP,EAAkB,SAAS,eAAe,mBAAqBxP,CAAI,EACnEyP,EAAwB,SAAS,eAAe,kCAAoCzP,CAAI,EAE/EmP,EAAA,UAAUnP,CAAI,EAAI,CAC7B,UAAWwP,EAAgB,MAC3B,iBAAkB,OAAOC,EAAsB,KAAK,CACtD,CAAA,CACD,EAED,QAAStL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAII,EAAa,SAAS,eAAe,cAAgBJ,CAAC,EAC7CgL,EAAA,KAAKhL,CAAC,EAAII,EAAW,KAAA,CAGpC,QAASJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIY,EAAc,SAAS,eAAe,eAAiBZ,CAAC,EAC/CgL,EAAA,OAAOhL,CAAC,EAAIY,EAAY,KAAA,CAGvC,QAASZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkB,EAAgB,SAAS,eAAe,iBAAmBlB,CAAC,EAC5DsJ,EAAoB,SAAS,eAAe,qBAAuBtJ,CAAC,EAC3DgL,EAAA,UAAUhL,CAAC,EAAI,CAC1B,QAASkB,EAAc,MACvB,MAAO,OAAOoI,EAAkB,KAAK,CACvC,CAAA,CAGF,OAAA0B,EAAa,WAAavN,EAEnBuN,CACT,CAEA,SAASI,GAAuBJ,EAAc,CAC3C,CAAA,UAAW,eAAgB,SAAU,QAAS,UAAW,SAAU,OAAO,EAAE,QAASrL,GAAU,CAC9F,IAAIC,EAAa,SAAS,eAAe,cAAgBD,CAAK,EAC9DC,EAAW,MAAQoL,EAAa,OAAOrL,CAAK,GAAK,CAAA,CAClD,EAEA,CAAA,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,WAAY,OAAO,EAAE,QAAS9D,GAAS,CACzF,IAAIwP,EAAkB,SAAS,eAAe,mBAAqBxP,CAAI,EACnEyP,EAAwB,SAAS,eAAe,kCAAoCzP,CAAI,EAE5FwP,EAAgB,MAAQL,EAAa,UAAUnP,CAAI,EAAE,UACrDyP,EAAsB,MAAQN,EAAa,UAAUnP,CAAI,EAAE,gBAAA,CAC5D,EAED,QAASmE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAII,EAAa,SAAS,eAAe,cAAgBJ,CAAC,EAC/CI,EAAA,MAAQ4K,EAAa,KAAKhL,CAAC,CAAA,CAGxC,QAASA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIY,EAAc,SAAS,eAAe,eAAiBZ,CAAC,EAChDY,EAAA,MAAQoK,EAAa,OAAOhL,CAAC,CAAA,CAG3C,QAASA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkB,EAAgB,SAAS,eAAe,iBAAmBlB,CAAC,EAC5DsJ,EAAoB,SAAS,eAAe,qBAAuBtJ,CAAC,EAExEkB,EAAc,MAAQ8J,EAAa,UAAUhL,CAAC,EAAE,QAChDsJ,EAAkB,MAAQ0B,EAAa,UAAUhL,CAAC,EAAE,KAAA,CAGtDvC,EAAauN,EAAa,WAEd3B,EAAA,EACHvK,EAAA,CACX,CAMA,SAASyM,IAAoB,CACpB,OAAA,iBAAiB,QAAU5N,GAAU,CAC1CG,GAAeH,EAAM,OAAO,CAAA,CAC7B,EAEqB,SAAS,eAAe,iBAAiB,EAC/C,iBAAiB,QAAUA,GAAU,CAC/C,IAAA6N,EAAa,SAAS,eAAe,YAAY,EAC3C,UAAA,UAAU,UAAUA,EAAW,KAAK,CAAA,CAC/C,CACH,CAEA,SAAS1N,GAAe2N,EAAO,CACzB,IAAAhI,EAAa,SAAS,eAAe,YAAY,EACjDyF,EAAsB,SAAS,eAAe,qBAAqB,EAEnEwC,EAAQ,CACV,MAAAD,EACA,OAAA3O,EACA,KAAAb,EACA,OAAAsB,EACA,UAAAC,EACA,WAAAC,EACA,cAAAC,EACA,KAAM+F,EAAW,MACjB,eAAgByF,EAAoB,KACtC,EAEA,QAASlJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIsJ,EAAoB,SAAS,eAAe,qBAAuBtJ,CAAC,EAClE0L,EAAA,eAAiB1L,CAAC,EAAIsJ,EAAkB,KAAA,CAG5C,IAAAkC,EAAa,SAAS,eAAe,YAAY,EAC1CA,EAAA,MAAQ,KAAK,UAAUE,CAAK,EAGtB,IAAI,UAAU,MAAM,SAAS,eAAe,YAAY,CAAC,EAC/D,KAAK,CAClB,CAIA,SAASrC,GAAc,CACAxK,EAAA,EACRiB,GAAA,EACGK,GAAA,EACEO,GAAA,EACCM,GAAA,CACrB,CAEA,SAASlC,GAAW,CACEG,GAAA,EACPoB,GAAA,EACEM,GAAA,EACCM,GAAA,CAClB,CAEAlD,GAAqB,EACrB2B,GAAiB,EACjBK,GAAgB,EAChBQ,GAAkB,EAClBM,GAAqB,EACrB2C,GAAU,EACVpC,GAAiB,EACjB6H,GAAuB,EACvBQ,GAAuB,EACvB8B,GAAkB,EAElBlC,EAAY,EACZvK,EAAS"}